function JSCompiler_unstubMethod(a,b){return JSCompiler_stubMap[a]=b}Blockly.Block.prototype.setMutator=JSCompiler_unstubMethod(8,function(a){this.mutator&&this.mutator!==a&&this.mutator.dispose();a&&(a.block_=this,this.mutator=a,this.svg_&&a.createIcon())});Blockly.Block.prototype.appendIndentedValueInput=JSCompiler_unstubMethod(6,function(a){return this.appendInput_(Blockly.INDENTED_VALUE,a)});
Blockly.Block.prototype.appendStatementInput=JSCompiler_unstubMethod(2,function(a){return this.appendInput_(Blockly.NEXT_STATEMENT,a)});Blockly.Msg.zh_tw={};
Blockly.Msg.zh_tw.switch_language_to_chinese_tw={category:"",helpUrl:"",init:function(){Blockly.Msg.DUPLICATE_BLOCK="複製程式方塊";Blockly.Msg.REMOVE_COMMENT="刪除註解";Blockly.Msg.ADD_COMMENT="增加註解";Blockly.Msg.EXTERNAL_INPUTS="外掛輸入項";Blockly.Msg.INLINE_INPUTS="內嵌輸入項";Blockly.Msg.HORIZONTAL_PARAMETERS="橫向排列參數項";Blockly.Msg.VERTICAL_PARAMETERS="縱向排列參數項";Blockly.Msg.DELETE_BLOCK="刪除程式方塊";Blockly.Msg.DELETE_X_BLOCKS="刪除 %1 個程式方塊";Blockly.Msg.COLLAPSE_BLOCK="折疊程式方塊";Blockly.Msg.EXPAND_BLOCK="展開程式方塊";Blockly.Msg.DISABLE_BLOCK=
"停用程式方塊";Blockly.Msg.ENABLE_BLOCK="啟用程式方塊";Blockly.Msg.HELP="說明";Blockly.Msg.EXPORT_IMAGE="下載方塊圖像";Blockly.Msg.COLLAPSE_ALL="折疊所有方塊";Blockly.Msg.EXPAND_ALL="展開所有方塊";Blockly.Msg.ARRANGE_H="橫向排列所有方塊";Blockly.Msg.ARRANGE_V="縱向排列所有方塊";Blockly.Msg.ARRANGE_S="斜向排列所有方塊";Blockly.Msg.SORT_W="按寬度對所有方塊排序";Blockly.Msg.SORT_H="按高度對所有方塊排序";Blockly.Msg.SORT_C="按類別對所有方塊排序";Blockly.Msg.YAIL_OPTION="產生Yail程式碼";Blockly.Msg.DOIT_OPTION="執行該程式方塊";Blockly.MSG_CHANGE_VALUE_TITLE="修改數值:";Blockly.MSG_NEW_VARIABLE="新建變數...";
Blockly.MSG_NEW_VARIABLE_TITLE="新建變數名稱:";Blockly.MSG_RENAME_VARIABLE="變數重命名...";Blockly.MSG_RENAME_VARIABLE_TITLE='將所有 "%1" 變數重命名為:';Blockly.MSG_VARIABLE_CATEGORY="變數";Blockly.MSG_PROCEDURE_CATEGORY="程序";Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION="該程式方塊不能被定義";Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN="請從下拉式選單中選擇合適項目";Blockly.ERROR_DUPLICATE_EVENT_HANDLER="元件事件處理器重複";Blockly.ERROR_CAN_NOT_DO_IT_TITLE="無法執行該程式方塊";Blockly.ERROR_CAN_NOT_DO_IT_CONTENT="只有連接AI Companion或模擬器程序，才能執行";Blockly.Msg.LANG_COLOUR_PICKER_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic";Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP="點選方塊選取所需顏色";Blockly.Msg.LANG_COLOUR_BLACK="黑色";Blockly.Msg.LANG_COLOUR_WHITE="白色";Blockly.Msg.LANG_COLOUR_RED="紅色";Blockly.Msg.LANG_COLOUR_PINK="粉色";Blockly.Msg.LANG_COLOUR_ORANGE="橙色";Blockly.Msg.LANG_COLOUR_YELLOW="黃色";Blockly.Msg.LANG_COLOUR_GREEN="綠色";Blockly.Msg.LANG_COLOUR_CYAN="青色";Blockly.Msg.LANG_COLOUR_BLUE="藍色";Blockly.Msg.LANG_COLOUR_MAGENTA="洋紅";Blockly.Msg.LANG_COLOUR_LIGHT_GRAY=
"淺灰";Blockly.Msg.LANG_COLOUR_DARK_GRAY="深灰";Blockly.Msg.LANG_COLOUR_GRAY="灰色";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR="分解色值";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP="傳回含紅、綠、藍色值以及透明度值（0-255）的清單";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR="合成顏色";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP=
"傳回由指定紅、綠、藍色值以及透明度值合成的顏色。";Blockly.Msg.LANG_CATEGORY_CONTROLS="流程控制";Blockly.Msg.LANG_CONTROLS_IF_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#if";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1="如果值為True，則執行相關敘述方塊";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2="如果值為True，則執行第一個敘述方塊\n否則, 執行第二個敘述方塊";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3="如果第一個值為True，則執行第一個敘述方塊，\n否則，如果第二個值為True，則執行第二個敘述方塊";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4="如果第一個值為True，則執行第一個敘述方塊，\n否則，如果第二個值為True，則執行第二個敘述方塊，\n如果值皆不為True，則執行最後一個敘述方塊";
Blockly.Msg.LANG_CONTROLS_IF_MSG_IF="如果";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF="否則，如果";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE="否則";Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN="則";Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF="如果";Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP="增加、移除或重排相關元素，\n重新設置該“如果”敘述方塊功能";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF="否則，如果";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="為“如果”敘述方塊增設條件";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE="否則";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP=
"設最終條件，當所有條件均不滿足時執行";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT="重複";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO="執行";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="只要";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="直到";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="只要值為True，就重複執行相關敘述";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="只要值為False，就重複執行相關敘述";
Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1="只要條件為True，就執行「執行」區域所包含的敘述方塊";Blockly.Msg.LANG_CONTROLS_FOR_HELPURL="";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH="循序取數到";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR="x";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM="範圍從";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO="到";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO="執行";Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP='從一個數字開始取數，到另一個數結束。\n每取一個數，都將其值給予\n變數 "%1"，並執行敘述方塊。';Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange";
Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM="循序取";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR="數字";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START="範圍從";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END="到";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP="間隔為";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO="執行";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT="對一定範圍內的數字";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX="對於 ";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX=" 範圍內的";
Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP="按指定範圍和累增循序取值，每次循環均將數值指定給特定變數，並執行「執行」區域所包含的程式方塊";Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM="循序取";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR="清單項";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST="清單為";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO="執行";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT="對清單中每一項";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX=
"對於 ";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX=" 清單中的";Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP="針對清單中的每一項執行「執行」區域所包含的程式方塊， 採用指定變數名引用目前清單項。";Blockly.Msg.LANG_CONTROLS_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#get";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL="http://en.wikipedia.org/wiki/Control_flow";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP="循環";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK="中斷";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE=
"執行下一個周期";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="中斷內部循環";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="跳轉到本循環的其餘部分，並且\n執行下一個周期";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="警告：\n本程式方塊只能用於\n循環敘述方塊";Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILE_TITLE="當";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST="滿足條件";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO="執行";Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT=
"滿足條件";Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP="“執行”區域中程式方塊被執行的條件是，滿足表達式值為True。";Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose";Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE="如果";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST="";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN="則";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN="否則";Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT="如果";Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP="如果條件表達式的判斷值為True，則將關聯的求值表達式運算結果傳遞給“則-傳回”敘述槽；否則將關聯的求值表達式運算結果傳遞給“否則-傳回”敘述槽；一般只有一個傳回槽表達式能被求值。";
Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO="執行方塊";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN="傳回結果";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP="執行“執行”區域中的程式方塊並傳回一條敘述，用於在賦值前插入執行某個程序。";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT="執行敘述/傳回結果";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE="執行並傳回";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE="求值但忽視結果";
Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT="求值但不傳回";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP="執行所連接的程式方塊但不傳回運算值，用於呼叫求值程序但不需要其運算值。";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE="開啟畫面";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME=
"畫面名稱";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT="開啟畫面";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP="在多畫面應用中開啟一個新畫面。";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE="開啟畫面並傳值";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME="畫面名稱";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE=
"初始值";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT="開啟畫面並傳值";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP="在多畫面應用中開啟一個新畫面，並向其傳入初始值";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE="取得初始值";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME="畫面名稱";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE="初始值";
Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT="取得初始值";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP="畫面開啟時傳回其傳入值，在多畫面應用中開啟動作一般由其他畫面引發。如沒有內容傳入，則傳回空文字。";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE="關閉畫面 ";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT="關閉畫面 ";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP="關閉目前畫面";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE="關閉畫面並回傳值";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT="回傳值";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT="關閉畫面回傳值";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP=" 關閉目前畫面，並向開啟此畫面者傳回結果";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp";
Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE="退出程序";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT="退出程序";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP="關閉所有畫面並終止程序執行";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE="取得初始文字值";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT="取得初始文字值";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP=
" 當畫面被其他應用啟動時傳回所傳入的文字值，如沒有內容傳入，則傳回空字串。對於多畫面應用，一般較常採用取得初始值的方式，而非取得純文字值。";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE="關閉畫面並傳回文字";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT="文字值";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT="關閉畫面傳回文字";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP=
"關閉目前畫面，並向開啟此畫面的應用傳回文字。對於多畫面應用，則多採用關閉畫面回傳值的方式，而不採用關閉畫面傳回文字。";Blockly.Msg.LANG_CATEGORY_LOGIC="邏輯判斷";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL="http://en.wikipedia.org/wiki/Inequality _(mathematics)";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ="判斷二者是否相等，\n對象可為任意類型，不限於數字。";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ=
"判斷二者是否互不相等，對象可為任意類型，不限於數字。";Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME="比較";Blockly.Msg.LANG_LOGIC_COMPARE_EQ="等於";Blockly.Msg.LANG_LOGIC_COMPARE_NEQ="不等於";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or";Blockly.Msg.LANG_LOGIC_OPERATION_AND="並且";Blockly.Msg.LANG_LOGIC_OPERATION_OR="或者";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND=
"所有輸入項皆為True才傳回True。";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR="只要有輸入項為True就傳回True。";Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not";Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT="反相";Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP="如輸入項為False則傳回True，\n如輸入項為True則傳回False。";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false";
Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE="true";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE="false";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE="傳回True";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE="傳回False";Blockly.Msg.LANG_CATEGORY_MATH="數值運算";Blockly.Msg.LANG_MATH_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#number";Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP="回傳所顯示的數字 ";Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER="數字";Blockly.Msg.LANG_MATH_COMPARE_HELPURL="";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ="如果兩個數字相等則傳回True";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ="如果兩個數字不相等則傳回True";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT="如果第一個數字小於第二個數字，\n則傳回True。";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE="如果第一個數字小於或等於第二個數字，\n則傳回False。";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT="如果第一個數字大於第二個數字，\n則傳回True。";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE="如果第一個數字大於或等於第二個數字，\n則傳回False。";Blockly.Msg.LANG_MATH_COMPARE_EQ=
"=";Blockly.Msg.LANG_MATH_COMPARE_NEQ="≠";Blockly.Msg.LANG_MATH_COMPARE_LT="<";Blockly.Msg.LANG_MATH_COMPARE_LTE="≤";Blockly.Msg.LANG_MATH_COMPARE_GT=">";Blockly.Msg.LANG_MATH_COMPARE_GTE="≥";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#add";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY="http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply";
Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD="求二數之和";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS="求二數之差";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY="求二數乘積";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE="求二數之商";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER=
"求第一個數的第二個數次方";Blockly.Msg.LANG_MATH_ARITHMETIC_ADD="+";Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS="-";Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY="*";Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE="/";Blockly.Msg.LANG_MATH_ARITHMETIC_POWER="^";Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT="平方根";Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE="絕對值";Blockly.Msg.LANG_MATH_SINGLE_OP_NEG="相反值";Blockly.Msg.LANG_MATH_SINGLE_OP_LN="自然對數";Blockly.Msg.LANG_MATH_SINGLE_OP_EXP="e的次方";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT="求平方根";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS="求絕對值";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#abs";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG="求相反值";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#neg";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN="求自然對數值";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#log";
Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP="求e的次方";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP="http://appinventor.mit.edu/explore/ai2/support/blocks/math#e";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND="進位或捨去以取整數";Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND="http://appinventor.mit.edu/explore/ai2/support/blocks/math#round";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING="傳回大於等於輸入項的最小整數";Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING="http://appinventor.mit.edu/explore/ai2/support/blocks/math#ceiling";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR=
"傳回小於等於輸入項的最大整數";Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR="http://appinventor.mit.edu/explore/ai2/support/blocks/math#floor";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND="四捨五入";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING="進位後取整數";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR="捨去後取整數";Blockly.Msg.LANG_MATH_TRIG_SIN="sin";Blockly.Msg.LANG_MATH_TRIG_COS="cos";Blockly.Msg.LANG_MATH_TRIG_TAN="tan";Blockly.Msg.LANG_MATH_TRIG_ASIN="asin";Blockly.Msg.LANG_MATH_TRIG_ACOS="acos";Blockly.Msg.LANG_MATH_TRIG_ATAN=
"atan";Blockly.Msg.LANG_MATH_TRIG_ATAN2="atan2";Blockly.Msg.LANG_MATH_TRIG_ATAN2_X="x座標";Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y="y座標";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN="求正弦值";Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS="求餘弦值";Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#cos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN="求正切值";Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#tan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN="由正弦值求角度(-90,+90]";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#asin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS="由餘弦值求角度[0, 180)";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#acos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN="由正切值求角度(-90, +90)";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan";
Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2="由直角座標求角度(-180, +180]";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan2";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN="最小值";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX="最大值";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN="Return the smallest of its arguments..";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX="Return the largest of its arguments..";Blockly.Msg.LANG_MATH_DIVIDE="除以";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO=
"模數";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER="餘數";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT="商數";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO="求模數";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO="http://appinventor.mit.edu/explore/ai2/support/blocks/math#modulo";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER="求餘數";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#remainder";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT="求商數";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#quotient";Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomint";Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM="整數亂數";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM="範圍從";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO="到";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT="整數亂數從 %1 到 %2 ";Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP="傳回位於上下邊界之間的整數亂數，\n限於2的30次方範圍內";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomfrac";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM="小數亂數";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP="傳回0和1之間的亂數數值";Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomseed";Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM="亂數種子設定";Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO="為";Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP="為亂數產生器指定種子數";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT=
"角度變換";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG="弧度轉角度";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD="角度轉弧度";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG="求弧度參數對應的角度值[0, 360)";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertrad";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD="求角度參數對應的弧度值[-π, +π)";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertdeg";
Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#format";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE="求小數值";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM="數字";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES="位數";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT="將數字 %1設為小數形式 位置 %2";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP="以指定位數傳回該數值的小數形式";Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";
Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM="是否為數字？";Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP="判斷該對象是否為數字類型";Blockly.Msg.LANG_CATEGORY_TEXT="文字";Blockly.Msg.LANG_TEXT_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#string";Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP="輸入字元串文字";Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE="“";Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE="”";Blockly.Msg.LANG_TEXT_JOIN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#join";Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH=
"建立字元串文字";Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP="將所有輸入項合並為一個單獨的字元串文字，\n如沒有輸入項，則產生空文字。";Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN="合併文字";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM="字元串";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP="";Blockly.Msg.LANG_TEXT_APPEND_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.Msg.LANG_TEXT_APPEND_TO="到";Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT="附加文字";Blockly.Msg.LANG_TEXT_APPEND_VARIABLE="變數";Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP='將文字附加到變數 "%1"';
Blockly.Msg.LANG_TEXT_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#length";Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH="求長度";Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP="求該文字中所包含的字母數量(包括空格)";Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#isempty";Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY="是否為空";Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP="如文字長度為0則傳回True，否則傳回False";Blockly.Msg.LANG_TEXT_COMPARE_LT=" <";Blockly.Msg.LANG_TEXT_COMPARE_EQUAL=
" =";Blockly.Msg.LANG_TEXT_COMPARE_GT=" >";Blockly.Msg.LANG_TEXT_COMPARE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#compare";Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE="比較文字";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT="判斷text1的首字母順序是否低於text2，\n如果第一個字母相同，則長度較短的文字順序提高，\n大寫字元順序優於小寫字元。";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL="判斷字串內容是否相同，即，\n是否由同一組相同順序的字元組成，與通常的相等概念不同的是，\n當字串為數字時，如123和0123，儘管數字相等，\n但以文字角度來看是不等的。";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT="告知text1的字首順序是否高於text2，\n如首字母相同，則長度較短的文字順序提高，\n大寫字元順序優於小寫字元。(以ASCII順序比較)";
Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE="大寫";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE="小寫";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE="將字元串參數複製並轉為大寫後傳回";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#upcase";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE="將字元串參數複製並轉為小寫後傳回";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#downcase";Blockly.Msg.LANG_TEXT_TRIM_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#trim";Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM="刪除空格";Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP="將字元串參數複製並刪除首尾處的空格後傳回";Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#startsat";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT="字串位置";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT="文字";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE="字串";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT="求字串%2在文字%1中的起始位置";Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP=
"求字串在文字中的起始位置，\n其中1表示文字的起始處，\n 而如字串不在文字中則傳回0。";Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS="包含字串";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT="文字";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE="字串";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT="檢查文字%1中是否包含字串%2";Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP="檢查文字中是否包含該字串";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL="";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT="文字";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT=
"分隔符號";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST="分隔符號 (清單)";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST="分解首項";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY="分解任意首項";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT="分解";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY="任意分解";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST='在首次出現分隔符號的位置將給定文字分解為兩部分，\n並傳回包含分隔點前和分隔點後兩部分內容的清單，\n如分解字元串"蘋果,香蕉,櫻桃,狗糧"，以逗號作為分隔符號，\n將傳回一個包含兩項的清單，其中第一項內容為"蘋果"，第二項內容則為\n"香蕉,櫻桃,狗糧"。\n注意，"蘋果"後面的逗號不在結果中出現，\n因為它起到分隔符號的作用。';
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitat";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY='以清單中的任意項作為分隔符號，\n在首次出現分隔符號的位置將給定文字分解為一個兩項清單。\n\n如以"(稥,蘋)"作為分隔符號分解"我喜歡蘋果香蕉蘋果葡萄"，\n將傳回一個兩項清單，其第一項為"我喜歡"，第二項為\n"果香蕉蘋果葡萄"';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatfirstofany";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT='以指定文字作為分隔符號，將字元串分解為不同片段，並產生一個清單作為傳回結果。\n 如以","(逗號)分解"一,二,三,四"，將傳回清單"(一 二 三 四)"，\n 而以"-土豆"作為分隔符號分解字元串"一-土豆,二-土豆,三-土豆,四"，則傳回清單"(一 二 三 四)"。';
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT="http://appinventor.mit.edu/explore/ai2/support/blocks/text#split";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY='以分隔符號清單中的任意一項作為分隔符號，將給定文字分解為清單，\n並將清單作為處理結果傳回。\n如分解字元串"藍莓,香蕉,草莓,狗糧"，以一個含兩元素的清單作為分隔符號，\n其中第一項為逗號，第二項為"莓"，則傳回清單：\n"(藍 香蕉 草 狗糧)"';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatany";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces";
Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE="用空格區隔";Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP="以空格作為分隔符號，將文字分解為若干部分。";Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#segment";Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT="提取字串";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START="提取位置";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH="提取長度";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT="文字";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT="從文字%1第%2位置提取長度為%3的字串";Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP=
"以指定長度、指定位置從指定文字中提取文字片段，\n位置1表示被提取文字的起始處。";Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT="取代項";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT="原始文字";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL="全部取代";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT="取代為";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT="將文字%2中所有%1全部取代為%3";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP="傳回一個新文字字元串，其中所包含的取代項內容\n均被取代為指定的字串。";
Blockly.Msg.LANG_CATEGORY_LISTS="清單 ";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_HELPURL="http://en.wikipedia.org/wiki/Linked_list#Empty _lists";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE="建立空清單 ";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TOOLTIP="傳回一個項數為零的清單對象";Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist";Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST="建立清單";Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP="建立一個可包含任意項數的清單";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD=
"清單";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP="重新配置該清單塊，為其增加、刪除或重新排列所包含的區間。";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE="清單項";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP="增加一個清單項";Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE="清單項";Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP="增加一個清單項";Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem";
Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT="選擇清單項";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST="清單";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX="索引值";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT="選擇清單%1中索引值為%2的清單項";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP="求指定位置的清單項";Blockly.Msg.LANG_LISTS_IS_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist";Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN="是否在清單中?";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING="對象";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST=
"清單";Blockly.Msg.LANG_LISTS_IS_IN_INPUT="檢查清單%2中是否含清單項%1";Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP="如該對象為清單中某一項則傳回True，否則為False。";Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist";Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION="清單項索引值";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING="對象";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST="清單";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT="求清單項%1在清單%2中的位置";Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP=
"求對象在該清單中的位置，如不在該清單中，則傳回0。";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM="隨機選取清單項";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST="清單";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP="從清單中隨機選取一項";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE="取代清單項";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST=
"清單";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX="索引值";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT="取代為";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT="將清單%1中索引值為%2的清單項取代為%3";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP="取代清單中第n項內容";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE="刪除清單項";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST="清單";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX=
"索引值";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT="刪除清單%1中第%2項";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP="刪除指定位置的清單項";Blockly.Msg.LANG_LISTS_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH="求清單長度 ";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST="清單";Blockly.Msg.LANG_LISTS_LENGTH_INPUT="計算清單%1長度";Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP="計算清單項數";Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#append";
Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND="附加清單";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1="清單1";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2="清單2";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT="將清單%2中所有項附加到清單%1中";Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP="將list2中所有項附加到list1的末尾。附加後，list1中將包括所有新加入的元素，而list2則不發生變化。";Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD="增加清單項目";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST=
"清單";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM="清單項目";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT="將清單項目%2加入清單%1中";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP="在清單末尾增加清單項目";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD="清單";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP="重新配置該清單塊，增加、刪除或重新排序其中包含的區間";Blockly.Msg.LANG_LISTS_COPY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy";Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY="複製清單";Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST="清單";Blockly.Msg.LANG_LISTS_COPY_TOOLTIP=
"複製清單，包括複製其中包含的所有子清單";Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist";Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST="是否為清單?";Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING="對象";Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP="判斷該對象是否為清單類型";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV="清單轉CSV行";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST=
"清單";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP="將清單轉換為表格中的一行數據，並傳回表示行數據的CSV（逗號分隔數值）字元串，數據行中的每一項被當作一個字段，在CSV字元串中以雙引號方式標識，各數據項以逗號分隔，且每行末尾均不帶換行符號。";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV="CSV行轉清單";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT="CSV字元串";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP="對CSV（逗號分隔數值）格式字元串進行解析，產生一個包含各字段數據的清單。對於文字行而言，如字段中出現非轉義的換行符號則會出錯（實際是指多行字段的情況），而只在整行文字的末端才出現換行符號或CRLF則是正確的。";
Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV="清單轉CSV";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST="清單";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP="將清單轉換為帶標題行的表格形式，且傳回表示該表格的CSV（逗號分隔數值）字元串文字，清單中的每一項本身還可以作為表示CSV表格行的清單，清單行中的每一項都可看成是一個字段，在CSV字元串文字中以雙引號方式進行標識。在傳回字元串文字中，數據行中的各項以逗號進行分隔，而各數據行則以CRLF (\\r\\n)進行分隔。";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable";
Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV="CSV轉清單";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT="CSV字元串";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP="對CSV（逗號分隔數值）格式字元串進行解析，並產生一筆一筆的記錄，其中的每一欄位都是一個清單，各記錄間分別以換行符號(\\n)或CRLF (\\r\\n)方式分隔。";Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert";Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST="插入清單項";Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST="清單";Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX=
"插入位置";Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM="插入項";Blockly.Msg.LANG_LISTS_INSERT_INPUT="在清單%1的第%2項處插入清單項%3";Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP="在指定位置插入清單項";Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty";Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY="清單是否為空?";Blockly.Msg.LANG_LISTS_INPUT_LIST="清單";Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP="如果清單為空則傳回True";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs";
Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS="關鍵值對查詢";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY="關鍵字";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS="關鍵值對";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND="無結果則返回";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT="在鍵值對%2中尋找關鍵字%1 如未找到則傳回%3";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP="傳回關鍵值對清單中與關鍵字關聯的數值";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global";
Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT="初始化全域變數";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME="我的變數";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO="為";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT="全域變數";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP="建立全域變數，並通過掛接的程式方塊賦值";Blockly.Msg.LANG_VARIABLES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#get";Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET="求";Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT=
"求變數值";Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP="求變數值";Blockly.Msg.LANG_VARIABLES_SET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#set";Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET="設";Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO="為";Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT="設變數值";Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP="設變數值等於輸入項";Blockly.Msg.LANG_VARIABLES_VARIABLE="變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#do";
Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT="初始化區域變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME="我的變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO="為";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO="作用範圍";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT="區域變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP="建立指定範圍內敘述方塊所使用的變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME="初始化區域變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/variables#return";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TITLE_INIT="初始化表達式變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_INPUT_NAME="我的變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_INPUT_TO="為";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN="作用範圍";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT="表達式變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP=
"建立指定表達式所使用的變數";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME="初始化表達式變數";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES="輸入項";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP="";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME="參數";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE="x";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE=
"定義程序";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="我的程序";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO="執行敘述";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX="定義程序";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP="敘述執行完成後，不傳回結果";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN="然後傳回";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO="執行敘述";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN=
"傳回";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP="“執行”其中包含的方塊並傳回一條敘述， 可以實現在程序執行前將傳回數據賦值給相關變數";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT="執行/傳回";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE="定義程序";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DO=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN="傳回";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX="定義程序";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP="敘述執行完成後，會傳回結果";Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING="警告:\n此程序的輸入項\n出現重複";Blockly.Msg.LANG_PROCEDURES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL=
"呼叫";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE="程序";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX="呼叫";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="呼叫無回傳值程序";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME="呼叫無回傳值程序";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL=Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_PROCEDURE=
Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX="呼叫";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP="呼叫有回傳值的程序";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME="呼叫有回傳值的程序";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE="輸入項";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE="輸入:";Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF="高亮標示程序";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP="";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP="";
Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN="當";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO="執行";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL="呼叫";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL="呼叫";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT="元件";Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL=
"";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT="元件";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET="設";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO="為";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET="設";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO="為";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT="元件";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL=
"/reference/components/userinterface.html#Button";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL="/reference/components/userinterface.html#buttonproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL="/reference/components/userinterface.html#buttonevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL="/reference/components/userinterface.html#CheckBox";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#checkboxproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL="/reference/components/userinterface.html#checkboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL="/reference/components/userinterface.html#Clock";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL="/reference/components/userinterface.html#clockproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL="/reference/components/userinterface.html#clockevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL="/reference/components/userinterface.html#clockmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL="/reference/components/userinterface.html#Image";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL="/reference/components/userinterface.html#imageproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL="/reference/components/userinterface.html#imageevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL="/reference/components/userinterface.html#imagemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL="/reference/components/userinterface.html#Label";
Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL="/reference/components/userinterface.html#labelproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL="/reference/components/userinterface.html#labelevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL="/reference/components/userinterface.html#labelmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL="/reference/components/userinterface.html#ListPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL=
"/reference/components/userinterface.html#listpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL="/reference/components/userinterface.html#listpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL="/reference/components/userinterface.html#listpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL="/reference/components/userinterface.html#Notifier";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL="/reference/components/userinterface.html#notifierproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL="/reference/components/userinterface.html#notifierevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL="/reference/components/userinterface.html#notifiermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL="/reference/components/userinterface.html#PasswordTextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#pwdboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL=
"/reference/components/userinterface.html#pwdboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#pwdboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL="/reference/components/userinterface.html#Screen";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL="/reference/components/userinterface.html#screenproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL="/reference/components/userinterface.html#screenevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL="/reference/components/userinterface.html#screenmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL="/reference/components/userinterface.html#Slider";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL="/reference/components/userinterface.html#sliderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL="/reference/components/userinterface.html#sliderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL="/reference/components/userinterface.html#slidermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL="/reference/components/userinterface.html#TextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#textboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#textboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#textboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL="/reference/components/userinterface.html#WebViewer";
Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL="/reference/components/userinterface.html#webviewerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL="/reference/components/userinterface.html#webviewerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL="/reference/components/userinterface.html#webviewermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL="/reference/components/layout.html#HorizontalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL=
"/reference/components/layout.html#horizarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL="/reference/components/layout.html#VerticalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#vertarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL="/reference/components/layout.html#TableArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#tablearrangeproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL="/reference/components/media.html#Camcorder";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL="/reference/components/media.html#camcorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL="/reference/components/media.html#camcorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL="/reference/components/media.html#camcordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL="/reference/components/media.html#Camera";
Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL="/reference/components/media.html#cameraproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL="/reference/components/media.html#cameraevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL="/reference/components/media.html#cameramethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL="/reference/components/media.html#ImagePicker";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL="/reference/components/media.html#imagepickerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL="/reference/components/media.html#imagepickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL="/reference/components/media.html#imagepickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL="/reference/components/media.html#Player";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL="/reference/components/media.html#playerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL="/reference/components/media.html#playerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL="/reference/components/media.html#playermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL="/reference/components/media.html#Sound";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL="/reference/components/media.html#soundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL="/reference/components/media.html#soundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL="/reference/components/media.html#soundmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL="/reference/components/media.html#SoundRecorder";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL="/reference/components/media.html#soundrecorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL="/reference/components/media.html#soundrecorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL="/reference/components/media.html#soundrecordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL=
"/reference/components/media.html#SpeechRecognizer";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL="/reference/components/media.html#speechrecognizerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL="/reference/components/media.html#speechrecognizerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL="/reference/components/media.html#speechrecognizermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL="/reference/components/media.html#TextToSpeech";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL="/reference/components/media.html#texttospeechproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL="/reference/components/media.html#texttospeechevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL="/reference/components/media.html#texttospeechmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL="/reference/components/media.html#VideoPlayer";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL=
"/reference/components/media.html#videoplayerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL="/reference/components/media.html#videoplayerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL="/reference/components/media.html#videoplayermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL="/reference/components/animation.html#Ball";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL="/reference/components/animation.html#ballproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL=
"/reference/components/animation.html#ballevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL="/reference/components/animation.html#ballmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL="/reference/components/animation.html#Canvas";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL="/reference/components/animation.html#canvasproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL="/reference/components/animation.html#canvasevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL=
"/reference/components/animation.html#canvasmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL="/reference/components/animation.html#ImageSprite";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL="/reference/components/animation.html#imagespriteproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL="/reference/components/animation.html#imagespriteevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL="/reference/components/animation.html#imagespritemethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL="/reference/components/sensors.html#AccelerometerSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#accelerometersensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#accelerometersensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL="/reference/components/sensors.html#accelerometersensormethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL="/reference/components/sensors.html#BarcodeScanner";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL="/reference/components/sensors.html#barcodescannerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL="/reference/components/sensors.html#barcodescannerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL="/reference/components/sensors.html#barcodescannermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL=
"/reference/components/sensors.html#LocationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#locationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#locationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#locationsensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL="/reference/components/sensors.html#OrientationSensor";
Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#orientationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#orientationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#orientationsensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL="/reference/components/social.html#ContactPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL=
"/reference/components/social.html#contactpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL="/reference/components/social.html#contactpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL="/reference/components/social.html#contactpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL="/reference/components/social.html#EmailPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL="/reference/components/social.html#emailpickerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL="/reference/components/social.html#emailpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL="/reference/components/social.html#emailpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL="/reference/components/social.html#PhoneCall";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL="/reference/components/social.html#phonecallproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL=
"/reference/components/social.html#phonecallevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL="/reference/components/social.html#phonecallmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL="/reference/components/social.html#PhoneNumberPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL="/reference/components/social.html#phonenumberpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL="/reference/components/social.html#phonenumberpickerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL="/reference/components/social.html#phonenumberpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL="/reference/components/social.html#Texting";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL="/reference/components/social.html#textingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL="/reference/components/social.html#textingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL="/reference/components/social.html#textingmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL="/reference/components/social.html#Twitter";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL="/reference/components/social.html#twitterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL="/reference/components/social.html#twitterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL="/reference/components/social.html#twittermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL="/reference/components/storage.html#FusiontablesControl";
Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL="/reference/components/storage.html#fusiontablescontrolproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL="/reference/components/storage.html#fusiontablescontrolevents";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL="/reference/components/storage.html#fusiontablescontrolmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL="/reference/components/storage.html#TinyDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL=
"/reference/components/storage.html#tinydbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL="/reference/components/storage.html#tinydbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL="/reference/components/storage.html#tinydbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL="/reference/components/storage.html#TinyWebDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinywebdbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL=
"/reference/components/storage.html#tinywebdbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL="/reference/components/storage.html#tinywebdbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL="/reference/components/connectivity.html#ActivityStarter";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL="/reference/components/connectivity.html#activitystarterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL="/reference/components/connectivity.html#activitystarterevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL="/reference/components/connectivity.html#activitystartermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL="/reference/components/connectivity.html#BluetoothClient";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothclientevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL="/reference/components/connectivity.html#BluetoothServer";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothserverproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothserverevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothservermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL="/reference/components/connectivity.html#Web";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL="/reference/components/connectivity.html#webproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL="/reference/components/connectivity.html#webevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL="/reference/components/connectivity.html#webmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL="/reference/components/legomindstorms.html#NxtDirectCommands";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdirectproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdirectmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL="/reference/components/legomindstorms.html#NxtColorSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL=
"/reference/components/legomindstorms.html#nxtcolorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtcolorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtcolormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL="/reference/components/legomindstorms.html#NxtLightSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtlightproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtlightevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtlightmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL="/reference/components/legomindstorms.html#NxtSoundSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtsoundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL=
"/reference/components/legomindstorms.html#nxtsoundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtsoundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL="/reference/components/legomindstorms.html#NxtTouchSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxttouchproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxttouchevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL="/reference/components/legomindstorms.html#nxttouchmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL="/reference/components/legomindstorms.html#NxtUltrasonicSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL=
"/reference/components/legomindstorms.html#nxtultrasonicmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL="/reference/components/legomindstorms.html#NxtDrive";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdriveproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdrivemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL="/reference/components/internal.html#GameClient";
Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL="/reference/components/internal.html#gameclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL="/reference/components/internal.html#gameclientevents";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL="/reference/components/internal.html#gameclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL="/reference/components/internal.html#Voting";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL=
"/reference/components/internal.html#votingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL="/reference/components/internal.html#votingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL="/reference/components/internal.html#votingmethods";Blockly.Msg.SHOW_WARNINGS="顯示警告";Blockly.Msg.HIDE_WARNINGS="隱藏警告";Blockly.Msg.MISSING_SOCKETS_WARNINGS="您應該為方塊的每個埠號都填上方塊";Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS="這個方塊應該連上事件或者程式方塊";Blockly.Msg.REPL_ERROR_FROM_COMPANION="AI Companion出現錯誤";
Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR="發生網路連接故障";Blockly.Msg.REPL_NETWORK_ERROR="網路故障";Blockly.Msg.REPL_NETWORK_ERROR_RESTART="與AI Companion通信故障，<br />請嘗試重啟AI Companion程序並重新連接";Blockly.Msg.REPL_OK="確定";Blockly.Msg.REPL_COMPANION_VERSION_CHECK="檢查AI Companion程序版本";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE="AI Companion程序已過期，點選確定鍵升級。";Blockly.Msg.REPL_EMULATORS="查看模擬器";Blockly.Msg.REPL_DEVICES="設備";Blockly.Msg.REPL_APPROVE_UPDATE="畫面，確認升級";Blockly.Msg.REPL_NOT_NOW="現在不";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1=
"您使用的AI Companion程序已經過期，<br/><br/>本版App Inventor適用的AI Companion程序版本為";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE="您正在使用一個過期版本的AI Companion程序，請盡快升級";Blockly.Msg.REPL_DISMISS="放棄";Blockly.Msg.REPL_SOFTWARE_UPDATE="軟體升級";Blockly.Msg.REPL_OK_LOWER="確定";Blockly.Msg.REPL_GOT_IT="升級完成";Blockly.Msg.REPL_UPDATE_INFO="正在安裝升級包，請在設備（或模擬器）上檢查確認。<br /><br />注意：升級完成後，請選擇“完成”（不要選開啟）。然後在瀏覽器中開啟並進入App Inventor，點選“連接設備”並選擇“重置連接”項。";Blockly.Msg.REPL_UNABLE_TO_UPDATE="無法將升級包發送給設備或模擬器";Blockly.Msg.REPL_UNABLE_TO_LOAD=
"無法從App Inventor伺服器下載升級包";Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND="無法App Inventor伺服器(伺服器沒有回應)讀取更新訊息";Blockly.Msg.REPL_NOW_DOWNLOADING="正在從App Inventor伺服器下載升級包，請耐心等待。";Blockly.Msg.REPL_RUNTIME_ERROR="執行故障";Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS="<br/><i>注意：</i>&nbsp;5秒鐘後將顯示另一個錯誤訊息。";Blockly.Msg.REPL_CONNECTING_USB_CABLE="正在通過USB傳輸線連接";Blockly.Msg.REPL_STARTING_EMULATOR="正在啟動Android模擬器<br/>請等待：可能需要一至兩分鐘";Blockly.Msg.REPL_CONNECTING="連接中...";Blockly.Msg.REPL_CANCEL="取消";Blockly.Msg.REPL_GIVE_UP="放棄";
Blockly.Msg.REPL_KEEP_TRYING="重試";Blockly.Msg.REPL_CONNECTION_FAILURE1="連接失敗";Blockly.Msg.REPL_NO_START_EMULATOR="無法在模擬器中啟動AI Companion程式";Blockly.Msg.REPL_PLUGGED_IN_Q="是否已插入傳輸線？";Blockly.Msg.REPL_AI_NO_SEE_DEVICE="AI2沒有看到您的設備，請確認傳輸線連接以及驅動程序安裝是否正常。";Blockly.Msg.REPL_HELPER_Q="是否執行助手？";Blockly.Msg.REPL_HELPER_NOT_RUNNING='aiStarter助手程式不在執行狀態中，<br />是否需要<a href="http://appinventor.mit.edu" target="_blank">說明?</a>';Blockly.Msg.REPL_USB_CONNECTED_WAIT="已連接USB，請等待";Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING=
"秒，確定相關資源全部讀取。";Blockly.Msg.REPL_EMULATOR_STARTED="模擬器已執行，請等待";Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE="正在所連接電話設備中啟動AI Companion程序";Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR="正在模擬器中啟動AI Companion程序";Blockly.Msg.REPL_COMPANION_STARTED_WAITING="AI Companion程序啟動中，請等待";Blockly.Msg.REPL_VERIFYING_COMPANION="檢查AI Companion程序啟動狀態....";Blockly.Msg.REPL_CONNECT_TO_COMPANION="連接AI Companion程序";Blockly.Msg.REPL_TRY_AGAIN1="無法連接AI Companion程序，請重新連接。";Blockly.Msg.REPL_YOUR_CODE_IS="編碼為：";Blockly.Msg.REPL_DO_YOU_REALLY_Q=
"您真的要這麽做嗎？";Blockly.Msg.REPL_FACTORY_RESET="這將使模擬器重置為出廠模式，如果此前升級過AI Companion程序，則需要重新升級。";Blockly.Msg.WARNING_DELETE_X_BLOCKS="你確定要全部刪除 %1 個這些方塊嗎?";Blockly.Msg.GENERATE_YAIL="產生 Yail";Blockly.Msg.DO_IT="實現功能";Blockly.Msg.CLEAR_DO_IT_ERROR="清除錯誤";Blockly.Msg.CAN_NOT_DO_IT="不能實現功能";Blockly.Msg.CONNECT_TO_DO_IT='你必須要連接AIAI Companion或者模擬器才能使用"實現功能"'}};Blockly.Msg.zh_tw.switch_language_to_chinese_tw.init();Blockly.Msg.zh_cn={};
Blockly.Msg.zh_cn.switch_language_to_chinese_cn={category:"",helpUrl:"",init:function(){Blockly.Msg.DUPLICATE_BLOCK="复制代码块";Blockly.Msg.REMOVE_COMMENT="删除注释";Blockly.Msg.ADD_COMMENT="添加注释";Blockly.Msg.EXTERNAL_INPUTS="外挂输入项";Blockly.Msg.INLINE_INPUTS="内嵌输入项";Blockly.Msg.HORIZONTAL_PARAMETERS="横向排列参数项";Blockly.Msg.VERTICAL_PARAMETERS="纵向排列参数项";Blockly.Msg.DELETE_BLOCK="删除代码块";Blockly.Msg.DELETE_X_BLOCKS="删除 %1 个代码块";Blockly.Msg.COLLAPSE_BLOCK="折叠代码块";Blockly.Msg.EXPAND_BLOCK="展开代码块";Blockly.Msg.DISABLE_BLOCK=
"禁用代码块";Blockly.Msg.ENABLE_BLOCK="启用代码块";Blockly.Msg.HELP="帮助";Blockly.Msg.EXPORT_IMAGE="下载模块图像";Blockly.Msg.COLLAPSE_ALL="折叠所有块";Blockly.Msg.EXPAND_ALL="展开所有块";Blockly.Msg.ARRANGE_H="横向排列所有块";Blockly.Msg.ARRANGE_V="纵向排列所有块";Blockly.Msg.ARRANGE_S="斜向排列所有块";Blockly.Msg.SORT_W="按宽度对所有块排序";Blockly.Msg.SORT_H="按高度对所有块排序";Blockly.Msg.SORT_C="按类别对所有块排序";Blockly.Msg.YAIL_OPTION="生成Yail代码";Blockly.Msg.DOIT_OPTION="执行该代码块";Blockly.MSG_CHANGE_VALUE_TITLE="修改数值:";Blockly.MSG_NEW_VARIABLE="新建变量...";Blockly.MSG_NEW_VARIABLE_TITLE=
"新建变量名称:";Blockly.MSG_RENAME_VARIABLE="变量重命名...";Blockly.MSG_RENAME_VARIABLE_TITLE='将所有 "%1" 变量重命名为:';Blockly.MSG_VARIABLE_CATEGORY="变量";Blockly.MSG_PROCEDURE_CATEGORY="过程";Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION="该代码块不能被定义";Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN="请从下拉列表中选择合适项";Blockly.ERROR_DUPLICATE_EVENT_HANDLER="重复的组件事件处理器";Blockly.ERROR_CAN_NOT_DO_IT_TITLE="无法执行该代码块";Blockly.ERROR_CAN_NOT_DO_IT_CONTENT="只有连接助手或模拟器程序，才能执行";Blockly.Msg.LANG_COLOUR_PICKER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic";
Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP="点击方块选取所需颜色";Blockly.Msg.LANG_COLOUR_BLACK="黑色";Blockly.Msg.LANG_COLOUR_WHITE="白色";Blockly.Msg.LANG_COLOUR_RED="红色";Blockly.Msg.LANG_COLOUR_PINK="粉色";Blockly.Msg.LANG_COLOUR_ORANGE="橙色";Blockly.Msg.LANG_COLOUR_YELLOW="黄色";Blockly.Msg.LANG_COLOUR_GREEN="绿色";Blockly.Msg.LANG_COLOUR_CYAN="青色";Blockly.Msg.LANG_COLOUR_BLUE="蓝色";Blockly.Msg.LANG_COLOUR_MAGENTA="品红";Blockly.Msg.LANG_COLOUR_LIGHT_GRAY="浅灰";Blockly.Msg.LANG_COLOUR_DARK_GRAY="深灰";Blockly.Msg.LANG_COLOUR_GRAY=
"灰色";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR="分解色值";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP="返回含红、绿、蓝色值以及透明度值（0-255）的列表";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR="合成颜色";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP="返回由指定红、绿、蓝色值以及透明度值合成的颜色。";Blockly.Msg.LANG_CATEGORY_CONTROLS="控制";
Blockly.Msg.LANG_CONTROLS_IF_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#if";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1="如果值为真，则执行相关语句块";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2="如果值为真，则执行第一个语句块\n否则, 执行第二个语句块";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3="如果第一个值为真，则执行第一个语句块，\n否则，如果第二个值为真，则执行第二个语句块";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4="如果第一个值为真，则执行第一个语句块，\n否则，如果第二个值为真，则执行第二个语句块，\n如果值皆不为真，则执行最后一个语句块";Blockly.Msg.LANG_CONTROLS_IF_MSG_IF="如果";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF=
"否则，如果";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE="否则";Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN="则";Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF="如果";Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP="添加、移除或重排相关元素，\n重新设置该“如果”语句块功能";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF="否则，如果";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="为“如果”语句块增设条件";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE="否则";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP="设最终条件，当所有条件均不满足时执行";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";
Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT="重复";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO="执行";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="只要";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="直到";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="只要值为真，就重复执行相关语句";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="只要值为假，就重复执行相关语句";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1="只要条件为真，就执行”执行“区域所包含的语句块";Blockly.Msg.LANG_CONTROLS_FOR_HELPURL="";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH=
"循环取数到";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR="x";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM="范围从";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO="到";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO="执行";Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP='从一个数字开始取数，到另一个数结束。\n每取一个数，都将其值赋给\n变量 "%1"，并执行语句块。';Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM="循环取";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR="数字";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START=
"范围从";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END="到";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP="间隔为";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO="执行";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT="对一定范围内的数字";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX="对于 ";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX=" 范围内的";Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP="按指定范围和增量循环取值，每次循环均将数值赋予指定变量，并运行“执行”区域所包含的代码块";Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach";
Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM="循环取";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR="列表项";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST="列表为";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO="执行";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT="对列表中每一项";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX="对于 ";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX=" 列表中的";Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP="针对列表中的每一项运行“执行”区域所包含的代码块， 采用指定变量名引用当前列表项。";Blockly.Msg.LANG_CONTROLS_GET_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/control#get";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL="http://en.wikipedia.org/wiki/Control_flow";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP="循环";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK="中断";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE="执行下一个周期";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="中断内部循环";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="跳转到本循环的其余部分，并且\n执行下一个周期";
Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="警告：\n本代码块只能用于\n循环语句块";Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILE_TITLE="当";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST="满足条件";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO="执行";Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT="满足条件";Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP="“执行”区域中代码块被执行的前提是，满足条件的表达式值为真。";Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose";
Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE="如果";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST="";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN="则";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN="否则";Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT="如果";Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP="如果条件表达式的检测值为真，则将关联的求值表达式运算结果传递给“则-返回”语句槽；否则将关联的求值表达式运算结果传递给“否则-返回”语句槽；一般只有一个返回槽表达式能被求值。";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn";
Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO="执行模块";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN="返回结果";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP="运行“执行”区域中的代码块并返回一条语句，用于在赋值前插入执行某个过程。";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT="执行语句/返回结果";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE="执行并返回";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE="求值但忽视结果";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate";
Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT="求值但不返回";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP="运行所连接的代码块但不返回运算值，用于调用求值过程但不需要其运算值。";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE="打开屏幕";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME="屏幕名称";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT="打开屏幕";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP=
"在多屏应用中打开一个新屏幕。";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE="打开屏幕并传值";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME="屏幕名称";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE="初始值";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT=
"打开屏幕并传值";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP="在多屏应用中开启一个新屏幕，并向其传入初始值";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE="获取初始值";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME="屏幕名称";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE="初始值";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT="获取初始值";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP=
"屏幕开启时返回其传入值，在多屏应用中开启动作一般由其他屏幕引发。如没有内容传入，则返回空文本。";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE="关闭屏幕 ";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT="关闭屏幕 ";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP="关闭当前屏幕";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE=
"关闭屏幕并返回值";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT="返回值";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT="关闭屏幕返回值";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP=" 关闭当前屏幕并向打开此屏幕者返回结果";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE="退出程序";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT="退出程序";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP=
"关闭所有屏幕并终止程序运行";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE="获取初始文本值";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT="获取初始文本值";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP=" 当屏幕被其他应用启动时返回所传入的文本值，如没有内容传入，则返回空文本值。对于多屏应用，一般更多采用获取初始值的方式，而非获取纯文本值。";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE="关闭屏幕并返回文本";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT="文本值";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT="关闭屏幕返回文本";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP="关闭当前屏幕，并向打开此屏幕的应用返回文本。对于多屏应用，则多采用关闭屏幕返回值的方式，而不采用关闭屏幕返回文本。";Blockly.Msg.LANG_CATEGORY_LOGIC="逻辑";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL="http://en.wikipedia.org/wiki/Inequality _(mathematics)";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ=
"http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ="判断二对象是否相等，\n对象可为任意类型，不限于数字。";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ="判断二对象是否互不相等，对象可为任意类型，不限于数字。";Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME="比较";Blockly.Msg.LANG_LOGIC_COMPARE_EQ="等于";Blockly.Msg.LANG_LOGIC_COMPARE_NEQ="不等于";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and";
Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or";Blockly.Msg.LANG_LOGIC_OPERATION_AND="并且";Blockly.Msg.LANG_LOGIC_OPERATION_OR="或者";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND="如所有输入项皆为真则返回真值。";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR="只要有输入项为真则返回真值。";Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not";Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT="否定";Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP=
"如输入项为假则返回真值，\n如输入项为真则返回假值。";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE="true";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE="false";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE="返回true值";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE="返回false值";Blockly.Msg.LANG_CATEGORY_MATH="数学";Blockly.Msg.LANG_MATH_NUMBER_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#number";Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP="报告所显示的数字 ";Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER="数字";Blockly.Msg.LANG_MATH_COMPARE_HELPURL="";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt";
Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ="如二数字相等则返回真值";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ="如二数字不等则返回真值";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT="如第一个数字小于第二个数字，\n则返回true值。";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE=
"如第一个数字小于或等于第二个数字，\n则返回false值。";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT="如第一个数字大于第二个数字，\n则返回true值。";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE="如果第一个数大于或等于第二个数，\n则返回false值。";Blockly.Msg.LANG_MATH_COMPARE_EQ="=";Blockly.Msg.LANG_MATH_COMPARE_NEQ="≠";Blockly.Msg.LANG_MATH_COMPARE_LT="<";Blockly.Msg.LANG_MATH_COMPARE_LTE="≤";Blockly.Msg.LANG_MATH_COMPARE_GT=">";Blockly.Msg.LANG_MATH_COMPARE_GTE="≥";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#add";
Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY="http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD=
"求二数之和";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS="求二数之差";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY="求二数乘积";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE="求二数之商";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER="求第一个数的第二个数次方";Blockly.Msg.LANG_MATH_ARITHMETIC_ADD="+";Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS="-";Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY="*";Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE="/";Blockly.Msg.LANG_MATH_ARITHMETIC_POWER="^";Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT="平方根";Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE=
"绝对值";Blockly.Msg.LANG_MATH_SINGLE_OP_NEG="相反值";Blockly.Msg.LANG_MATH_SINGLE_OP_LN="自然对方";Blockly.Msg.LANG_MATH_SINGLE_OP_EXP="e的乘方";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT="求平方根";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS="求绝对值";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#abs";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG="求相反值";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#neg";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN="求自然对数值";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#log";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP="求e的乘方";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP="http://appinventor.mit.edu/explore/ai2/support/blocks/math#e";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND="就高或或就低取整";Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND="http://appinventor.mit.edu/explore/ai2/support/blocks/math#round";
Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING="将输入项取整为不低于其的最小数值";Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING="http://appinventor.mit.edu/explore/ai2/support/blocks/math#ceiling";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR="将输入项取整为不大于其的最大数值";Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR="http://appinventor.mit.edu/explore/ai2/support/blocks/math#floor";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND="四舍五入";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING="就高取整";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR="就低取整";Blockly.Msg.LANG_MATH_TRIG_SIN=
"sin";Blockly.Msg.LANG_MATH_TRIG_COS="cos";Blockly.Msg.LANG_MATH_TRIG_TAN="tan";Blockly.Msg.LANG_MATH_TRIG_ASIN="asin";Blockly.Msg.LANG_MATH_TRIG_ACOS="acos";Blockly.Msg.LANG_MATH_TRIG_ATAN="atan";Blockly.Msg.LANG_MATH_TRIG_ATAN2="atan2";Blockly.Msg.LANG_MATH_TRIG_ATAN2_X="x坐标";Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y="y坐标";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN="求正弦值";Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS=
"求余弦值";Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#cos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN="求正切值";Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#tan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN="由正弦值求角度(-90,+90]";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#asin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS="由余弦值求角度[0, 180)";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#acos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN="由正切值求角度(-90, +90)";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2="由直角坐标求角度(-180, +180]";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan2";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN="最小值";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX="最大值";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN=
"Return the smallest of its arguments..";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX="Return the largest of its arguments..";Blockly.Msg.LANG_MATH_DIVIDE="除以";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO="模数";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER="余数";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT="商数";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO="求模数";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO="http://appinventor.mit.edu/explore/ai2/support/blocks/math#modulo";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER=
"求余数";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#remainder";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT="求商数";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#quotient";Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomint";Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM="随机整数";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM=
"范围从";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO="到";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT="随机整数从 %1 到 %2 ";Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP="返回位于上下边界之间的随机整数，\n限于2的30次方范围内";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomfrac";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM="随机小数";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP="返回0和1之间的随机数值";Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomseed";
Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM="随机数种子设定";Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO="为";Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP="为随机数生成器指定种子数";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT="角度变换";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG="弧度转角度";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD="角度转弧度";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG="求弧度参数对应的角度值[0, 360)";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertrad";
Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD="求角度参数对应的弧度值[-π, +π)";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertdeg";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#format";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE="求小数值";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM="数字";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES="位数";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT=
"将数字 %1设为小数形式 位置 %2";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP="以指定位数返回该数值的小数形式";Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM="是否为数字?";Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP="判断该对象是否为数字类型";Blockly.Msg.LANG_CATEGORY_TEXT="文本";Blockly.Msg.LANG_TEXT_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#string";Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP="输入字符串文本";Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE=
"“";Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE="”";Blockly.Msg.LANG_TEXT_JOIN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#join";Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH="创建字符串文本";Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP="将所有输入项合并为一个单独的字符串文本，\n如没有输入项，则生成空文本。";Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN="合并文本";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM="字符串";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP="";Blockly.Msg.LANG_TEXT_APPEND_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";
Blockly.Msg.LANG_TEXT_APPEND_TO="到";Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT="追加文本";Blockly.Msg.LANG_TEXT_APPEND_VARIABLE="变量";Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP='将文本追加到变量 "%1"';Blockly.Msg.LANG_TEXT_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#length";Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH="求长度";Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP="求该文本中所包含的字母数量(包括空格)";Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#isempty";Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY=
"是否为空";Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP="如文本长度为0则返回真值，否则返回假值";Blockly.Msg.LANG_TEXT_COMPARE_LT=" <";Blockly.Msg.LANG_TEXT_COMPARE_EQUAL=" =";Blockly.Msg.LANG_TEXT_COMPARE_GT=" >";Blockly.Msg.LANG_TEXT_COMPARE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#compare";Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE="比较文本";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT="检测text1的首字母顺序是否低于text2，\n如果首字母相同，则长度较短的文本顺序靠前，\n大写字符顺序优于小写字符。";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL="检测文本字串内容是否相同，即，\n是否由同一组相同顺序的字符组成，与通常的相等概念不同的是，\n当文本字串为数字时，如123和0123，尽管数字相等，\n但其文本不等。";
Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT="告之text1的字首顺序是否高于text2，\n如首字母相同，则长度较短的文本顺序靠前，\n大写字符顺序优于小写字符。";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE="大写";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE="小写";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE="将字符串参数复制并转为大写后返回";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#upcase";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE="将字符串参数复制并转为小写后返回";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#downcase";Blockly.Msg.LANG_TEXT_TRIM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#trim";Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM="删除空格";Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP="将字符串参数复制并删除首尾处的空格后返回";Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#startsat";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT="子串位置";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT="文本";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE=
"子串";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT="求子串%2在文本%1中的起始位置";Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP="求子串在文本中的起始位置，\n其中1表示文本的起始处，\n 而如子串不在文本中则返回0。";Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS="包含子串";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT="文本";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE="子串";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT="检查文本%1中是否包含子串%2";Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP="检查文本中是否包含该子串";
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL="";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT="文本";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT="分隔符";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST="分隔符 (列表)";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST="分解首项";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY="分解任意首项";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT="分解";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY="任意分解";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST='在首次出现分隔符的位置将给定文本分解为两部分，\n并返回包含分隔点前和分隔点后两部分内容的列表，\n如分解字符串"苹果,香蕉,樱桃,狗粮"，以逗号作为分隔符，\n将返回一个包含两项的列表，其中第一项内容为"苹果"，第二项内容则为\n"香蕉,樱桃,狗粮"。\n注意，"苹果"后面的逗号不在结果中出现，\n因为它起到分隔符的作用。';
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitat";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY='以列表中的任意项作为分隔符，\n在首次出现分隔符的位置将给定文本分解为一个两项列表。\n\n如以"(稥,苹)"作为分隔符分解"我喜欢苹果香蕉苹果葡萄"，\n将返回一个两项列表，其第一项为"我喜欢"，第二项为\n"果香蕉苹果葡萄"';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatfirstofany";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT='以指定文本作为分隔符，将字符串分解为不同片段，并生成一个列表作为返回结果。\n 如以","(逗号)分解"一,二,三,四"，将返回列表"(一 二 三 四)"，\n 而以"-土豆"作为分隔符分解字符串"一-土豆,二-土豆,三-土豆,四"，则返回列表"(一 二 三 四)"。';
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT="http://appinventor.mit.edu/explore/ai2/support/blocks/text#split";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY='以分隔符列表中的任意一项作为分隔符，将给定文本分解为列表，\n并将列表作为处理结果返回。\n如分解字符串"蓝莓,香蕉,草莓,狗粮"，以一个含两元素的列表作为分隔符，\n其中第一项为逗号，第二项为"莓"，则返回列表：\n"(蓝 香蕉 草 狗粮)"';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatany";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces";
Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE="用空格分解";Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP="以空格作为分隔符，将文本分解为若干部分。";Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#segment";Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT="提取子串";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START="提取位置";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH="提取长度";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT="文本";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT="从文本%1第%2位置提取长度为%3的子串";Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP=
"以指定长度、指定位置从指定文本中提取文本片段，\n位置1表示被提取文本的起始处。";Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT="替换项";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT="原始文本";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL="全部替换";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT="替换为";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT="将文本%2中所有%1全部替换为%3";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP="返回一个新文本字符串，其中所包含的替换项内容\n均被替换为指定的字串。";
Blockly.Msg.LANG_CATEGORY_LISTS="列表 ";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_HELPURL="http://en.wikipedia.org/wiki/Linked_list#Empty _lists";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE="创建空列表 ";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TOOLTIP="返回一个项数为零的列表对象";Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist";Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST="创建列表";Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP="创建一个可包含任意项数的列表";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD=
"列表";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP="重新配置该列表块，为其增加、删除或重新排列所包含的区间。";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE="列表项";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP="增加一个列表项";Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE="列表项";Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP="增加一个列表项";Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem";
Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT="选择列表项";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST="列表";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX="索引值";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT="选择列表%1中索引值为%2的列表项";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP="求指定位置的列表项";Blockly.Msg.LANG_LISTS_IS_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist";Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN="是否在列表中?";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING="对象";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST=
"列表";Blockly.Msg.LANG_LISTS_IS_IN_INPUT="检查查列表%2中是否含列表项%1";Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP="如该对象为列表中某一项则返回真值，否则为假。";Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist";Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION="列表项索引值";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING="对象";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST="列表";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT="求列表项%1在列表%2中的位置";Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP=
"求对象在该列表中的位置，如不在该列表中，则返回0。";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM="随机选取列表项";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST="列表";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP="从列表中随机选取一项";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE="替换列表项";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST=
"列表";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX="索引值";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT="替换为";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT="将列表%1中索引值为%2的列表项替换为%3";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP="替换列表中第n项内容";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE="删除列表项";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST="列表";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX=
"索引值";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT="删除列表%1中第%2项";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP="删除指定位置的列表项";Blockly.Msg.LANG_LISTS_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH="求列表长度 ";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST="列表";Blockly.Msg.LANG_LISTS_LENGTH_INPUT="计算列表%1长度";Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP="计算列表项数";Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#append";
Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND="追加列表";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1="列表1";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2="列表2";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT="将列表%2中所有项追加到列表%1中";Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP="将list2中所有项添加到list1的末尾。添加后，list1中将包括所有新加入的元素，而list2则不发生变化。";Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD="添加列表项";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST=
"列表";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM="列表项";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT="将列表项%2加入列表%1中";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP="在列表末尾增加列表项";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD="列表";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP="重新配置该列表块，增加、删除或重新排序其中包含的区间";Blockly.Msg.LANG_LISTS_COPY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy";Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY="复制列表";Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST="列表";Blockly.Msg.LANG_LISTS_COPY_TOOLTIP=
"复制列表，包括复制其中包含的所有子列表";Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist";Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST="是否为列表?";Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING="对象";Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP="检测该对象是否为列表类型";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV="列表转CSV行";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST=
"列表";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP="将列表转换为表格中的一行数据，并返回表示行数据的CSV（逗号分隔数值）字符串，数据行中的每一项被当作一个字段，在CSV字符串中以双引号方式标识，各数据项以逗号分隔，且每行末尾均不带换行符。";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV="CSV行转列表";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT="CSV字符串";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP="对CSV（逗号分隔数值）格式字符串进行解析，生成一个包含各字段数据的列表。对于文本行而言，如字段中出现非转义的换行符则会出错（实际是指多行字段的情况），而只在整行文本的末端才出现换行符或CRLF则是正确的。";
Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV="列表转CSV";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST="列表";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP="将列表转换为带标题行的表格形式，且返回表示该表格的CSV（逗号分隔数值）字符串文本，列表中的每一项本身还可以作为表示CSV表格行的列表，列表行中的每一项都可看成是一个字段，在CSV字符串文本中以双引号方式进行标识。在返回字符串文本中，数据行中的各项以逗号进行分隔，而各数据行则以CRLF (\\r\\n)进行分隔。";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable";
Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV="CSV转列表";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT="CSV字符串";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP="对CSV（逗号分隔数值）格式字符串进行解析，并生成数据行列表，其中的每一项又都是一个字段列表，各数据行间分别以换行符(\\n)或CRLF (\\r\\n)方式分隔。";Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert";Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST="插入列表项";Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST="列表";Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX=
"插入位置";Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM="插入项";Blockly.Msg.LANG_LISTS_INSERT_INPUT="在列表%1的第%2项处插入列表项%3";Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP="在指定位置插入列表项";Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty";Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY="列表是否为空?";Blockly.Msg.LANG_LISTS_INPUT_LIST="列表";Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP="如果列表为空则返回真";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs";
Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS="键值对查询";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY="关键字";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS="键值对";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND="无果则返回";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT="在键值对%2中查找关键字%1 如未找到则返回%3";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP="返回键值对列表中与关键字关联的数值";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global";
Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT="初始化全局变量";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME="我的变量";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO="为";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT="全局变量";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP="创建全局变量，并通过挂接的代码块赋值";Blockly.Msg.LANG_VARIABLES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#get";Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET="取";Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT=
"取变量值";Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP="取变量值";Blockly.Msg.LANG_VARIABLES_SET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#set";Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET="设";Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO="为";Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT="设变量值";Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP="设变量值等于输入项";Blockly.Msg.LANG_VARIABLES_VARIABLE="变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#do";
Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT="初始化局部变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME="我的变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO="为";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO="作用范围";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT="局部变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP="创建指定范围内语句块所使用的变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME="初始化局部变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/variables#return";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TITLE_INIT="初始化表达式变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_INPUT_NAME="我的变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_INPUT_TO="为";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN="作用范围";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT="表达式变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP=
"创建指定表达式所使用的变量";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME="初始化表达式变量";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES="输入项";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP="";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME="参数";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE="x";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE=
"定义过程";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="我的过程";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO="执行语句";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX="定义过程";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP="语句执行完成后，不返回结果";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN="然后返回";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO="执行语句";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN=
"返回";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP="“执行”其中包含的块并返回一条语句， 可以实现在过程执行前将返回数据赋值给相关变量";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT="执行/返回";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE="定义过程";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DO=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN="返回";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX="定义过程";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP="语句执行完成后，会返回结果";Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING="警告:\n此过程的输入项\n出现重复";Blockly.Msg.LANG_PROCEDURES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL=
"调用";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE="过程";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX="调用";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="调用无返回值过程";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME="调用无返回值过程";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL=Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_PROCEDURE=
Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX="调用";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP="调用有返回值过程";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME="调用有返回值过程";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE="输入项";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE="输入:";Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF="预览代码块功能";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP="";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP="";
Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN="当";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO="执行";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL="调用";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL="调用";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT="组件";Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL=
"";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT="组件";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET="设";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO="为";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET="设";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO="为";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT="组件";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL=
"/reference/components/userinterface.html#Button";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL="/reference/components/userinterface.html#buttonproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL="/reference/components/userinterface.html#buttonevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL="/reference/components/userinterface.html#CheckBox";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#checkboxproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL="/reference/components/userinterface.html#checkboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL="/reference/components/userinterface.html#Clock";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL="/reference/components/userinterface.html#clockproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL="/reference/components/userinterface.html#clockevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL="/reference/components/userinterface.html#clockmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL="/reference/components/userinterface.html#Image";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL="/reference/components/userinterface.html#imageproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL="/reference/components/userinterface.html#imageevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL="/reference/components/userinterface.html#imagemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL="/reference/components/userinterface.html#Label";
Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL="/reference/components/userinterface.html#labelproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL="/reference/components/userinterface.html#labelevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL="/reference/components/userinterface.html#labelmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL="/reference/components/userinterface.html#ListPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL=
"/reference/components/userinterface.html#listpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL="/reference/components/userinterface.html#listpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL="/reference/components/userinterface.html#listpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL="/reference/components/userinterface.html#Notifier";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL="/reference/components/userinterface.html#notifierproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL="/reference/components/userinterface.html#notifierevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL="/reference/components/userinterface.html#notifiermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL="/reference/components/userinterface.html#PasswordTextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#pwdboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL=
"/reference/components/userinterface.html#pwdboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#pwdboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL="/reference/components/userinterface.html#Screen";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL="/reference/components/userinterface.html#screenproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL="/reference/components/userinterface.html#screenevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL="/reference/components/userinterface.html#screenmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL="/reference/components/userinterface.html#Slider";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL="/reference/components/userinterface.html#sliderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL="/reference/components/userinterface.html#sliderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL="/reference/components/userinterface.html#slidermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL="/reference/components/userinterface.html#TextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#textboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#textboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#textboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL="/reference/components/userinterface.html#WebViewer";
Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL="/reference/components/userinterface.html#webviewerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL="/reference/components/userinterface.html#webviewerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL="/reference/components/userinterface.html#webviewermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL="/reference/components/layout.html#HorizontalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL=
"/reference/components/layout.html#horizarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL="/reference/components/layout.html#VerticalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#vertarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL="/reference/components/layout.html#TableArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#tablearrangeproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL="/reference/components/media.html#Camcorder";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL="/reference/components/media.html#camcorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL="/reference/components/media.html#camcorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL="/reference/components/media.html#camcordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL="/reference/components/media.html#Camera";
Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL="/reference/components/media.html#cameraproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL="/reference/components/media.html#cameraevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL="/reference/components/media.html#cameramethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL="/reference/components/media.html#ImagePicker";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL="/reference/components/media.html#imagepickerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL="/reference/components/media.html#imagepickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL="/reference/components/media.html#imagepickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL="/reference/components/media.html#Player";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL="/reference/components/media.html#playerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL="/reference/components/media.html#playerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL="/reference/components/media.html#playermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL="/reference/components/media.html#Sound";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL="/reference/components/media.html#soundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL="/reference/components/media.html#soundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL="/reference/components/media.html#soundmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL="/reference/components/media.html#SoundRecorder";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL="/reference/components/media.html#soundrecorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL="/reference/components/media.html#soundrecorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL="/reference/components/media.html#soundrecordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL=
"/reference/components/media.html#SpeechRecognizer";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL="/reference/components/media.html#speechrecognizerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL="/reference/components/media.html#speechrecognizerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL="/reference/components/media.html#speechrecognizermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL="/reference/components/media.html#TextToSpeech";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL="/reference/components/media.html#texttospeechproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL="/reference/components/media.html#texttospeechevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL="/reference/components/media.html#texttospeechmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL="/reference/components/media.html#VideoPlayer";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL=
"/reference/components/media.html#videoplayerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL="/reference/components/media.html#videoplayerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL="/reference/components/media.html#videoplayermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL="/reference/components/animation.html#Ball";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL="/reference/components/animation.html#ballproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL=
"/reference/components/animation.html#ballevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL="/reference/components/animation.html#ballmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL="/reference/components/animation.html#Canvas";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL="/reference/components/animation.html#canvasproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL="/reference/components/animation.html#canvasevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL=
"/reference/components/animation.html#canvasmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL="/reference/components/animation.html#ImageSprite";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL="/reference/components/animation.html#imagespriteproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL="/reference/components/animation.html#imagespriteevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL="/reference/components/animation.html#imagespritemethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL="/reference/components/sensors.html#AccelerometerSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#accelerometersensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#accelerometersensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL="/reference/components/sensors.html#accelerometersensormethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL="/reference/components/sensors.html#BarcodeScanner";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL="/reference/components/sensors.html#barcodescannerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL="/reference/components/sensors.html#barcodescannerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL="/reference/components/sensors.html#barcodescannermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL=
"/reference/components/sensors.html#LocationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#locationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#locationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#locationsensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL="/reference/components/sensors.html#OrientationSensor";
Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#orientationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#orientationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#orientationsensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL="/reference/components/social.html#ContactPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL=
"/reference/components/social.html#contactpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL="/reference/components/social.html#contactpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL="/reference/components/social.html#contactpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL="/reference/components/social.html#EmailPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL="/reference/components/social.html#emailpickerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL="/reference/components/social.html#emailpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL="/reference/components/social.html#emailpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL="/reference/components/social.html#PhoneCall";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL="/reference/components/social.html#phonecallproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL=
"/reference/components/social.html#phonecallevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL="/reference/components/social.html#phonecallmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL="/reference/components/social.html#PhoneNumberPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL="/reference/components/social.html#phonenumberpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL="/reference/components/social.html#phonenumberpickerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL="/reference/components/social.html#phonenumberpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL="/reference/components/social.html#Texting";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL="/reference/components/social.html#textingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL="/reference/components/social.html#textingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL="/reference/components/social.html#textingmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL="/reference/components/social.html#Twitter";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL="/reference/components/social.html#twitterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL="/reference/components/social.html#twitterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL="/reference/components/social.html#twittermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL="/reference/components/storage.html#FusiontablesControl";
Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL="/reference/components/storage.html#fusiontablescontrolproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL="/reference/components/storage.html#fusiontablescontrolevents";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL="/reference/components/storage.html#fusiontablescontrolmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL="/reference/components/storage.html#TinyDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL=
"/reference/components/storage.html#tinydbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL="/reference/components/storage.html#tinydbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL="/reference/components/storage.html#tinydbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL="/reference/components/storage.html#TinyWebDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinywebdbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL=
"/reference/components/storage.html#tinywebdbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL="/reference/components/storage.html#tinywebdbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL="/reference/components/connectivity.html#ActivityStarter";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL="/reference/components/connectivity.html#activitystarterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL="/reference/components/connectivity.html#activitystarterevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL="/reference/components/connectivity.html#activitystartermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL="/reference/components/connectivity.html#BluetoothClient";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothclientevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL="/reference/components/connectivity.html#BluetoothServer";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothserverproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothserverevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothservermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL="/reference/components/connectivity.html#Web";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL="/reference/components/connectivity.html#webproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL="/reference/components/connectivity.html#webevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL="/reference/components/connectivity.html#webmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL="/reference/components/legomindstorms.html#NxtDirectCommands";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdirectproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdirectmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL="/reference/components/legomindstorms.html#NxtColorSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL=
"/reference/components/legomindstorms.html#nxtcolorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtcolorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtcolormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL="/reference/components/legomindstorms.html#NxtLightSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtlightproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtlightevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtlightmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL="/reference/components/legomindstorms.html#NxtSoundSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtsoundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL=
"/reference/components/legomindstorms.html#nxtsoundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtsoundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL="/reference/components/legomindstorms.html#NxtTouchSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxttouchproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxttouchevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL="/reference/components/legomindstorms.html#nxttouchmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL="/reference/components/legomindstorms.html#NxtUltrasonicSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL=
"/reference/components/legomindstorms.html#nxtultrasonicmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL="/reference/components/legomindstorms.html#NxtDrive";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdriveproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdrivemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL="/reference/components/internal.html#GameClient";
Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL="/reference/components/internal.html#gameclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL="/reference/components/internal.html#gameclientevents";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL="/reference/components/internal.html#gameclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL="/reference/components/internal.html#Voting";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL=
"/reference/components/internal.html#votingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL="/reference/components/internal.html#votingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL="/reference/components/internal.html#votingmethods";Blockly.Msg.SHOW_WARNINGS="显示警告";Blockly.Msg.HIDE_WARNINGS="隐藏警告";Blockly.Msg.MISSING_SOCKETS_WARNINGS="你应该为模块的每个端口都填上模块";Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS="这个模块应该连上事件或者过程模块";Blockly.Msg.REPL_ERROR_FROM_COMPANION="AI伴侣出现错误";Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR=
"发生网络连接故障";Blockly.Msg.REPL_NETWORK_ERROR="网络故障";Blockly.Msg.REPL_NETWORK_ERROR_RESTART="与AI伴侣通信故障，<br />请尝试重启伴侣程序并重新连接";Blockly.Msg.REPL_OK="确定";Blockly.Msg.REPL_COMPANION_VERSION_CHECK="检查伴侣程序版本";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE="伴侣程序已过期，点击确定键升级。";Blockly.Msg.REPL_EMULATORS="查看模拟器";Blockly.Msg.REPL_DEVICES="设备";Blockly.Msg.REPL_APPROVE_UPDATE="屏幕，确认升级";Blockly.Msg.REPL_NOT_NOW="现在不";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1="你使用的伴侣程序已经过期，<br/><br/>本版App Inventor适用的伴侣程序版本为";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE=
"你正在使用一个过期版本的伴侣程序，请尽快升级";Blockly.Msg.REPL_DISMISS="放弃";Blockly.Msg.REPL_SOFTWARE_UPDATE="软件升级";Blockly.Msg.REPL_OK_LOWER="确定";Blockly.Msg.REPL_GOT_IT="升级完成";Blockly.Msg.REPL_UPDATE_INFO="更新正在安装在你的设备上。请查看你设备(或模拟器)屏幕出现的提示并批准软件安装。<br /><br />重要:当更新完成,选择“完成”(不要点击“开放”)。然后再次浏览 App Inventor 网页,点击“连接”菜单,选择“重置连接”。然后重新连接设备。";Blockly.Msg.REPL_UNABLE_TO_UPDATE="无法将升级包发送给设备或模拟器";Blockly.Msg.REPL_UNABLE_TO_LOAD="无法从App Inventor服务器下载升级包";Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND="无法App Inventor服务器(服务器没有响应)加载更新信息";
Blockly.Msg.REPL_NOW_DOWNLOADING="正在从App Inventor服务器下载升级包，请耐心等待。";Blockly.Msg.REPL_RUNTIME_ERROR="运行故障";Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS="<br/><i>注意：</i>&nbsp;5秒钟后将显示另一条错误信息。";Blockly.Msg.REPL_CONNECTING_USB_CABLE="正在通过USB电缆连接";Blockly.Msg.REPL_STARTING_EMULATOR="正在启动Android模拟器<br/>请等待：可能需要一至两分钟";Blockly.Msg.REPL_CONNECTING="连接中...";Blockly.Msg.REPL_CANCEL="取消";Blockly.Msg.REPL_GIVE_UP="放弃";Blockly.Msg.REPL_KEEP_TRYING="重试";Blockly.Msg.REPL_CONNECTION_FAILURE1="连接失败";Blockly.Msg.REPL_NO_START_EMULATOR=
"无法在模拟器中启动伴侣程序";Blockly.Msg.REPL_PLUGGED_IN_Q="是否已插入电缆？";Blockly.Msg.REPL_AI_NO_SEE_DEVICE="AI2没有看到你的设备，请确认电缆连接以及驱动程序安装是否正常。";Blockly.Msg.REPL_HELPER_Q="是否运行助手？";Blockly.Msg.REPL_HELPER_NOT_RUNNING='aiStarter助手程序不在执行状态中，<br />是否需要<a href="http://appinventor.mit.edu" target="_blank">帮助?</a>';Blockly.Msg.REPL_USB_CONNECTED_WAIT="已连接USB，请等待";Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING="秒，确保相关资源全部加载。";Blockly.Msg.REPL_EMULATOR_STARTED="模拟器已运行，请等待";Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE="正在所连接电话设备中启动伴侣程序";
Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR="正在模拟器中启动伴侣程序";Blockly.Msg.REPL_COMPANION_STARTED_WAITING="伴侣程序启动中，请等待";Blockly.Msg.REPL_VERIFYING_COMPANION="检查伴侣程序启动状态....";Blockly.Msg.REPL_CONNECT_TO_COMPANION="连接伴侣程序";Blockly.Msg.REPL_TRY_AGAIN1="无法连接伴侣程序，请重新连接。";Blockly.Msg.REPL_YOUR_CODE_IS="编码为：";Blockly.Msg.REPL_DO_YOU_REALLY_Q="你真的要这么做吗？";Blockly.Msg.REPL_FACTORY_RESET="这将使模拟器重置为出厂模式，如果此前升级过伴侣程序，则需要重新升级。";Blockly.Msg.WARNING_DELETE_X_BLOCKS="你确定要全部删除 %1 个这些模块吗?";Blockly.Msg.GENERATE_YAIL=
"生成 Yail";Blockly.Msg.DO_IT="预览代码块功能";Blockly.Msg.CLEAR_DO_IT_ERROR="清除錯誤";Blockly.Msg.CAN_NOT_DO_IT="不能预览代码块功能";Blockly.Msg.CONNECT_TO_DO_IT='你必须要连接AI伴侣或者模拟器才能使用"预览代码块功能"'}};Blockly.Msg.zh_cn.switch_language_to_chinese_cn.init();Blockly.Msg.en={};
Blockly.Msg.en.switch_language_to_english={category:"",helpUrl:"",init:function(){Blockly.Msg.DUPLICATE_BLOCK="Duplicate";Blockly.Msg.REMOVE_COMMENT="Remove Comment";Blockly.Msg.ADD_COMMENT="Add Comment";Blockly.Msg.EXTERNAL_INPUTS="External Inputs";Blockly.Msg.INLINE_INPUTS="Inline Inputs";Blockly.Msg.HORIZONTAL_PARAMETERS="Arrange Parameters Horizontally";Blockly.Msg.VERTICAL_PARAMETERS="Arrange Parameters Vertically";Blockly.Msg.DELETE_BLOCK="Delete Block";Blockly.Msg.DELETE_X_BLOCKS="Delete %1 Blocks";
Blockly.Msg.COLLAPSE_BLOCK="Collapse Block";Blockly.Msg.EXPAND_BLOCK="Expand Block";Blockly.Msg.DISABLE_BLOCK="Disable Block";Blockly.Msg.ENABLE_BLOCK="Enable Block";Blockly.Msg.HELP="Help";Blockly.Msg.EXPORT_IMAGE="Download Blocks as Image";Blockly.Msg.COLLAPSE_ALL="Collapse Blocks";Blockly.Msg.EXPAND_ALL="Expand Blocks";Blockly.Msg.ARRANGE_H="Arrange Blocks Horizontally";Blockly.Msg.ARRANGE_V="Arrange Blocks Vertically";Blockly.Msg.ARRANGE_S="Arrange Blocks Diagonally";Blockly.Msg.SORT_W="Sort Blocks by Width";
Blockly.Msg.SORT_H="Sort Blocks by Height";Blockly.Msg.SORT_C="Sort Blocks by Category";Blockly.Msg.COPY_TO_BACKPACK="Add to Backpack";Blockly.Msg.COPY_ALLBLOCKS="Copy All Blocks to Backpack";Blockly.Msg.BACKPACK_GET="Paste All Blocks from Backpack";Blockly.Msg.BACKPACK_EMPTY="Empty the Backpack";Blockly.Msg.BACKPACK_CONFIRM_EMPTY="Are you sure you want to empty the backpack?";Blockly.Msg.BACKPACK_DOC_TITLE="Backpack Information";Blockly.Msg.BACKPACK_DOCUMENTATION='The Backpack is a copy/paste feature. It allows you to copy blocks from one project or screen  and paste them into another project or screen.  To copy, you can drag-and-drop blocks into the Backpack. To paste, click on the Backpack icon and  drag-and-drop blocks into the workspace.</p><p>The contents of the Backpack will persist throughout  an App Inventor session. When you quit App Inventor or refresh its web page in the browser,  the Backpack will be re-initialized -- i.e., emptied.</p><p>For further documentation and a \'how to\' video, see:</p><p><a href="http://ai2.appinventor.mit.edu/reference/other/backpack.html" target="_blank">http://ai2.appinventor.mit.edu/reference/other/backpack.html</a>';
Blockly.MSG_CHANGE_VALUE_TITLE="Change value:";Blockly.MSG_NEW_VARIABLE="New variable...";Blockly.MSG_NEW_VARIABLE_TITLE="New variable name:";Blockly.MSG_RENAME_VARIABLE="Rename variable...";Blockly.MSG_RENAME_VARIABLE_TITLE='Rename all "%1" variables to:';Blockly.MSG_VARIABLE_CATEGORY="Variables";Blockly.MSG_PROCEDURE_CATEGORY="Procedures";Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION="This block cannot be in a definition";Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN="Select a valid item in the drop down.";
Blockly.ERROR_DUPLICATE_EVENT_HANDLER="This is a duplicate event handler for this component.";Blockly.ERROR_COMPONENT_DOES_NOT_EXIST="Component does not exist";Blockly.Msg.LANG_COLOUR_PICKER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic";Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP="Click the square to pick a color.";Blockly.Msg.LANG_COLOUR_BLACK="black";Blockly.Msg.LANG_COLOUR_WHITE="white";Blockly.Msg.LANG_COLOUR_RED="red";Blockly.Msg.LANG_COLOUR_PINK="pink";Blockly.Msg.LANG_COLOUR_ORANGE=
"orange";Blockly.Msg.LANG_COLOUR_YELLOW="yellow";Blockly.Msg.LANG_COLOUR_GREEN="green";Blockly.Msg.LANG_COLOUR_CYAN="cyan";Blockly.Msg.LANG_COLOUR_BLUE="blue";Blockly.Msg.LANG_COLOUR_MAGENTA="magenta";Blockly.Msg.LANG_COLOUR_LIGHT_GRAY="light gray";Blockly.Msg.LANG_COLOUR_DARK_GRAY="dark gray";Blockly.Msg.LANG_COLOUR_GRAY="gray";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR="split color";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP=
"A list of four elements, each in the range 0 to 255, representing the red, green, blue and alpha components.";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR="make color";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP="A color with the given red, green, blue, and optionally alpha components";Blockly.Msg.LANG_CATEGORY_CONTROLS="Control";Blockly.Msg.LANG_CONTROLS_IF_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#if";
Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1="If a value is true, then do some statements.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2="If a value is true, then do the first block of statements.\nOtherwise, do the second block of statements.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3="If the first value is true, then do the first block of statements.\nOtherwise, if the second value is true, do the second block of statements.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4="If the first value is true, then do the first block of statements.\nOtherwise, if the second value is true, do the second block of statements.\nIf none of the values are true, do the last block of statements.";
Blockly.Msg.LANG_CONTROLS_IF_MSG_IF="if";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF="else if";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE="else";Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN="then";Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF="if";Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP="Add, remove, or reorder sections\nto reconfigure this if block.";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF="else if";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="Add a condition to the if block.";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE=
"else";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP="Add a final, catch-all condition to the if block.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT="repeat";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO="do";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="while";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="until";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="While a value is true, then do some statements.";
Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="While a value is false, then do some statements.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1="Runs the blocks in the 'do' section while the test is true.";Blockly.Msg.LANG_CONTROLS_FOR_HELPURL="";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH="count with";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR="x";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM="from";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO="to";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO="do";Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP=
'Count from a start number to an end number.\nFor each count, set the current count number to\nvariable "%1", and then do some statements.';Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM="for each";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR="number";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START="from";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END="to";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP=
"by";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO="do";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT="for number in range";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX="for ";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX=" in range";Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP="Runs the blocks in the 'do' section for each numeric value in the range from start to end, stepping the value each time.  Use the given variable name to refer to the current value.";Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM="for each";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR="item";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST="in list";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO="do";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT="for item in list";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX="for ";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX=" in list";Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP=
"Runs the blocks in the 'do'  section for each item in the list.  Use the given variable name to refer to the current list item.";Blockly.Msg.LANG_CONTROLS_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#get";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL="http://en.wikipedia.org/wiki/Control_flow";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP="of loop";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK="break out";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE=
"continue with next iteration";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="Break out of the containing loop.";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="Skip the rest of this loop, and\ncontinue with the next iteration.";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="Warning:\nThis block may only\nbe used within a loop.";Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILE_TITLE=
"while";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST="test";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO="do";Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT="while";Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP="Runs the blocks in the 'do' section while the test is true.";Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose";Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE="if";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST="";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN=
"then";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN="else";Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT="if";Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP="If the condition being tested is true,return the result of evaluating the expression attached to the 'then-return' slot;otherwise return the result of evaluating the expression attached to the 'else-return' slot;at most one of the return slot expressions will be evaluated.";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn";
Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO="do";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN="result";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP="Runs the blocks in 'do' and returns a statement. Useful if you need to run a procedure before returning a value to a variable.";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT="do/result";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE="do result";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE="evaluate but ignore result";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT="eval but ignore";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP="Runs the connected block of code and ignores the return value (if any). Useful if need to call a procedure with a return value but don't need the value.";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE=
"open another screen";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME="screenName";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT="open screen";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP="Opens a new screen in a multiple screen app.";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE="open another screen with start value";
Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME="screenName";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE="startValue";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT="open screen with value";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP="Opens a new screen in a multiple screen app and passes the start value to that screen.";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue";
Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE="get start value";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME="screenName";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE="startValue";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT="get start value";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP="Returns the value that was passed to this screen when it was opened, typically by another screen in a multiple-screen app. If no value was passed, returns the empty text.";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE="close screen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT="close screen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP="Close the current screen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE=
"close screen with value";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT="result";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT="close screen with value";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP="Closes the current screen and returns a result to the screen that opened this one.";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE=
"close application";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT="close application";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP="Closes all screens in this app and stops the app.";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE="get plain start text";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT="get plain start text";
Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP="Returns the plain text that was passed to this screen when it was started by another app. If no value was passed, returns the empty text. For multiple screen apps, use get start value rather than get plain start text.";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE="close screen with plain text";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT="text";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT="close screen with plain text";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP="Closes the current screen and returns text to the app that opened this one.   This command is for returning text to non-App Inventor activities, not to App Inventor screens. For App Inventor Screens, as in multiple screen apps, use Close Screen with Value, not Close Screen with Plain Text.";
Blockly.Msg.LANG_CATEGORY_LOGIC="Logic";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL="http://en.wikipedia.org/wiki/Inequality_(mathematics)";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ='Tests whether two things are equal. \nThe things being compared can be any things, not only numbers. \nNumbers are considered to be equal to their printed form as strings, \nfor example, the number 0 is equal to the text "0".  Also, two strings \nthat represent numbers are equal if the numbers are equal, for example \n"1" is equal to "01".';
Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ="Return true if both inputs are not equal to each other.";Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME="logic equal";Blockly.Msg.LANG_LOGIC_COMPARE_EQ="=";Blockly.Msg.LANG_LOGIC_COMPARE_NEQ="≠";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or";Blockly.Msg.LANG_LOGIC_OPERATION_AND="and";
Blockly.Msg.LANG_LOGIC_OPERATION_OR="or";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND="Return true if all inputs are true.";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR="Return true if any input is true.";Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not";Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT="not";Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP="Returns true if the input is false.\nReturns false if the input is true.";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE="true";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE="false";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE="Returns the boolean true.";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE="Returns the boolean false.";Blockly.Msg.LANG_CATEGORY_MATH="Math";Blockly.Msg.LANG_MATH_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#number";
Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP="Report the number shown.";Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER="number";Blockly.Msg.LANG_MATH_COMPARE_HELPURL="";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ="Return true if both numbers are equal to each other.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ="Return true if both numbers are not equal to each other.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT=
"Return true if the first number is smaller\nthan the second number.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE="Return true if the first number is smaller\nthan or equal to the second number.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT="Return true if the first number is greater\nthan the second number.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE="Return true if the first number is greater\nthan or equal to the second number.";Blockly.Msg.LANG_MATH_COMPARE_EQ="=";Blockly.Msg.LANG_MATH_COMPARE_NEQ="≠";
Blockly.Msg.LANG_MATH_COMPARE_LT="<";Blockly.Msg.LANG_MATH_COMPARE_LTE="≤";Blockly.Msg.LANG_MATH_COMPARE_GT=">";Blockly.Msg.LANG_MATH_COMPARE_GTE="≥";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#add";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY="http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD="Return the sum of the two numbers.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS="Return the difference of the two numbers.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY="Return the product of the two numbers.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE="Return the quotient of the two numbers.";
Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER="Return the first number raised to\nthe power of the second number.";Blockly.Msg.LANG_MATH_ARITHMETIC_ADD="+";Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS="-";Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY="*";Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE="/";Blockly.Msg.LANG_MATH_ARITHMETIC_POWER="^";Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT="square root";Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE="absolute";Blockly.Msg.LANG_MATH_SINGLE_OP_NEG="neg";Blockly.Msg.LANG_MATH_SINGLE_OP_LN=
"log";Blockly.Msg.LANG_MATH_SINGLE_OP_EXP="e^";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT="Return the square root of a number.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS="Return the absolute value of a number.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#abs";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG="Return the negation of a number.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#neg";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN="Return the natural logarithm of a number, i.e. the logarithm to the base e (2.71828...)";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#log";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP="Return e (2.71828...) to the power of a number.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP="http://appinventor.mit.edu/explore/ai2/support/blocks/math#e";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND=
"Round a number up or down.";Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND="http://appinventor.mit.edu/explore/ai2/support/blocks/math#round";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING="Rounds the input to the smallest\nnumber not less then the input";Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING="http://appinventor.mit.edu/explore/ai2/support/blocks/math#ceiling";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR="Rounds the input to the largest\nnumber not greater then the input";Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#floor";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND="round";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING="ceiling";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR="floor";Blockly.Msg.LANG_MATH_TRIG_SIN="sin";Blockly.Msg.LANG_MATH_TRIG_COS="cos";Blockly.Msg.LANG_MATH_TRIG_TAN="tan";Blockly.Msg.LANG_MATH_TRIG_ASIN="asin";Blockly.Msg.LANG_MATH_TRIG_ACOS="acos";Blockly.Msg.LANG_MATH_TRIG_ATAN="atan";Blockly.Msg.LANG_MATH_TRIG_ATAN2="atan2";Blockly.Msg.LANG_MATH_TRIG_ATAN2_X=
"x";Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y="y";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN="Provides the sine of the given angle in degrees.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS="Provides the cosine of the given angle in degrees.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#cos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN="Provides the tangent of the given angle in degrees.";
Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#tan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN="Provides the angle in the range (-90,+90]\ndegrees with the given sine value.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#asin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS="Provides the angle in the range [0, 180)\ndegrees with the given cosine value.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#acos";
Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN="Provides the angle in the range (-90, +90)\ndegrees with the given tangent value.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2="Provides the angle in the range (-180, +180]\ndegrees with the given rectangular coordinates.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan2";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN=
"min";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX="max";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN="Return the smallest of its arguments..";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX="Return the largest of its arguments..";Blockly.Msg.LANG_MATH_DIVIDE="÷";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO="modulo of";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER="remainder of";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT="quotient of";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO="Return the modulo.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#modulo";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER="Return the remainder.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#remainder";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT="Return the quotient.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#quotient";Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomint";
Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM="random integer";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM="from";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO="to";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT="random integer from %1 to %2";Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP="Returns a random integer between the upper bound\nand the lower bound. The bounds will be clipped to be smaller\nthan 2**30.";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomfrac";
Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM="random fraction";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP="Return a random number between 0 and 1.";Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomseed";Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM="random set seed";Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO="to";Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP="specifies a numeric seed\nfor the random number generator";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT=
"convert";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG="radians to degrees";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD="degrees to radians";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG="Returns the degree value in the range\n[0, 360) corresponding to its radians argument.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertrad";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD="Returns the radian value in the range\n[-π, +π) corresponding to its degrees argument.";
Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertdeg";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#format";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE="format as decimal";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM="number";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES="places";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT="format as decimal number %1 places %2";
Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP="Returns the number formatted as a decimal\nwith a specified number of places.";Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM="is number?";Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP="Tests if something is a number.";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_INPUT_NUM=
"is Base 10?";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_TOOLTIP="Tests if something is a string that represents a positive base 10 integer.";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_INPUT_NUM="is hexadecimal?";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_TOOLTIP="Tests if something is a string that represents a hexadecimal number.";Blockly.Msg.LANG_MATH_IS_A_BINARY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";
Blockly.Msg.LANG_MATH_IS_A_BINARY_INPUT_NUM="is binary?";Blockly.Msg.LANG_MATH_IS_A_BINARY_TOOLTIP="Tests if something is a string that represents a binary number.";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TITLE_CONVERT="convert number";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_HEX="base 10 to hex";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_HEX="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_HEX="Takes a positive integer in base 10 and returns the string that represents the number in hexadecimal";
Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_HEX_TO_DEC="hex to base 10";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_HEX_TO_DEC="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_HEX_TO_DEC="Takes a string that represents a number in hexadecimal and returns the string that represents the number in base 10";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_BIN="base 10 to binary";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_BIN="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_BIN="Takes a positive integer in base 10 and returns the string that represents the number in binary";
Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_BIN_TO_DEC="binary to base 10";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_BIN_TO_DEC="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_BIN_TO_DEC="Takes a string that represents a number in binary and returns the string that represents the number in base 10";Blockly.Msg.LANG_CATEGORY_TEXT="Text";Blockly.Msg.LANG_TEXT_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#string";Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP="A text string.";Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE=
"“";Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE="”";Blockly.Msg.LANG_TEXT_JOIN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#join";Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH="create text with";Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP="Appends all the inputs to form a single text string.\nIf there are no inputs, makes an empty text.";Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN="join";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM="string";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP="";Blockly.Msg.LANG_TEXT_APPEND_HELPURL=
"http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.Msg.LANG_TEXT_APPEND_TO="to";Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT="append text";Blockly.Msg.LANG_TEXT_APPEND_VARIABLE="item";Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP='Append some text to variable "%1".';Blockly.Msg.LANG_TEXT_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#length";Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH="length";Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP="Returns number of letters (including spaces)\nin the provided text.";
Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#isempty";Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY="is empty";Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP="Returns true if the length of the\ntext is 0, false otherwise.";Blockly.Msg.LANG_TEXT_COMPARE_LT=" <";Blockly.Msg.LANG_TEXT_COMPARE_EQUAL=" =";Blockly.Msg.LANG_TEXT_COMPARE_GT=" >";Blockly.Msg.LANG_TEXT_COMPARE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#compare";Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE=
"compare texts";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT="Tests whether text1 is lexicographically less than text2.\nif one text is the prefix of the other, the shorter text is\nconsidered smaller. Uppercase characters precede lowercase characters.";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL="Tests whether text strings are identical, ie., have the same\ncharacters in the same order. This is different from ordinary =\nin the case where the text strings are numbers: 123 and 0123 are =\nbut not text =.";
Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT="Reports whether text1 is lexicographically greater than text2.\nif one text is the prefix of the other, the shorter text is considered smaller.\nUppercase characters precede lowercase characters.";Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE_TOOLTIP="Produces text, like a text block.  The difference is that the \ntext is not easily discoverable by examining the app's APK.  Use this when creating apps \nto distribute that include confidential information, for example, API keys.  \nWarning: This provides only very low security against expert adversaries.";
Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE="Obsfucated Text";Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#obsfucatetext";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE="upcase";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE="downcase";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE="Returns a copy of its text string argument converted to uppercase.";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#upcase";
Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE="Returns a copy of its text string argument converted to lowercase.";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#downcase";Blockly.Msg.LANG_TEXT_TRIM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#trim";Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM="trim";Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP="Returns a copy of its text string arguments with any\nleading or trailing spaces removed.";
Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#startsat";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT="starts at";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT="text";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE="piece";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT="starts at  text %1 piece %2";Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP="Returns the starting index of the piece in the text.\nwhere index 1 denotes the beginning of the text. Returns 0 if the\npiece is not in the text.";
Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS="contains";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT="text";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE="piece";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT="contains  text %1 piece %2";Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP="Tests whether the piece is contained in the text.";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL="";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT=
"text";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT="at";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST="at (list)";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST="split at first";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY="split at first of any";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT="split";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY="split at any";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST='Divides the given text into two pieces using the location of the first occurrence of \nthe text \'at\' as the dividing point, and returns a two-item list consisting of the piece \nbefore the dividing point and the piece after the dividing point. \nSplitting "apple,banana,cherry,dogfood" with a comma as the splitting point \nreturns a list of two items: the first is the text "apple" and the second is the text \n"banana,cherry,dogfood". \nNotice that the comma after "apple" does not appear in the result, \nbecause that is the dividing point.';
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitat";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY='Divides the given text into a two-item list, using the first location of any item \nin the list \'at\' as the dividing point. \n\nSplitting "I love apples bananas apples grapes" by the list "(ba,ap)" returns \na list of two items, the first being "I love" and the second being \n"ples bananas apples grapes."';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatfirstofany";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT='Divides text into pieces using the text \'at\' as the dividing points and produces a list of the results.  \nSplitting "one,two,three,four" at "," (comma) returns the list "(one two three four)". \nSplitting "one-potato,two-potato,three-potato,four" at "-potato", returns the list "(one two three four)".';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT="http://appinventor.mit.edu/explore/ai2/support/blocks/text#split";
Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY='Divides the given text into a list, using any of the items in the list \'at\' as the \ndividing point, and returns a list of the results. \nSplitting "appleberry,banana,cherry,dogfood" with \'at\' as the two-element list whose \nfirst item is a comma and whose second item is "rry" returns a list of four items: \n"(applebe banana che dogfood)".';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatany";
Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE="split at spaces";Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP="Split the text into pieces separated by spaces.";Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#segment";Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT="segment";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START="start";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH=
"length";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT="text";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT="segment  text %1 start %2 length %3";Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP="Extracts the segment of the given length from the given text\nstarting from the given text starting from the given position. Position\n1 denotes the beginning of the text.";Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT=
"segment";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT="text";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL="replace all";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT="replacement";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT="replace all text %1 segment %2 replacement %3";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP="Returns a new text obtained by replacing all occurrences\nof the segment with the replacement.";Blockly.Msg.LANG_CATEGORY_LISTS="Lists";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE=
"create empty list";Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist";Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST="make a list";Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP="Create a list with any number of items.";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD="list";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP="Add, remove, or reorder sections to reconfigure this list block.";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE=
"item";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP="Add an item to the list.";Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE="item";Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP="Add an item to the list.";Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT="select list item";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST=
"list";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX="index";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT="select list item  list %1 index %2";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP="Returns the item at position index in the list.";Blockly.Msg.LANG_LISTS_IS_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist";Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN="is in list?";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING="thing";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_IS_IN_INPUT=
"is in list? thing %1 list %2";Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP="Returns true if the the thing is an item in the list, and false if not.";Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist";Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION="index in list";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING="thing";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT="index in list  thing %1 list %2";
Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP="Find the position of the thing in the list. If it's not in the list, return 0.";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM="pick a random item";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP="Pick an item at random from the list.";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE="replace list item";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX="index";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT="replacement";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT="replace list item  list %1 index %2 replacement %3";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP="Replaces the nth item in a list.";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE="remove list item";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX="index";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT="remove list item  list %1 index %2";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP="Removes the item at the specified position from the list.";Blockly.Msg.LANG_LISTS_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist";
Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH="length of list";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_LENGTH_INPUT="length of list list %1";Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP="Counts the number of items in a list.";Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#append";Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND="append to list";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1="list1";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2=
"list2";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT="append to list  list1 %1 list2 %2";Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP="Appends all the items in list2 onto the end of list1. After the append, list1 will include these additional elements, but list2 will be unchanged.";Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD="add items to list";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST=" list";
Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM="item";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT="add items to list list %1 item %2";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP="Adds items to the end of a list.";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD="list";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP="Add, remove, or reorder sections to reconfigure this list block.";Blockly.Msg.LANG_LISTS_COPY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy";Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY=
"copy list";Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_COPY_TOOLTIP="Makes a copy of a list, including copying all sublists";Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist";Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST="is a list?";Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING="thing";Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP="Tests if something is a list.";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow";
Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV="list to csv row";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP="Interprets the list as a row of a table and returns a CSV (comma-separated value) text representing the row. Each item in the row list is considered to be a field, and is quoted with double-quotes in the resulting CSV text. Items are separated by commas. The returned row text does not have a line separator at the end.";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV="list from csv row";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT="text";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP="Parses a text as a CSV (comma-separated value) formatted row to produce a list of fields. It is an error for the row text to contain unescaped newlines inside fields (effectively, multiple lines). It is okay for the row text to end in a single newline or CRLF.";
Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV="list to csv table";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP="Interprets the list as a table in row-major format and returns a CSV (comma-separated value) text representing the table. Each item in the list should itself be a list representing a row of the CSV table. Each item in the row list is considered to be a field, and is quoted with double-quotes in the resulting CSV text. In the returned text, items in rows are separated by commas and rows are separated by CRLF (\\r\\n).";
Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV="list from csv table";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT="text";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP="Parses a text as a CSV (comma-separated value) formatted table to produce a list of rows, each of which is a list of fields. Rows can be separated by newlines (\\n) or CRLF (\\r\\n).";Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert";Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST="insert list item";Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX="index";Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM="item";Blockly.Msg.LANG_LISTS_INSERT_INPUT="insert list item  list %1 index %2 item %3";Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP="Insert an item into a list at the specified position.";Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty";
Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY="is list empty?";Blockly.Msg.LANG_LISTS_INPUT_LIST="list";Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP="Returns true if the list is empty.";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS="look up in pairs";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY="key";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS="pairs";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND=
"notFound";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT="look up in pairs  key %1 pairs %2 notFound %3";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP="Returns the value associated with the key in the list of pairs";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT="initialize global";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME="name";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO=
"to";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT="global";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP="Creates a global variable and gives it the value of the attached blocks.";Blockly.Msg.LANG_VARIABLES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#get";Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET="get";Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT="get";Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP="Returns the value of this variable.";Blockly.Msg.LANG_VARIABLES_SET_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/variables#set";Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET="set";Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO="to";Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT="set";Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP="Sets this variable to be equal to the input.";Blockly.Msg.LANG_VARIABLES_VARIABLE=" variable";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#do";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT=
"initialize local";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME="name";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO="to";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO="in";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT="local";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP="Allows you to create variables that are only accessible in the do part of this block.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME="initialize local in do";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/variables#return";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN="in";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT="local";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP="Allows you to create variables that are only accessible in the return part of this block.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME="initialize local in return";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES=
"local names";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP="";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME="name";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE="x";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE="to";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="procedure";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO="do";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX=
"to ";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP="A procedure that does not return a value.";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN="result";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO="do";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN="result";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP="Runs the blocks in 'do' and returns a statement. Useful if you need to run a procedure before returning a value to a variable.";
Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT="do/result";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE="to";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DO=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN="result";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX=
"to ";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP="A procedure returning a result value.";Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING="Warning:\nThis procedure has\nduplicate inputs.";Blockly.Msg.LANG_PROCEDURES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL="call ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE=
"procedure";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX="call ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="Call a procedure with no return value.";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME="call no return";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL=Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_PROCEDURE=
Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX="call ";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP="Call a procedure with a return value.";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME="call return";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE="inputs";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE="input:";Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF="Highlight Procedure";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP=
"";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP="";Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN="when ";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO="do";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL="call ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL="call ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT="for component";
Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT="of component";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET="set ";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO=" to";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET="set ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO=
" to";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT="of component";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL="/reference/components/userinterface.html#Button";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL="/reference/components/userinterface.html#buttonproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL="/reference/components/userinterface.html#buttonevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL="/reference/components/userinterface.html#CheckBox";
Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#checkboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL="/reference/components/userinterface.html#checkboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL="/reference/components/userinterface.html#Clock";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL="/reference/components/userinterface.html#clockproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL=
"/reference/components/userinterface.html#clockevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL="/reference/components/userinterface.html#clockmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL="/reference/components/userinterface.html#Image";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL="/reference/components/userinterface.html#imageproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL="/reference/components/userinterface.html#imageevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL=
"/reference/components/userinterface.html#imagemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL="/reference/components/userinterface.html#Label";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL="/reference/components/userinterface.html#labelproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL="/reference/components/userinterface.html#labelevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL="/reference/components/userinterface.html#labelmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL=
"/reference/components/userinterface.html#ListPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL="/reference/components/userinterface.html#listpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL="/reference/components/userinterface.html#listpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL="/reference/components/userinterface.html#listpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL="/reference/components/userinterface.html#Notifier";
Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL="/reference/components/userinterface.html#notifierproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL="/reference/components/userinterface.html#notifierevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL="/reference/components/userinterface.html#notifiermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL="/reference/components/userinterface.html#PasswordTextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL=
"/reference/components/userinterface.html#pwdboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#pwdboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#pwdboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL="/reference/components/userinterface.html#Screen";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL="/reference/components/userinterface.html#screenproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL="/reference/components/userinterface.html#screenevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL="/reference/components/userinterface.html#screenmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL="/reference/components/userinterface.html#Slider";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL="/reference/components/userinterface.html#sliderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL="/reference/components/userinterface.html#sliderevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL="/reference/components/userinterface.html#slidermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL="/reference/components/userinterface.html#TextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#textboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#textboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL=
"/reference/components/userinterface.html#textboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL="/reference/components/userinterface.html#WebViewer";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL="/reference/components/userinterface.html#webviewerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL="/reference/components/userinterface.html#webviewerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL="/reference/components/userinterface.html#webviewermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL="/reference/components/layout.html#HorizontalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#horizarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL="/reference/components/layout.html#VerticalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#vertarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL=
"/reference/components/layout.html#TableArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#tablearrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL="/reference/components/media.html#Camcorder";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL="/reference/components/media.html#camcorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL="/reference/components/media.html#camcorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL=
"/reference/components/media.html#camcordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL="/reference/components/media.html#Camera";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL="/reference/components/media.html#cameraproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL="/reference/components/media.html#cameraevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL="/reference/components/media.html#cameramethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL=
"/reference/components/media.html#ImagePicker";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL="/reference/components/media.html#imagepickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL="/reference/components/media.html#imagepickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL="/reference/components/media.html#imagepickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL="/reference/components/media.html#Player";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL=
"/reference/components/media.html#playerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL="/reference/components/media.html#playerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL="/reference/components/media.html#playermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL="/reference/components/media.html#Sound";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL="/reference/components/media.html#soundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL=
"/reference/components/media.html#soundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL="/reference/components/media.html#soundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL="/reference/components/media.html#SoundRecorder";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL="/reference/components/media.html#soundrecorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL="/reference/components/media.html#soundrecorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL=
"/reference/components/media.html#soundrecordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL="/reference/components/media.html#SpeechRecognizer";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL="/reference/components/media.html#speechrecognizerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL="/reference/components/media.html#speechrecognizerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL="/reference/components/media.html#speechrecognizermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL="/reference/components/media.html#TextToSpeech";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL="/reference/components/media.html#texttospeechproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL="/reference/components/media.html#texttospeechevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL="/reference/components/media.html#texttospeechmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL=
"/reference/components/media.html#VideoPlayer";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL="/reference/components/media.html#videoplayerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL="/reference/components/media.html#videoplayerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL="/reference/components/media.html#videoplayermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL="/reference/components/animation.html#Ball";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL=
"/reference/components/animation.html#ballproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL="/reference/components/animation.html#ballevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL="/reference/components/animation.html#ballmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL="/reference/components/animation.html#Canvas";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL="/reference/components/animation.html#canvasproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL=
"/reference/components/animation.html#canvasevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL="/reference/components/animation.html#canvasmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL="/reference/components/animation.html#ImageSprite";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL="/reference/components/animation.html#imagespriteproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL="/reference/components/animation.html#imagespriteevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL="/reference/components/animation.html#imagespritemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL="/reference/components/sensors.html#AccelerometerSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#accelerometersensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#accelerometersensorevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL="/reference/components/sensors.html#accelerometersensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL="/reference/components/sensors.html#BarcodeScanner";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL="/reference/components/sensors.html#barcodescannerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL="/reference/components/sensors.html#barcodescannerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL=
"/reference/components/sensors.html#barcodescannermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL="/reference/components/sensors.html#LocationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#locationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#locationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#locationsensormethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL="/reference/components/sensors.html#OrientationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#orientationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#orientationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#orientationsensormethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL="/reference/components/social.html#ContactPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL="/reference/components/social.html#contactpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL="/reference/components/social.html#contactpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL="/reference/components/social.html#contactpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL=
"/reference/components/social.html#EmailPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL="/reference/components/social.html#emailpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL="/reference/components/social.html#emailpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL="/reference/components/social.html#emailpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL="/reference/components/social.html#PhoneCall";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL=
"/reference/components/social.html#phonecallproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL="/reference/components/social.html#phonecallevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL="/reference/components/social.html#phonecallmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL="/reference/components/social.html#PhoneNumberPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL="/reference/components/social.html#phonenumberpickerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL="/reference/components/social.html#phonenumberpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL="/reference/components/social.html#phonenumberpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL="/reference/components/social.html#Texting";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL="/reference/components/social.html#textingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL=
"/reference/components/social.html#textingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL="/reference/components/social.html#textingmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL="/reference/components/social.html#Twitter";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL="/reference/components/social.html#twitterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL="/reference/components/social.html#twitterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL=
"/reference/components/social.html#twittermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL="/reference/components/storage.html#FusiontablesControl";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL="/reference/components/storage.html#fusiontablescontrolproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL="/reference/components/storage.html#fusiontablescontrolevents";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL=
"/reference/components/storage.html#fusiontablescontrolmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL="/reference/components/storage.html#TinyDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinydbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL="/reference/components/storage.html#tinydbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL="/reference/components/storage.html#tinydbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL=
"/reference/components/storage.html#TinyWebDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinywebdbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL="/reference/components/storage.html#tinywebdbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL="/reference/components/storage.html#tinywebdbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL="/reference/components/connectivity.html#ActivityStarter";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL="/reference/components/connectivity.html#activitystarterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL="/reference/components/connectivity.html#activitystarterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL="/reference/components/connectivity.html#activitystartermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL="/reference/components/connectivity.html#BluetoothClient";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothclientevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL="/reference/components/connectivity.html#BluetoothServer";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothserverproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothserverevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothservermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL="/reference/components/connectivity.html#Web";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL=
"/reference/components/connectivity.html#webproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL="/reference/components/connectivity.html#webevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL="/reference/components/connectivity.html#webmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL="/reference/components/legomindstorms.html#NxtDirectCommands";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdirectproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdirectmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL="/reference/components/legomindstorms.html#NxtColorSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtcolorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtcolorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL=
"/reference/components/legomindstorms.html#nxtcolormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL="/reference/components/legomindstorms.html#NxtLightSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtlightproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtlightevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtlightmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL="/reference/components/legomindstorms.html#NxtSoundSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtsoundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtsoundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtsoundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL=
"/reference/components/legomindstorms.html#NxtTouchSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxttouchproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxttouchevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL="/reference/components/legomindstorms.html#nxttouchmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL="/reference/components/legomindstorms.html#NxtUltrasonicSensor";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL="/reference/components/legomindstorms.html#NxtDrive";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL=
"/reference/components/legomindstorms.html#nxtdriveproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdrivemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL="/reference/components/internal.html#GameClient";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL="/reference/components/internal.html#gameclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL="/reference/components/internal.html#gameclientevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL="/reference/components/internal.html#gameclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL="/reference/components/internal.html#Voting";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL="/reference/components/internal.html#votingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL="/reference/components/internal.html#votingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL="/reference/components/internal.html#votingmethods";
Blockly.Msg.SHOW_WARNINGS="Show Warnings";Blockly.Msg.HIDE_WARNINGS="Hide Warnings";Blockly.Msg.MISSING_SOCKETS_WARNINGS="You should fill all of the sockets with blocks";Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS="This block should be connected to an event block or a procedure definition";Blockly.Msg.REPL_ERROR_FROM_COMPANION="Error from Companion";Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR="Network Connection Error";Blockly.Msg.REPL_NETWORK_ERROR="Network Error";Blockly.Msg.REPL_NETWORK_ERROR_RESTART="Network Error Communicating with Companion.<br />Try restarting the Companion and reconnecting";
Blockly.Msg.REPL_OK="OK";Blockly.Msg.REPL_COMPANION_VERSION_CHECK="Companion Version Check";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE='Your Companion App is out of date. Click "OK" to start the update. Watch your ';Blockly.Msg.REPL_EMULATORS="emulator's";Blockly.Msg.REPL_DEVICES="device's";Blockly.Msg.REPL_APPROVE_UPDATE=" screen because you will be asked to approve the update.";Blockly.Msg.REPL_NOT_NOW="Not Now";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1="The Companion you are using is out of date.<br/><br/>This Version of App Inventor should be used with Companion version";
Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE="You are using an out-of-date Companion. You should update the MIT AI2 Companion as soon as possible. If you have auto-update setup in the store, the update will happen by itself shortly.";Blockly.Msg.REPL_DISMISS="Dismiss";Blockly.Msg.REPL_SOFTWARE_UPDATE="Software Update";Blockly.Msg.REPL_OK_LOWER="Ok";Blockly.Msg.REPL_GOT_IT="Got It";Blockly.Msg.REPL_UPDATE_INFO='The update is now being installed on your device. Watch your device (or emulator) screen and approve the software installation when prompted.<br /><br />IMPORTANT: When the update finishes, choose "DONE" (don\'t click "open"). Then go to App Inventor in your web browser, click the "Connect" menu and choose "Reset Connection".  Then reconnect the device.';
Blockly.Msg.REPL_UNABLE_TO_UPDATE="Unable to send update to device/emulator";Blockly.Msg.REPL_UNABLE_TO_LOAD="Unable to load update from App Inventor server";Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND="Unable to load update from App Inventor server (server not responding)";Blockly.Msg.REPL_NOW_DOWNLOADING="We are now downloading update from the App Inventor Server, please standby";Blockly.Msg.REPL_RUNTIME_ERROR="Runtime Error";Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS="<br/><i>Note:</i>&nbsp;You will not see another error reported for 5 seconds.";
Blockly.Msg.REPL_CONNECTING_USB_CABLE="Connecting via USB Cable";Blockly.Msg.REPL_STARTING_EMULATOR="Starting the Android Emulator<br/>Please wait: This might take a minute or two.";Blockly.Msg.REPL_CONNECTING="Connecting...";Blockly.Msg.REPL_CANCEL="Cancel";Blockly.Msg.REPL_GIVE_UP="Give Up";Blockly.Msg.REPL_KEEP_TRYING="Keep Trying";Blockly.Msg.REPL_CONNECTION_FAILURE1="Connection Failure";Blockly.Msg.REPL_NO_START_EMULATOR="We could not start the MIT AI Companion within the Emulator";Blockly.Msg.REPL_PLUGGED_IN_Q=
"Plugged In?";Blockly.Msg.REPL_AI_NO_SEE_DEVICE="AI2 does not see your device, make sure the cable is plugged in and drivers are correct.";Blockly.Msg.REPL_HELPER_Q="Helper?";Blockly.Msg.REPL_HELPER_NOT_RUNNING='The aiStarter helper does not appear to be running<br /><a href="http://appinventor.mit.edu" target="_blank">Need Help?</a>';Blockly.Msg.REPL_USB_CONNECTED_WAIT="USB Connected, waiting ";Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING=" seconds to ensure all is running.";Blockly.Msg.REPL_EMULATOR_STARTED=
"Emulator started, waiting ";Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE="Starting the Companion App on the connected phone.";Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR="Starting the Companion App in the emulator.";Blockly.Msg.REPL_COMPANION_STARTED_WAITING="Companion starting, waiting ";Blockly.Msg.REPL_VERIFYING_COMPANION="Verifying that the Companion Started....";Blockly.Msg.REPL_CONNECT_TO_COMPANION="Connect to Companion";Blockly.Msg.REPL_TRY_AGAIN1="Failed to Connect to the MIT AI2 Companion, try again.";
Blockly.Msg.REPL_YOUR_CODE_IS="Your code is";Blockly.Msg.REPL_DO_YOU_REALLY_Q="Do You Really?";Blockly.Msg.REPL_FACTORY_RESET='This will attempt to reset your Emulator to its "factory" state. If you had previously updated the Companion installed in the Emulator, you will likely have to do this again.';Blockly.Msg.WARNING_DELETE_X_BLOCKS="Are you sure you want to delete all %1 of these blocks?";Blockly.Msg.GENERATE_YAIL="Generate Yail";Blockly.Msg.DO_IT="Do It";Blockly.Msg.CLEAR_DO_IT_ERROR="Clear Error";
Blockly.Msg.CAN_NOT_DO_IT="Cannot Do it";Blockly.Msg.CONNECT_TO_DO_IT='You must be connected to the companion or emulator to use "Do It"'}};Blockly.Msg.en.switch_language_to_english.init();Blockly.Msg.es_es={};
Blockly.Msg.es_es.switch_language_to_spanish_es={category:"",helpUrl:"",init:function(){Blockly.Msg.DUPLICATE_BLOCK="Duplicar";Blockly.Msg.REMOVE_COMMENT="Borrar Comentario";Blockly.Msg.ADD_COMMENT="Añadir Commentario";Blockly.Msg.EXTERNAL_INPUTS="Entradas Externas";Blockly.Msg.INLINE_INPUTS="Entradas Internas";Blockly.Msg.HORIZONTAL_PARAMETERS="Colocar Parametros Horizontalmente";Blockly.Msg.VERTICAL_PARAMETERS="Colocar Parametros Verticalmente";Blockly.Msg.DELETE_BLOCK="Borrar Bloque";Blockly.Msg.DELETE_X_BLOCKS=
"Borrar %1 Bloques";Blockly.Msg.COLLAPSE_BLOCK="Ocultar Bloque";Blockly.Msg.EXPAND_BLOCK="Mostrar Bloque";Blockly.Msg.DISABLE_BLOCK="Inhabilitar Bloque";Blockly.Msg.ENABLE_BLOCK="Habilitar Bloque";Blockly.Msg.HELP="Ayuda";Blockly.Msg.EXPORT_IMAGE="Exportar como Imagen";Blockly.Msg.COLLAPSE_ALL="Ocultar Bloques";Blockly.Msg.EXPAND_ALL="Mostrar Bloques";Blockly.Msg.ARRANGE_H="Ordenar Bloques Horizontalmente";Blockly.Msg.ARRANGE_V="Ordenar Bloques Verticalmente";Blockly.Msg.ARRANGE_S="Ordenar Bloques Diagonalmente";
Blockly.Msg.SORT_W="Ordenar Bloques por Anchura";Blockly.Msg.SORT_H="Ordenar Bloques por Altura";Blockly.Msg.SORT_C="Ordenar Bloques por Categoría";Blockly.MSG_CHANGE_VALUE_TITLE="Cambiar valor:";Blockly.MSG_NEW_VARIABLE="Nueva variable...";Blockly.MSG_NEW_VARIABLE_TITLE="Nuevo nombre de variable:";Blockly.MSG_RENAME_VARIABLE="Renombrar variable...";Blockly.MSG_RENAME_VARIABLE_TITLE='Renombrar todas las "%1" variables:';Blockly.MSG_VARIABLE_CATEGORY="Variables";Blockly.MSG_PROCEDURE_CATEGORY="Procedimientos";
Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION="Este bloque no se puede colocar en una definición";Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN="Escoja un elemento válido.";Blockly.ERROR_DUPLICATE_EVENT_HANDLER="El evento está duplicado para este componente.";Blockly.Msg.LANG_COLOUR_PICKER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic";Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP="Pincha el cuadrado para escoger un color.";Blockly.Msg.LANG_COLOUR_BLACK="negro";Blockly.Msg.LANG_COLOUR_WHITE=
"blanco";Blockly.Msg.LANG_COLOUR_RED="rojo";Blockly.Msg.LANG_COLOUR_PINK="rosa";Blockly.Msg.LANG_COLOUR_ORANGE="naranja";Blockly.Msg.LANG_COLOUR_YELLOW="amarillo";Blockly.Msg.LANG_COLOUR_GREEN="verde";Blockly.Msg.LANG_COLOUR_CYAN="cian";Blockly.Msg.LANG_COLOUR_BLUE="azúl";Blockly.Msg.LANG_COLOUR_MAGENTA="magenta";Blockly.Msg.LANG_COLOUR_LIGHT_GRAY="gris claro";Blockly.Msg.LANG_COLOUR_DARK_GRAY="gris oscuro";Blockly.Msg.LANG_COLOUR_GRAY="gris";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR="separar color";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP="Una lista de 4 elementos, cada uno en el rango de 0 a 255, que representan los components Rojo, Verde, Azúl y Alpha(transparente).";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR="crear color";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP="Un color con la cantidad dada de rojo, verde, azúl, y opcionalmente, alpha.";
Blockly.Msg.LANG_CATEGORY_CONTROLS="Control";Blockly.Msg.LANG_CONTROLS_IF_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#if";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1="Si el valor es cierto, ejecutar las siguientes instrucciones.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2="Si el valor es cierto, ejecutar el primer bloque de instrucciones. Si no es cierto, ejecutar el segundo bloque de instrucciones.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3="Si el primer valor es cierto, ejecutar el primer bloque de instrucciones.\nSi no, si el segundo valor es cierto, ejecutar el segundo bloque de instrucciones.";
Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4="Si el primer valor es cierto, ejecutar el primer bloque de instrucciones.\nSi no, si el segundo valor es cierto, ejecutar el segundo bloque de instrucciones.\nSi ninguno de los valores es verdadero, ejecutar el último bloque de instrucciones.";Blockly.Msg.LANG_CONTROLS_IF_MSG_IF="si";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF="si no, si";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE="si no";Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN="entonces";Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF=
"si";Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP="Añadir, borrar, o reordenar secciones\npara re-configurar este bloque si.";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF="si no, si";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="Añade una condición al bloque si.";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE="si no, ";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP="Añade una condición final al bloque si.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";
Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT="repetir";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO="ejecuta";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="mientras";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="hasta";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="Mientras el valor es verdadero, ejecuta las siguientes instrucciones.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="Mientras el valor es falso, ejecuta ciertas instrucciones.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1=
"Ejecuta los bloques en la sección 'ejecuta' mientras el valor es verdadero.";Blockly.Msg.LANG_CONTROLS_FOR_HELPURL="";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH="contar con";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR="x";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM="desde";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO="hasta";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO="ejecuta";Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP='Cuenta desde el número inicial al final.\nPor cada número contado, asigna el número del contador a\nvariable "%1", y ejecuta las instrucciones.';
Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM="por cada";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR="número";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START="desde";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END="hasta";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP="en incrementos de";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO="ejecuta";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT=
"para cada número en el rango";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX="por ";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX=" en el  rango";Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP="Ejecuta los bloques en la sección 'ejecutar' para cada valor numérico en el rango desde el inicio al final, pasando por cada valor uno a uno. Utiliza el nombre de la variable asignada para referirse al valor actual.";Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach";
Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM="por cada";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR="elemento";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST="en la lista";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO="ejecutar";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT="por cada elemento en la lista";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX="por ";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX=" en la lista";Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP="Ejecutar los bloques en la sección 'do'  por cada elemento de la lista.  Utilizar el nombre de la variable dado para referirse al elemento actual de la lista.";
Blockly.Msg.LANG_CONTROLS_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#get";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL="http://en.wikipedia.org/wiki/Control_flow";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP="del bucle";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK="salir";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE="continuar con la siguiente iteración";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="Salir del bucle.";
Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="Saltar al final del bucle, y\ncontinuar con la siguiente iteración.";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="Aviso:\nEste bloque solo puede\nutilizarse dentro de un bucle.";Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILE_TITLE="mientras";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST="comprobar";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO="ejecutar";
Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT="mientras";Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP="Ejecutar los bloques en la sección 'do' mientras la comprobación sea cierta.";Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose";Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE="si";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST="";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN="entonces";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN="si no";
Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT="si";Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP="Si la condición a comprobar es cierta,devolver el resultado de evaluar la expresión encajada en la pieza 'then-return';en otro caso devolver el resultado de evaluar la expresión encajada en la pieza 'else-return' ;como máximo se evaluará una de las expresiones devueltas.";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO=
"ejecutar";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN="resultado";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP="Ejecutar los bloques en 'do' y devolver una sentencia. Útil cuando se requiere ejecutar un procedimiento antes de devolver un valor a una variable.";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT="ejecutar/resultado";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE="ejecutar resultado";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE="evaluar pero ignorar el resultado";
Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT="evaluar pero ignorar";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP="Ejecutar el bloque de código conectado e ignorar e ignorar el valor devuelto (si existe). Útil cuando se requiere invocar un procedimiento que devuelve un valor pero no se necesita dicho valor.";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen";
Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE="abrir otra pantalla";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME="Nombre de la pantalla";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT="abrir pantalla";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP="Abre una nueva pantalla en una aplicación de múltiples pantallas.";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue";
Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE="abre otra pantalla con un valor inicial";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME="Nombre de la pantalla";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE="Valor inicial";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT="abrir pantalla con valor";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP="Abrir una nueva pantalla en una aplicación de múltiples pantallas y pasar el valor inicial a dicha pantalla.";
Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE="tomar el valor inicial";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME="Nombre de la pantalla";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE="Valor inicial";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT="tomar el valor inicial";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP="Devuelve el valor que se pasó a esta pantalla cuando se abrió, normalmente desde otra pantalla de una aplicación multi-pantalla. Si no se pasó ningún valor, devuelve un texto en blanco.";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE="cerrar pantalla";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT="cerrar pantalla";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP="Cerrar la pantalla actual";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE=
"cerrar la pantalla con un valor";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT="resultado";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT="cerrar pantalla con un valor";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP="Cierra la pantalla actual y devuelve un resultado a la pantalla desde la que se abrió.";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE=
"cerrar la aplicación";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT="cerrar la aplicación";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP="Cierra todas las pantalla de esta aplicación y finaliza la aplicación.";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE="tomar el texto inicial";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT=
"tomar el texto inicial";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP="Devuelve el texto que se pasó a esta aplicación cuando fue iniciada desde otra aplicación. Si no se pasó ningún texto, devuelve un texto en blanco. Para aplicaciones de múltiples pantallas, utilícese tomar valor inicial en lugar de tomar texto inicial.";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE=
"cerrar pantalla con texto";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT="texto";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT="cerrar pantalla con texto";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP="Cierra la pantalla actual y devuelve texto a la aplicación desde la que se abrió. Para aplicaciones de múltiples pantallas, utilícese cerrar pantalla con un valor en lugar de cerrar pantalla con texto.";Blockly.Msg.LANG_CATEGORY_LOGIC="Lógica";
Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL="http://en.wikipedia.org/wiki/Inequality_(mathematics)";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ="Comprueba si dos cosas son iguales. \nLos elementos a comparar pueden ser cualquier cosa, no solo números.";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ=
"Devolver cierto si ambos elementos de entrada no son iguales.";Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME="lógica igual";Blockly.Msg.LANG_LOGIC_COMPARE_EQ="=";Blockly.Msg.LANG_LOGIC_COMPARE_NEQ="≠";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or";Blockly.Msg.LANG_LOGIC_OPERATION_AND="y";Blockly.Msg.LANG_LOGIC_OPERATION_OR="o";
Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND="Devolver cierto si todos los elementos de entrada son ciertos.";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR="Devolver cierto si algún elemento de entrada es cierto.";Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not";Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT="no";Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP="Devuelve cierto si el elemento de entrada es falso.\nDevuelve falso si el elemento de entrada es cierto.";
Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE="cierto";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE="falso";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE="Devuleve el valor booleano cierto.";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE="Devuleve el valor booleano falso.";Blockly.Msg.LANG_CATEGORY_MATH=
"Matemáticas";Blockly.Msg.LANG_MATH_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#number";Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP="Report the number shown.";Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER="número";Blockly.Msg.LANG_MATH_COMPARE_HELPURL="";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ="Devolver cierto si ambos números son iguales.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ=
"Devolver cierto si ambos números no son iguales.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT="Devolver cierto si el primer número es menor\nque el segundo.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE="Devolver cierto si el primer número es menor\no igual que el segundo.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT="Devolver cierto si el primer número es mayor\nque el segundo.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE="Devolver cierto si el primer número es mayor\no igual que el segundo.";Blockly.Msg.LANG_MATH_COMPARE_EQ=
"=";Blockly.Msg.LANG_MATH_COMPARE_NEQ="≠";Blockly.Msg.LANG_MATH_COMPARE_LT="<";Blockly.Msg.LANG_MATH_COMPARE_LTE="≤";Blockly.Msg.LANG_MATH_COMPARE_GT=">";Blockly.Msg.LANG_MATH_COMPARE_GTE="≥";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#add";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY="http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply";
Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD="Devolver la suma de dos números.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS="Devolver la resta de dos números.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY="Devolver la multiplicación de dos números.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE=
"Devolver el cociente de dos números.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER="Devolver el primer número elevado\nal segundo.";Blockly.Msg.LANG_MATH_ARITHMETIC_ADD="+";Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS="-";Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY="*";Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE="/";Blockly.Msg.LANG_MATH_ARITHMETIC_POWER="^";Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT="raiz cuadrada";Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE="valor absoluto";Blockly.Msg.LANG_MATH_SINGLE_OP_NEG="neg";
Blockly.Msg.LANG_MATH_SINGLE_OP_LN="log";Blockly.Msg.LANG_MATH_SINGLE_OP_EXP="e^";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT="Devolver la raiz cuadrada de un número.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS="Devolver el valor absoluto de un número.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#abs";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG=
"Devolver el negativo de un número.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#neg";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN="Devolver el logaritmo natural de un número.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#log";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP="Devolver e elevado a un número.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP="http://appinventor.mit.edu/explore/ai2/support/blocks/math#e";
Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND="Redondear al entero más próximo, superior o inferior.";Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND="http://appinventor.mit.edu/explore/ai2/support/blocks/math#round";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING="Redondea al número entero\n superior más cercano";Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING="http://appinventor.mit.edu/explore/ai2/support/blocks/math#ceiling";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR="Redondea al número entero\n inferior más cercano";
Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR="http://appinventor.mit.edu/explore/ai2/support/blocks/math#floor";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND="redondear";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING="superior";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR="inferior";Blockly.Msg.LANG_MATH_TRIG_SIN="sen";Blockly.Msg.LANG_MATH_TRIG_COS="cos";Blockly.Msg.LANG_MATH_TRIG_TAN="tan";Blockly.Msg.LANG_MATH_TRIG_ASIN="asen";Blockly.Msg.LANG_MATH_TRIG_ACOS="acos";Blockly.Msg.LANG_MATH_TRIG_ATAN="atan";
Blockly.Msg.LANG_MATH_TRIG_ATAN2="atan2";Blockly.Msg.LANG_MATH_TRIG_ATAN2_X="x";Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y="y";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN="Devuelve el seno de un ángulo en grados.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS="Devuelve el coseno de un ángulo en grados.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#cos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN=
"Devuelve la tangente de un ángulo en grados.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#tan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN="Devuelve el ángulo en grados  (-90,+90]\npara un valor seno dado.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#asin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS="Devuelve el ángulo en grados [0, 180)\npara un valor coseno dado.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#acos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN="Devuelve el ángulo en grados (-90, +90)\npara un valor tangente dado.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2="Devuelve el ángulo en grados (-180, +180]\npara unas coordenadas rectangulares dadas.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan2";
Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN="min";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX="max";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN="Devuelve el menor de sus argumentos.";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX="Devuelve el mayor de sus argumentos.";Blockly.Msg.LANG_MATH_DIVIDE="÷";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO="módulo de";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER="resto de";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT="cociente de";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO=
"Devolver el módulo.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO="http://appinventor.mit.edu/explore/ai2/support/blocks/math#modulo";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER="Devolver el resto.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#remainder";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT="Devolver el cociente.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#quotient";
Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomint";Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM="random integer";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM="Entre";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO="y";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT="entero aleatorio entre %1 y %2";Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP="Devuelve un número entero aleatorio entre el límite superior\ny el límite inferior. Los límites siempre estarán por debajo \nde 2**30.";
Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomfrac";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM="decimal aleatorio";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP="Devolver un número aleatorio entre 0 y 1.";Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomseed";Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM="semilla aleatoria";Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO="es";Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP=
"especifica una semilla numérica\npara el generador de números aleatorios";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT="convertir";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG="radianes a grados";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD="grados a radianes";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG="Devuelve el valor en grados entre\n[0, 360) correspondiente a los radianes definidos como argumento.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertrad";
Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD="Devuelve el valor en radianes entre\n[-π, +π) correspondiente a los grados definidos como argumento.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertdeg";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#format";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE="dar formato decimal";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM=
"número";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES="decimales";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT="dar formato decimal al número %1 decimales %2";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP="Devuelve un número en formato decimal\ncon un número especificado de cifras decimales.";Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM="¿es un número?";Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP=
"Comprueba si algo es un número.";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_INPUT_NUM="is base 10?";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_TOOLTIP="Tests if something is decimal.";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_INPUT_NUM="is hexadecimal?";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_TOOLTIP=
"Tests if something is hexadecimal.";Blockly.Msg.LANG_MATH_IS_A_BINARY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_BINARY_INPUT_NUM="is binary?";Blockly.Msg.LANG_MATH_IS_A_BINARY_TOOLTIP="Tests if something is binary.";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TITLE_CONVERT="convert number";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_HEX="base 10 to hex";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_HEX="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_HEX=
"Returns the conversion from decimal to hexadecimal";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_HEX_TO_DEC="hex to base 10";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_HEX_TO_DEC="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_HEX_TO_DEC="Returns the conversion from hexadecimal to decimal";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_BIN="base 10 to binary";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_BIN="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_BIN="Returns the conversion from decimal to binary";
Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_BIN_TO_DEC="binary to base 10";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_BIN_TO_DEC="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_BIN_TO_DEC="Returns the conversion from binary to decimal";Blockly.Msg.LANG_CATEGORY_TEXT="Texto";Blockly.Msg.LANG_TEXT_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#string";Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP="Una cadena de texto.";Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE="“";Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE=
"”";Blockly.Msg.LANG_TEXT_JOIN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#join";Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH="crear texto con";Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP="Concatena todas las entradas para formar una única cadena de texto.\nSi no hay entradas, crea un texto en blanco.";Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN="unir";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM="cadena";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP="";Blockly.Msg.LANG_TEXT_APPEND_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";
Blockly.Msg.LANG_TEXT_APPEND_TO="a";Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT="concatena texto";Blockly.Msg.LANG_TEXT_APPEND_VARIABLE="elemento";Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP='Añade texto a una variable "%1".';Blockly.Msg.LANG_TEXT_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#length";Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH="longitud";Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP="Devuelve el número de letras\nque hay en el texto especificado (espacios incluidos).";Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#isempty";Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY="está vacío";Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP="Devuelve cierto si la longitud del\ntexto es 0, y falso en otro caso.";Blockly.Msg.LANG_TEXT_COMPARE_LT=" <";Blockly.Msg.LANG_TEXT_COMPARE_EQUAL=" =";Blockly.Msg.LANG_TEXT_COMPARE_GT=" >";Blockly.Msg.LANG_TEXT_COMPARE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#comparar";Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE=
"comparar textos";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT="Compara si texto1 es lexicográficamente menor que texto2.\nsi un texto es el prefijo del otro, el texto más corto\nse considera menor. Los caracteres en mayúsculas preceden a los caracteres en minúsculas.";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL="Comprueba si dos cadenas de caracteres son idénticas, es decir, si tienen los mismos\ncaracteres en el mismo orden. Esto es diferente del = normal \ncuando las cadenas de texto son números: 123 y 0123 son =\npero no son texto =.";
Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT="Comprueba si texto1 es lexicográficamente mayor que texto2.\nsi un texto es prefijo del otro, el texto más corto se considera menor.\nLos cracteres en mayúsculas preceden a los caracteres en minúsculas.";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE="mayúscula";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE="minúscula";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE="Devuelve en mayúsculas una copia de la cadena de texto especificada como argumento.";
Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#upcase";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE="Devuelve en minúsculas una copia de la cadena de texto especificada como argumento.";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#downcase";Blockly.Msg.LANG_TEXT_TRIM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#trim";Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM=
"recortar";Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP="Devuelve una copia de la cadena de texto especificada como argumento\neliminando los espacios anteriores o posteriores.";Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#startsat";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT="comienza en";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT="texto";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE="cadena";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT="comienzo en el texto %1 cadena %2";
Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP="Devuelve la posición de inicio de una cadena de texto dentro de otro texto.\ndonde la posición 1 indica el inicio del texto. Devuelve 0 si\nno se ha encontrado la cadena dentro del texto.";Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS="contiene";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT="texto";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE="cadena";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT=
"contiene  texto %1 cadena %2";Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP="Comprueba si la cadena de caracteres está contenida dentro del texto.";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL="";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT="texto";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT="en";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST="en (lista)";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST="recorta el primero";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY="recorta el primero de cualquiera";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT=
"recorta";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY="recorta en cualquiera";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST="Divide en partes un texto dado, utilizando la posición de la primera ocurrencia \ndel texto 'at' como punto de división, y devuelve una lista de dos elementos, donde el primero es la parte de texto \nanterior al corte y el segundo es la parte posterior. \nRecortar \"manaza, plátano, cereza, piña\" con una coma como punto de corte \ndevuelve una lista de dos elementos: el primero es “manzana” y el segundo es el texto \n “plátano, cereza, piña”. \nObsérvese que la coma posterior a “manzana” no aparece en el resultado, \nporque es el punto de corte.";
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitat";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY='Divide el texto especificado en una lista de dos elementos, utilizando la primera posición de un elemento \nen la lista \'at\' como punto de corte. \n\nRecortar “Me gustan las manzanas plátanos manzanas uvas”  "I love apples bananas apples grapes" por la lista "(ma,pl)" devuelve \nuna lista de dos elementos, siendo el primero "Me gustan las" y el segundo \n"nzanas plátanos manzanas uvas."';
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatfirstofany";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT='Divide el texto en partes utilizando el texto \'at\' como puntos de corte y genera una lista con los resultados.  \nRecortar "uno,dos,tres,cuatro" en "," (coma) devuelve la lista "(uno dos tres cuatro)". \nRecortar "uno-patata,dos-patata,tres-patata,cuatro" en "-patata", devuelve la lista"(uno dos tres cuatro)".';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#split";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY="Divide el texto especificado en una lista, utilizando cualquiera de los elementos de la lista 'at' como \npunto de corte, y devuelve una lista con los resultados. \nRecortar \"manzana, pera, plátano, pescado\" con 'at' como lista de dos elementos cuyo \nprimer elemento es una coma y el segundo es “pe” devuelve una lista de cuatro elementos: \n\"(manzana ra plátano scado)\".";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatany";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE="dividir por espacios";Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP="Divide el texto en parte separadas por espacios.";Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#segment";Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT="segmento";
Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START="inicio";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH="longitud";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT="texto";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT="segmento de texto %1 inicio %2 longitud %3";Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP="Extrae de un texto dado un segmento de una longitud especificada\ncomenzando el texto desde la posición indicada. La posición\n1 indica el principio del texto.";Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall";
Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT="segmento";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT="texto";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL="sustituye por";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT="sustituto";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT="sustituye en todo el texto %1 segmento %2 sustituto %3";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP="Devuelve un texto nuevo resultado de sustituir todas las ocurrencias\ndel segmento por su sustituto.";Blockly.Msg.LANG_CATEGORY_LISTS=
"Listas";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE="crear una lista vacía";Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist";Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST="construye una lista";Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP="Crea una lista con un número de elementos.";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD="lista";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP="Añadir, borrar, o reordenar secciones para reconfigurar este bloque de lista.";
Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE="elemento";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP="Añadir un elemento a la lista.";Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE="elemento";Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP="Añadir un elemento a la lista.";Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT=
"seleccionar elemento de la lista";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX="índice";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT="seleccionar elemento de la lista %1 índice %2";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP="Devuelve el elemento de la lista ubicado en la posición indicada.";Blockly.Msg.LANG_LISTS_IS_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist";Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN="¿Está en la lista?";
Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING="cosa";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_IS_IN_INPUT="¿Está en la lista? cosa %1 lista %2";Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP="Devuelve cierto si la cosa es un elemento de la lista, y falso si no lo es.";Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist";Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION="índice en la lista";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING=
"cosa";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT="índice en la lista  cosa %1 lista %2";Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP="Encuentra la posición de algo concreto en la lista. Si no está enla lista, devuelve 0.";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM="toma un elemento al azar";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST=
"lista";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP="Tomar de la lista un elemento al azar.";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE="sustituye elemento de la lista";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX="índice";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT="sustituto";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT=
"sustituye elemento de la lista  lista %1 índice %2 sustituto %3";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP="Sustituye el elemeno n de una lista.";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE="eliminar elemento de la lista";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX="índice";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT="eliminar elemento de la lista lista %1 índice %2";
Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP="Elimina de la lista el elemento que ocupa una posición especificada.";Blockly.Msg.LANG_LISTS_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH="longitud de la lista";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_LENGTH_INPUT="longitud de la lista lista %1";Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP="Contar el número de elementos que hay en una lista.";
Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#append";Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND="añadir a la lista";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1="lista1";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2="lista2";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT="añadir a la lista lista1 %1 lista2 %2";Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP="Añade al final de la lista1 todos los elementos  que hay en lista2. Una vez añadidos, lista1 contendrá todos los elementos, y lista2 permanecerá inalterada.";
Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD="añadir elementos a la lista ";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST=" lista";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM="elemento";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT="añadir elementos a la lista list %1 elemento %2";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP="Añade elementos al final de una lista.";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD=
"lista";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP="Añadir, eliminar, o reordenar secciones para reconfigurar este bloque de lista.";Blockly.Msg.LANG_LISTS_COPY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy";Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY="copiar lista";Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_COPY_TOOLTIP="Hace una copia de una lista, incluyendo la copia de todas las sublistas";Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist";
Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST="¿es una lista?";Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING="cosa";Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP="Comprueba si algo es una lista.";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV="lista a registro csv";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP="Interpreta la lista como un registro de una tabla, y devuelve un texto CSV(comma-separated value) que representa al registro. Cada elemento de la lista de registros es considerado como un campo, y está delimitado por comillas en el texto CSV resultante. Los elementos están separados por comas. No hay un divisor de línea al final del texto devuelto.";
Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV="lista desde registro csv";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT="texto";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP="Analiza un texto como un registro en formato CSV (valores separados por comas) para generar una lista de campos. Es erróneo que el texto del registro contenga un carácter de cambio de línea sin código de escape dentro de los campos (en la práctica, varias líneas). Es correcto que el texto del registro termine con un carácter de cambio de línea o CRLF.";
Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV="lista a tabla csv";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP="Interpreta la lista como una tabla con formato row-major y devuelve un texto CSV (valores separados por comas) que representa a la tabla. Cada elemento de la lista debe ser por sí mismo una lista que representa un registro de la tabla CSV. Cada elemento en la lista de registros es considerado como un campo, y delimitado por comillas en el texto CSV resultante En el texto devuelto, los elementos de los registros están separados por comas,  y los registros están separados por CRLF (\\r\\n).";
Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV="lista desde tabla CSV";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT="texto";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP="Analiza un texto como una tabla con formato CSV (valores separados por comas) para producir una lista de registros, cada uno de los cuales es una lista de campos. Los registros se pueden separar por caracteres de cambio de línea (\\n) o CRLF (\\r\\n).";
Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert";Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST="insertar elemento en lista";Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX="índice";Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM="elemento";Blockly.Msg.LANG_LISTS_INSERT_INPUT="insertar elemento en lista lista %1 índice %2 elemento %3";Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP="Inserta un elemento en una lista en una posición especificada.";
Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty";Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY="¿está vacía la lista?";Blockly.Msg.LANG_LISTS_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP="Devuelve cierto si la lista está vacía.";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS="buscar por parejas";
Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY="clave";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS="parejas";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND="noEncontrado";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT="buscar por parejas  clave %1 parejas %2 noEncontrado %3";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP="Devuelve el valor asociado con la clave en la lista de parejas";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global";
Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT="inicializar global";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME="nombre";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO="como";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT="global";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP="Crea una variable global y le asigna el valor de los bloques encajados.";Blockly.Msg.LANG_VARIABLES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#get";
Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET="tomar";Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT="tomar";Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP="Devuelve el valor de esta variable.";Blockly.Msg.LANG_VARIABLES_SET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#set";Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET="poner";Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO="a";Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT="poner";Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP="Asigna a esta variable el valor especificado como entrada.";
Blockly.Msg.LANG_VARIABLES_VARIABLE=" variable";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#do";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT="inicializar local";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME="nombre";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO="como";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO="en";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT="local";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP=
"Permite crear variables que solamente son accesibles en la parte ejecutar de este bloque.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME="inicializar local en ejecutar";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#return";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN="en";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT="local";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP=
"Permite crear variables que solamente son accesibles en la sección resultado de este bloque.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME="inicializar local en resultado";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES="nombres locales";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP="";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME="nombre";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE="x";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE="como";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="procedimiento";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO="ejecutar";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX="como ";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP="Un procedimiento que o devuelve ningún valor.";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn";
Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN="resultado";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO="ejecutar";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN="resultado";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP="Ejecuta los bloques contenidos 'ejecutar' y devuelve un estado. Es útil cuando se necesita ejecutar un procedimiento antes de devolver un valor a una variable.";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT="ejecutar/resultado";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE="como";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DO=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN="resultado";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX="como ";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP="Un procedimiento que devuelve un valor como resultado.";
Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING="Aviso:\nEste procedimiento tiene\nentradas duplicadas.";Blockly.Msg.LANG_PROCEDURES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL="Llamar ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE="procedimiento";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX=
"invocar ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="Llamar a un procedimiento que no devuelve un valor.";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME="llamar sin resultado";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL=Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_PROCEDURE=Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE;
Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX="llamar ";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP="Hacer una llamada a un procedimiento que devuelve un valor.";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME="llamar resultado";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE="entradas";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE="entrada:";Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF="Procedimiento resaltado";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP="";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP=
"";Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN="cuando ";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO="ejecutar";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL="llamar ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL="llamar ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT="para el componente";Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL=
"";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT="del componente";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET="poner ";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO=" como";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET="poner ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO=" como";
Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT="del componente";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL="/reference/components/userinterface.html#Button";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL="/reference/components/userinterface.html#buttonproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL="/reference/components/userinterface.html#buttonevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL="/reference/components/userinterface.html#CheckBox";
Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#checkboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL="/reference/components/userinterface.html#checkboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL="/reference/components/userinterface.html#Clock";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL="/reference/components/userinterface.html#clockproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL=
"/reference/components/userinterface.html#clockevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL="/reference/components/userinterface.html#clockmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL="/reference/components/userinterface.html#Image";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL="/reference/components/userinterface.html#imageproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL="/reference/components/userinterface.html#imageevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL=
"/reference/components/userinterface.html#imagemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL="/reference/components/userinterface.html#Label";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL="/reference/components/userinterface.html#labelproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL="/reference/components/userinterface.html#labelevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL="/reference/components/userinterface.html#labelmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL=
"/reference/components/userinterface.html#ListPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL="/reference/components/userinterface.html#listpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL="/reference/components/userinterface.html#listpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL="/reference/components/userinterface.html#listpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL="/reference/components/userinterface.html#Notifier";
Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL="/reference/components/userinterface.html#notifierproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL="/reference/components/userinterface.html#notifierevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL="/reference/components/userinterface.html#notifiermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL="/reference/components/userinterface.html#PasswordTextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL=
"/reference/components/userinterface.html#pwdboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#pwdboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#pwdboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL="/reference/components/userinterface.html#Screen";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL="/reference/components/userinterface.html#screenproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL="/reference/components/userinterface.html#screenevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL="/reference/components/userinterface.html#screenmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL="/reference/components/userinterface.html#Slider";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL="/reference/components/userinterface.html#sliderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL="/reference/components/userinterface.html#sliderevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL="/reference/components/userinterface.html#slidermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL="/reference/components/userinterface.html#TextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#textboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#textboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL=
"/reference/components/userinterface.html#textboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL="/reference/components/userinterface.html#WebViewer";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL="/reference/components/userinterface.html#webviewerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL="/reference/components/userinterface.html#webviewerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL="/reference/components/userinterface.html#webviewermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL="/reference/components/layout.html#HorizontalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#horizarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL="/reference/components/layout.html#VerticalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#vertarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL=
"/reference/components/layout.html#TableArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#tablearrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL="/reference/components/media.html#Camcorder";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL="/reference/components/media.html#camcorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL="/reference/components/media.html#camcorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL=
"/reference/components/media.html#camcordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL="/reference/components/media.html#Camera";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL="/reference/components/media.html#cameraproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL="/reference/components/media.html#cameraevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL="/reference/components/media.html#cameramethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL=
"/reference/components/media.html#ImagePicker";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL="/reference/components/media.html#imagepickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL="/reference/components/media.html#imagepickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL="/reference/components/media.html#imagepickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL="/reference/components/media.html#Player";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL=
"/reference/components/media.html#playerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL="/reference/components/media.html#playerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL="/reference/components/media.html#playermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL="/reference/components/media.html#Sound";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL="/reference/components/media.html#soundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL=
"/reference/components/media.html#soundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL="/reference/components/media.html#soundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL="/reference/components/media.html#SoundRecorder";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL="/reference/components/media.html#soundrecorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL="/reference/components/media.html#soundrecorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL=
"/reference/components/media.html#soundrecordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL="/reference/components/media.html#SpeechRecognizer";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL="/reference/components/media.html#speechrecognizerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL="/reference/components/media.html#speechrecognizerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL="/reference/components/media.html#speechrecognizermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL="/reference/components/media.html#TextToSpeech";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL="/reference/components/media.html#texttospeechproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL="/reference/components/media.html#texttospeechevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL="/reference/components/media.html#texttospeechmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL=
"/reference/components/media.html#VideoPlayer";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL="/reference/components/media.html#videoplayerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL="/reference/components/media.html#videoplayerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL="/reference/components/media.html#videoplayermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL="/reference/components/animation.html#Ball";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL=
"/reference/components/animation.html#ballproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL="/reference/components/animation.html#ballevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL="/reference/components/animation.html#ballmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL="/reference/components/animation.html#Canvas";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL="/reference/components/animation.html#canvasproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL=
"/reference/components/animation.html#canvasevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL="/reference/components/animation.html#canvasmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL="/reference/components/animation.html#ImageSprite";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL="/reference/components/animation.html#imagespriteproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL="/reference/components/animation.html#imagespriteevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL="/reference/components/animation.html#imagespritemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL="/reference/components/sensors.html#AccelerometerSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#accelerometersensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#accelerometersensorevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL="/reference/components/sensors.html#accelerometersensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL="/reference/components/sensors.html#BarcodeScanner";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL="/reference/components/sensors.html#barcodescannerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL="/reference/components/sensors.html#barcodescannerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL=
"/reference/components/sensors.html#barcodescannermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL="/reference/components/sensors.html#LocationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#locationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#locationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#locationsensormethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL="/reference/components/sensors.html#OrientationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#orientationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#orientationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#orientationsensormethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL="/reference/components/social.html#ContactPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL="/reference/components/social.html#contactpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL="/reference/components/social.html#contactpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL="/reference/components/social.html#contactpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL=
"/reference/components/social.html#EmailPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL="/reference/components/social.html#emailpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL="/reference/components/social.html#emailpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL="/reference/components/social.html#emailpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL="/reference/components/social.html#PhoneCall";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL=
"/reference/components/social.html#phonecallproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL="/reference/components/social.html#phonecallevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL="/reference/components/social.html#phonecallmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL="/reference/components/social.html#PhoneNumberPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL="/reference/components/social.html#phonenumberpickerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL="/reference/components/social.html#phonenumberpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL="/reference/components/social.html#phonenumberpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL="/reference/components/social.html#Texting";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL="/reference/components/social.html#textingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL=
"/reference/components/social.html#textingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL="/reference/components/social.html#textingmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL="/reference/components/social.html#Twitter";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL="/reference/components/social.html#twitterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL="/reference/components/social.html#twitterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL=
"/reference/components/social.html#twittermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL="/reference/components/storage.html#FusiontablesControl";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL="/reference/components/storage.html#fusiontablescontrolproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL="/reference/components/storage.html#fusiontablescontrolevents";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL=
"/reference/components/storage.html#fusiontablescontrolmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL="/reference/components/storage.html#TinyDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinydbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL="/reference/components/storage.html#tinydbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL="/reference/components/storage.html#tinydbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL=
"/reference/components/storage.html#TinyWebDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinywebdbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL="/reference/components/storage.html#tinywebdbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL="/reference/components/storage.html#tinywebdbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL="/reference/components/connectivity.html#ActivityStarter";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL="/reference/components/connectivity.html#activitystarterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL="/reference/components/connectivity.html#activitystarterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL="/reference/components/connectivity.html#activitystartermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL="/reference/components/connectivity.html#BluetoothClient";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothclientevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL="/reference/components/connectivity.html#BluetoothServer";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothserverproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothserverevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothservermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL="/reference/components/connectivity.html#Web";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL=
"/reference/components/connectivity.html#webproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL="/reference/components/connectivity.html#webevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL="/reference/components/connectivity.html#webmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL="/reference/components/legomindstorms.html#NxtDirectCommands";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdirectproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdirectmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL="/reference/components/legomindstorms.html#NxtColorSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtcolorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtcolorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL=
"/reference/components/legomindstorms.html#nxtcolormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL="/reference/components/legomindstorms.html#NxtLightSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtlightproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtlightevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtlightmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL="/reference/components/legomindstorms.html#NxtSoundSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtsoundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtsoundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtsoundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL=
"/reference/components/legomindstorms.html#NxtTouchSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxttouchproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxttouchevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL="/reference/components/legomindstorms.html#nxttouchmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL="/reference/components/legomindstorms.html#NxtUltrasonicSensor";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL="/reference/components/legomindstorms.html#NxtDrive";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL=
"/reference/components/legomindstorms.html#nxtdriveproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdrivemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL="/reference/components/internal.html#GameClient";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL="/reference/components/internal.html#gameclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL="/reference/components/internal.html#gameclientevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL="/reference/components/internal.html#gameclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL="/reference/components/internal.html#Voting";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL="/reference/components/internal.html#votingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL="/reference/components/internal.html#votingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL="/reference/components/internal.html#votingmethods";
Blockly.Msg.SHOW_WARNINGS="Mostrar avisos";Blockly.Msg.REPL_ERROR_FROM_COMPANION="Error de Companion";Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR="Error de conexión de red";Blockly.Msg.REPL_NETWORK_ERROR="Error de red";Blockly.Msg.REPL_NETWORK_ERROR_RESTART="Error de red al comunicarse con Companion.<br />Intenta reinicar Companion y conectar de nuevo con él";Blockly.Msg.REPL_OK="OK";Blockly.Msg.REPL_COMPANION_VERSION_CHECK="Comprobación de la versión de Companion";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE=
'Tu aplicación Companion está anticuada. Haz clic en "OK" para actualizarla. Consulta la pantalla de tu ';Blockly.Msg.REPL_EMULATORS="emulador";Blockly.Msg.REPL_DEVICES="dispositivo";Blockly.Msg.REPL_APPROVE_UPDATE=" porque se te solicitará que apruebes la actualización.";Blockly.Msg.REPL_NOT_NOW="Ahora no";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1="La aplicación Companion que estás utilizando está anticuada..<br/><br/>Esta versión de App Inventor debe utilizarse con la versión ";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE=
"Estás utilizando una versión anticuada de Companion. No necesitas actualizarla inmediatamente, pero debes considerar hacerlo pronto.";Blockly.Msg.REPL_DISMISS="Descartar";Blockly.Msg.REPL_SOFTWARE_UPDATE="Actualización de software";Blockly.Msg.REPL_OK_LOWER="Ok";Blockly.Msg.REPL_GOT_IT="Entendido";Blockly.Msg.REPL_UPDATE_INFO='Se está instalando la actualización en tu dispositivo. Mira la pantalla de tu dispositivo (o emulador) y autoriza la instalación del software cuando se te solicite.<br /><br />IMPORTANTE: Cuando finalice la actualización, pulsa "HECHO" (no pulses  "abrir"). A continuación abre la página de App Inventor en el navegador, haz clic en el menú “Conectar” y selecciona la opción “Reiniciar conexión”.';
Blockly.Msg.REPL_UNABLE_TO_UPDATE="No se ha podido enviar la actualización al dispositivo/emulador.";Blockly.Msg.REPL_UNABLE_TO_LOAD="No se ha podido cargar la actualización desde el servidor de App Inventor";Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND="No se ha podido cargar la actualización desde el servidor de App Inventor (el servidor no está respondiendo)";Blockly.Msg.REPL_NOW_DOWNLOADING="Se está descargando la actualización desde el servidor de App Inventor, espera por favor.";Blockly.Msg.REPL_RUNTIME_ERROR=
"Error de ejecución";Blockly.Msg.REPL_NO_ERROR_FIVE_MINUTES="<br/><i>Nota:</i>&nbsp;No se mostrará ningún otro error en los próximos cinco segundos.";Blockly.Msg.REPL_CONNECTING_USB_CABLE="Estableciendo conexión mediante cable USB";Blockly.Msg.REPL_STARTING_EMULATOR="Iniciándose el emulador de Android<br/>Por favor espera, puede necesitar uno o dos minutos.";Blockly.Msg.REPL_CONNECTING="Conectando...";Blockly.Msg.REPL_CANCEL="Cancelar";Blockly.Msg.REPL_GIVE_UP="Abandonar";Blockly.Msg.REPL_KEEP_TRYING=
"Intentar de nuevo";Blockly.Msg.REPL_CONNECTION_FAILURE1="Conexión fallida";Blockly.Msg.REPL_NO_START_EMULATOR="No se pudo iniciar el MIT AI Companion en el emulador";Blockly.Msg.REPL_PLUGGED_IN_Q="¿Está conectado?";Blockly.Msg.REPL_AI_NO_SEE_DEVICE="AI2 no detecta tu dispositivo, comprueba que el cable está conectado y que los controladores son los adecuados.";Blockly.Msg.REPL_HELPER_Q="¿Asistente?";Blockly.Msg.REPL_HELPER_NOT_RUNNING='Parece que el asistente de aiStarter no se estñá ejecutando<br /><a href="http://appinventor.mit.edu" target="_blank">¿Necesitas ayuda?</a>';
Blockly.Msg.REPL_USB_CONNECTED_WAIT="USB conectando, espera ";Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING=" segundos para asegurate de que todo está funcionando.";Blockly.Msg.REPL_EMULATOR_STARTED="El emulador se ha iniciado, espera ";Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE="Iniciando la aplicación Companion en el dispositivo conectado.";Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR="Iniciando la aplicación Companion en el emulador.";Blockly.Msg.REPL_COMPANION_STARTED_WAITING="Iniciando Companion, espera ";
Blockly.Msg.REPL_VERIFYING_COMPANION="Verificando que Companion se ha iniciado...";Blockly.Msg.REPL_CONNECT_TO_COMPANION="Conectado a Companion";Blockly.Msg.REPL_TRY_AGAIN1="La conexión con MIT AI2 Companion ha fallado, inténtalo de nuevo.";Blockly.Msg.REPL_YOUR_CODE_IS="Tu código es";Blockly.Msg.REPL_DO_YOU_REALLY_Q="¿Estás totalmente seguro?";Blockly.Msg.REPL_FACTORY_RESET="Esto intentará devolver tu emulador a su estado “de fábrica”. Si habías actualizado Companion en el emulador, seguramente tendrás que hacerlo de nuevo.";
Blockly.Msg.WARNING_DELETE_X_BLOCKS="Estás seguro de que quieres borrar todos los %1 bloques?";Blockly.Msg.GENERATE_YAIL="Generate Yail";Blockly.Msg.DO_IT="Do It";Blockly.Msg.CLEAR_DO_IT_ERROR="Cerrar Error";Blockly.Msg.CAN_NOT_DO_IT='El comando "Do it" no está disponible';Blockly.Msg.CONNECT_TO_DO_IT='Necesitas estar conectado a la Companion or al Emulador para utilizar "Do It"'}};Blockly.Msg.es_es.switch_language_to_spanish_es.init();Blockly.Msg.it_it={};
Blockly.Msg.it_it.switch_language_to_italian={category:"",helpUrl:"",init:function(){Blockly.Msg.DUPLICATE_BLOCK="Duplica";Blockly.Msg.REMOVE_COMMENT="Rimuovi commento";Blockly.Msg.ADD_COMMENT="Inserisci commento";Blockly.Msg.EXTERNAL_INPUTS="Parametri esterni";Blockly.Msg.INLINE_INPUTS="Parametri interni";Blockly.Msg.HORIZONTAL_PARAMETERS="Disponi parametri orizzontalmente";Blockly.Msg.VERTICAL_PARAMETERS="Disponi parametri verticalmente";Blockly.Msg.DELETE_BLOCK="Elimina blocco";Blockly.Msg.DELETE_X_BLOCKS=
"Elimina %1 blocchi";Blockly.Msg.COLLAPSE_BLOCK="Collassa blocco";Blockly.Msg.EXPAND_BLOCK="Espandi blocco";Blockly.Msg.DISABLE_BLOCK="Disabilita blocco";Blockly.Msg.ENABLE_BLOCK="Abilita blocco";Blockly.Msg.HELP="Aiuto";Blockly.Msg.EXPORT_IMAGE="Esporta come immagine";Blockly.Msg.COLLAPSE_ALL="Collassa blocchi";Blockly.Msg.EXPAND_ALL="Espandi blocchi";Blockly.Msg.ARRANGE_H="Disponi blocchi orizzontalmente";Blockly.Msg.ARRANGE_V="Disponi blocchi verticalmente";Blockly.Msg.ARRANGE_S="Disponi blocchi diagonalmente";
Blockly.Msg.SORT_W="Disponi blocchi per larghezza";Blockly.Msg.SORT_H="Disponi blocchi per altezza";Blockly.Msg.SORT_C="Disponi blocchi per categoria";Blockly.MSG_CHANGE_VALUE_TITLE="Modifica valore:";Blockly.MSG_NEW_VARIABLE="Nuova variabile...";Blockly.MSG_NEW_VARIABLE_TITLE="Nuovo nome della variabile:";Blockly.MSG_RENAME_VARIABLE="Rinomina variabile...";Blockly.MSG_RENAME_VARIABLE_TITLE='Rinomina "%1" variabili a:';Blockly.MSG_VARIABLE_CATEGORY="Variabili";Blockly.MSG_PROCEDURE_CATEGORY="Procedure";
Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION="Questo blocco non può stare in una definizione";Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN="Seleziona un oggetto valido dalla tendina";Blockly.ERROR_DUPLICATE_EVENT_HANDLER="Evento duplicato per lo stesso componente.";Blockly.Msg.LANG_COLOUR_PICKER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic";Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP="Premi il riquadro per scegliere un colore.";Blockly.Msg.LANG_COLOUR_BLACK="nero";Blockly.Msg.LANG_COLOUR_WHITE=
"bianco";Blockly.Msg.LANG_COLOUR_RED="rosso";Blockly.Msg.LANG_COLOUR_PINK="rosa";Blockly.Msg.LANG_COLOUR_ORANGE="arancione";Blockly.Msg.LANG_COLOUR_YELLOW="giallo";Blockly.Msg.LANG_COLOUR_GREEN="verde";Blockly.Msg.LANG_COLOUR_CYAN="azzurro";Blockly.Msg.LANG_COLOUR_BLUE="blu";Blockly.Msg.LANG_COLOUR_MAGENTA="magenta";Blockly.Msg.LANG_COLOUR_LIGHT_GRAY="grigio chiaro";Blockly.Msg.LANG_COLOUR_DARK_GRAY="grigio scuro";Blockly.Msg.LANG_COLOUR_GRAY="grigio";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR="dividi colore";
Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP="Una lista di quattro elementi che rappresentano i componenti rosso, verde, blu e alfa. Possono assumere un valore tra 0 e 255";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR="crea colore";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP="Crea un colore a partire dai valori forniti per i componenti rosso, verde, blu e opzionalmente alfa";
Blockly.Msg.LANG_CATEGORY_CONTROLS="Controlli";Blockly.Msg.LANG_CONTROLS_IF_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#if";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1="Se il valore è vero, esegui il codice seguente.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2="Se il valore è vero, esegui il codice del primo blocco.\nAltrimenti, esegui il codice del secondo blocco.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3="Se il primo valore è vero, esegui il codice del primo blocco.\nAltrimenti, Se il secondo valore è vero, esegui il codice del secondo blocco.";
Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4="Se il primo valore è vero, esegui il codice del primo blocco.\nAltrimenti, se il secondo valore è vero, esegui il codice del secondo blocco.\nSe nessuno dei valori è vero, esegui il codice dell’ultimo blocco.";Blockly.Msg.LANG_CONTROLS_IF_MSG_IF="se";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF="altrimenti se";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE="altrimenti";Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN="allora";Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF="se";Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP=
"Aggiungi, rimuovi, o riordina le selezioni\nper riconfigurare questo blocco se.";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF="altrimenti se";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="Aggiungi una condizione al blocco se.";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE="altrimenti";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP="Aggiungi in fondo una condizione polivalente al blocco if.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";
Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT="ripeti";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO="fai";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="finchè";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="fino a";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="Finchè il valore è vero, esegui il codice seguente.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="Finchè il valore è falso, esegui il codice seguente.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1="Esegui i blocchi compresi tra 'fai' e finchè il test è vero.";
Blockly.Msg.LANG_CONTROLS_FOR_HELPURL="";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH="conta fino a";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR="x";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM="da";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO="a";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO="fai";Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP='Conta dal numero di partenza al numero finale.\nAd ogni giro, imposta il numero corrente del contatore a\nvariabile "%1", e dopo esegui quanto segue.';Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM="per ogni";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR="numero";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START="da";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END="a";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP="per";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO="fai";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT="per il range di numeri";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX=
"per ";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX=" nel range";Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP="Esegui i blocchi tra 'fai' sezione per ogni numerica valore nel renge dall’inizio alla fine, sommando il valore ogni volta.  Usa quanto segue nome della variabile riferita al valore corrente.";Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM="per ogni";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR=
"elemento";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST="nella lista";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO="fai";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT="per l’elemento in lista";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX="per ";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX=" nella lista";Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP="Esegui i blocchi tra 'fai'  sezione per ogni elemento contenuto Lista.  Usa questo nome di variabile per riferirti agli elementi della lista corrente.";
Blockly.Msg.LANG_CONTROLS_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#get";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL="http://en.wikipedia.org/wiki/Control_flow";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP="del ciclo";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK="interrompi";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE="continua con la prossima interazione";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="esci da questo ciclo.";
Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="Salta il resto di questo ciclo, e\ncontinua con la prossima interazione.";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="Attenzione:\nQuesto blocco può solamente\nessere utilizzato all'interno di un ciclo.";Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILE_TITLE="finchè";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST="test";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO=
"fai";Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT="finchè";Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP="Esegui i blocchi tra 'fai' finchè il test è vero.";Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose";Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE="se";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST="";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN="poi";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN="altrimenti";Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT=
"se";Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP="Se la condizione che stai testando è vera,allega il risultato dell’espressione allo 'then-return' slot;altrimenti allega il risultato dell’espressione allo 'else-return' slot;almeno una delle espressioni nello slot saranno processate.";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO="fai";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN=
"risultato";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP="esegui i blocchi in 'fai' e ristituisci il risultato. Utile se hai bisogno di eseguire una procedura prima di salvare il valore sulla variabile.";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT="fai/risultato";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE="esegui il risultato";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE="valuta ma ignora il risultato";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate";
Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT="valuta ma ignora";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP="Esegue i blocchi connessi e ignora il risultato (se presente). Utile se necessiti di chiamare una procedura con un valore di ritorno che non ti serve salvare";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE="apri un altro schermo";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME=
"nomeSchermo";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT="apri schermo";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP="Apri un nuovo schermo in un’app multi schermo.";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE="apri un altro schermo con un valore in avvio";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME=
"nomeSchermo";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE="ValoreAvvio";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT="apri uno schermo con valore";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP="Apri un nuovo schermo in un’app multi schermo e passa il valore di inizio a quello schermo.";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue";
Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE="ottieni il valore di avvio";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME="nomeSchermo";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE="valoreAvvio";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT="ottieni il valore di avvio";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP="Restituisce il valore che è stato passato a questo schermo quando quest’ultimo è stato aperto, di solito da un altro schermo in un’app multi schermo. Se nessun valore è stato passato, verrà riportato come testo vuoto.";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE="chiudi schermo";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT="chiudi schermo";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP="Chiudi questo schermo";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE=
"chiudi lo schermo con un valore";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT="risultato";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT="chiudi lo schermo con un valore";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP="Chiude lo schermo corrente e passa il valore allo schermo aperto da quest’ultimo.";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE=
"chiudi applicazione";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT="chiudi applicazione";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP="Chiude tutti gli schermi di questa app e termina il programma.";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE="ottieni il testo di inizio";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT=
"ottieni il testo di inizio";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP="ottieni il testo di inizio che è stato passato a questo schermo quando viene avviata un’altra app. Se nessun valore è stato passato, riporta del testo vuoto. Per app multi schermo, usare ottieni ottieni valore di avvio anzichè testo di inizio.";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE=
"chiudi schermo con testo";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT="testo";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT="chiudi schermo con testo";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP="Chiude questo schermo e restituisce il testo all’app precedente. Per app multi schermo, usa chiudi schermo con valore anzichè chiudi schermo con testo.";Blockly.Msg.LANG_CATEGORY_LOGIC="Logici";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL="http://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ="Verifica se i due campi sono uguali. \nPossono essere comparati sia numeri che stringhe di testo.";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ="Riporta vero se entrambi i campi non sono uguali fra loro.";Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME=
"uguaglianze logiche";Blockly.Msg.LANG_LOGIC_COMPARE_EQ="=";Blockly.Msg.LANG_LOGIC_COMPARE_NEQ="≠";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or";Blockly.Msg.LANG_LOGIC_OPERATION_AND="anche";Blockly.Msg.LANG_LOGIC_OPERATION_OR="oppure";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND="Riporta vero se tutti i campi sono vberi.";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR=
"Riporta vero se ogni campo è vero.";Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not";Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT="non";Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP="Riporta vero se il campo inserito è falso.\nRiporta falso se il campo inserito è vero.";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false";
Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE="vero";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE="falso";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE="Riporta il valore booleano vero.";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE="Riporta il valore booleano falso.";Blockly.Msg.LANG_CATEGORY_MATH="Matematici";Blockly.Msg.LANG_MATH_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#number";Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP="Riporta il numero indicato.";Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER=
"numero";Blockly.Msg.LANG_MATH_COMPARE_HELPURL="";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ="Riporta vero se entrambi i numeri sono uguali fra di loro.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ="Riporta vero se entrambi i numeri non sono uguali fra di loro.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT="Riporta vero se il primo numero è più piccolo\ndel secondo numero.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE=
"Riporta vero se il primo numero è più piccolo\noppure uguale al secondo numero.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT="Riporta vero se il primo numero è più grande\ndel secondo numero.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE="Riporta vero se il primo numero è più grande\noppure uguale al secondo numero.";Blockly.Msg.LANG_MATH_COMPARE_EQ="=";Blockly.Msg.LANG_MATH_COMPARE_NEQ="≠";Blockly.Msg.LANG_MATH_COMPARE_LT="<";Blockly.Msg.LANG_MATH_COMPARE_LTE="≤";Blockly.Msg.LANG_MATH_COMPARE_GT=">";
Blockly.Msg.LANG_MATH_COMPARE_GTE="≥";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#add";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY="http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide";
Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD="Riporta la somma di due numeri.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS="Riporta la differenza tra i due numeri.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY="Riporta la moltiplicazione tra i due numeri.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE="Riporta il risultato della divisione tra i due numeri.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER=
"Riporta il primo numero elevato\nalla potenza del secondo numero.";Blockly.Msg.LANG_MATH_ARITHMETIC_ADD="+";Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS="-";Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY="*";Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE="/";Blockly.Msg.LANG_MATH_ARITHMETIC_POWER="^";Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT="radice quadrata";Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE="assoluto";Blockly.Msg.LANG_MATH_SINGLE_OP_NEG="neg";Blockly.Msg.LANG_MATH_SINGLE_OP_LN="log";Blockly.Msg.LANG_MATH_SINGLE_OP_EXP=
"e^";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT="Riporta la radice quadrata di un numero.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS="Riporta il valore assoluto di un numero.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#abs";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG="Riporta il valore negativo di un numero.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#neg";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN="Riporta il logaritmo naturale di un numero.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#log";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP="Riporta e alla potenza di un numero.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP="http://appinventor.mit.edu/explore/ai2/support/blocks/math#e";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND="Arrotonda un numero per eccesso o difetto.";
Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND="http://appinventor.mit.edu/explore/ai2/support/blocks/math#round";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING="Arrotonda il numero inserito\nper eccesso";Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING="http://appinventor.mit.edu/explore/ai2/support/blocks/math#ceiling";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR="Arrotonda il numero inserito \nper difetto";Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR="http://appinventor.mit.edu/explore/ai2/support/blocks/math#floor";
Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND="arrotonda";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING="ceiling";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR="floor";Blockly.Msg.LANG_MATH_TRIG_SIN="sin";Blockly.Msg.LANG_MATH_TRIG_COS="cos";Blockly.Msg.LANG_MATH_TRIG_TAN="tan";Blockly.Msg.LANG_MATH_TRIG_ASIN="asin";Blockly.Msg.LANG_MATH_TRIG_ACOS="acos";Blockly.Msg.LANG_MATH_TRIG_ATAN="atan";Blockly.Msg.LANG_MATH_TRIG_ATAN2="atan2";Blockly.Msg.LANG_MATH_TRIG_ATAN2_X="x";Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y=
"y";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN="Riporta il seno dell'angolo inserito in gradi.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS="Riporta il coseno dell'angolo inserito in gradi.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#cos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN="Riporta la tangente dell'angolo inserito in gradi.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#tan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN="Riporta l'angolo tra un intervallo di (-90,+90]\ngradi col valore del seno ottenuto.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#asin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS="Riporta l'angolo tra un intervallo di [0, 180)\ngradi col valore del coseno ottenuto.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#acos";
Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN="Riporta l'angolo tra un intervallo di (-90, +90)\ngradi col valore della tangente ottenuta.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2="Riporta l'angolo tra un intervallo di (-180, +180]\ngradi col valore delle coordinate rettangolari ottenute.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan2";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN=
"min";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX="max";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN="Riporta il più piccolo fra loro..";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX="Riporta il più grande fra loro..";Blockly.Msg.LANG_MATH_DIVIDE="÷";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO="modulo di";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER="rimanenza di";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT="quoziente di";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO="Riporta il modulo.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#modulo";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER="Riporta il resto.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#remainder";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT="Riporta il quoziente.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#quotient";Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomint";
Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM="intero casuale";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM="da";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO="a";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT="intero casuale tra %1 e %2";Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP="Riporta un numero intero casuale compreso tra il limite massimo\ned il limite minimo. I limiti saranno tagliati per risultare minori\ndi 2**30.";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomfrac";
Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM="frazione casuale";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP="Riporta un numero casuale tra 0 and 1.";Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomseed";Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM="genera set di numeri casuali ripetibili";Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO="valore";Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP="specifica il valore di riferimento\nper il generatore di numeri casuali ripetibili";
Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT="converti";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG="da radianti a gradi";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD="da gradi a radianti";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG="Restituisce il valore in gradi compreso tra\n[0, 360) corrispondente al suo valore in radianti.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertrad";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD=
"Restituisce il valore in radianti compreso tra\n[-π, +π) corrispondente al suo valore in gradi.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertdeg";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#format";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE="converti in decimale";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM="numero";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES=
"decimali";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT="converti in numero decimale %1 decimali %2";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP="Converte il numero con tanti decimali\nquanto specificato.";Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM="è un numero?";Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP="Controlla se il blocco collegato è numerico.";Blockly.Msg.LANG_CATEGORY_TEXT=
"Testo";Blockly.Msg.LANG_TEXT_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#string";Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP="riga di testo.";Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE="“";Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE="”";Blockly.Msg.LANG_TEXT_JOIN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#join";Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH="crea testo con";Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP="Unisce i blocchi in una singola riga di testo.\nse nulla è connesso, crea una riga vuota.";
Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN="unire";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM="testo";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP="";Blockly.Msg.LANG_TEXT_APPEND_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.Msg.LANG_TEXT_APPEND_TO="a";Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT="aggancia testo";Blockly.Msg.LANG_TEXT_APPEND_VARIABLE="elemento";Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP='Aggancia i testi alla variabile "%1".';Blockly.Msg.LANG_TEXT_LENGTH_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#length";Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH="lunghezza";Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP="Riporta il numero di caratteri (spazi inclusi)\nnel testo allegato.";Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#isempty";Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY="è vuoto";Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP="Restituisce vero se la lunghezza del\ntesto è 0, altrimenti restitusce falso.";
Blockly.Msg.LANG_TEXT_COMPARE_LT=" <";Blockly.Msg.LANG_TEXT_COMPARE_EQUAL=" =";Blockly.Msg.LANG_TEXT_COMPARE_GT=" >";Blockly.Msg.LANG_TEXT_COMPARE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#compare";Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE="confronta testi";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT="Verifica se il testo1 è lessicograficamente precedente al testo 2.\nse un testo è il prefisso dell'altro, il testo più breve è\nconsiderato più piccolo. I caratteri maiuscoli precedono i caratteri minuscoli.";
Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL="Verifica se le righe di testo sono identiche, cioè., se hanno gli stessi\ncaratteri nello stesso ordine. Questo non è molto comune =\nqualora le righe di testo siano numeri: 123 e 0123 sono =\nma non testo =.";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT="Verifica se il testo1 è lessicograficamente successivo al al testo 2.\nse un testo è il prefisso dell'altro, il testo più breve è considerato più piccolo.\nI caratteri maiuscoli precedono i caratteri minuscoli.";
Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE="maiuscolo";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE="minuscolo";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE="Trasforma in maiuscolo.";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#upcase";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE="Trasforma in minuscolo.";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#downcase";
Blockly.Msg.LANG_TEXT_TRIM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#trim";Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM="taglia";Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP="Restituisce una copia del testo con tutti\ngli spazi iniziali e finali rimossi.";Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#startsat";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT="inizia da";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT="testo";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE=
"segmento";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT="inizia dal testo %1 segmento %2";Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP="Riporta da che carattere inizia il testo specificato.\n1 denota che il segmento viene rilevato all'inizio. 0 se il\nsegmento non viene rilevato nel testo.";Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS="contiene";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT="testo";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE=
"segmento";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT="contiene il testo %1 segmento %2";Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP="Controlla se il segmento è contenuto nel testo.";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL="";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT="testo";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT="a";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST="a (lista)";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST="dividi all'inizio";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY="dividi all'inizio di ogni";
Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT="dividi";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY="dividi ogni";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST='Divide il testo in due pezzi in base alla prima corrispondenza rilevata \ndel testo \'a\' come punto di divisione, e crea una lista contenente i due tronconi di testo \nprima e dopo il punto di divisione. \nDividere "mela,banana,ciliegia,cibo per gatti" con una virgola come punto di divisione \ncrea una lista di due elementi: il primo testo sarà "mela" ed il secondo testo sarà \n"banana,ciliegia,cibo per gatti". \nda notare che la virgola dopo "mela" non apparirà nel risultato, \nperchè rappresenta il punto di divisione.';
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitat";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY='Divide il testo in due elementi di una lista, usando la prima ricorrenza di ogni elemento \nnella lista \'lista\' come punto di divisione. \n\nDividendo "Io amo le mele banane angurie arance." con la lista “(ba,me)” risulterà \nuna lista di due elementi, come primo "Io amo le" e come secondo \n"nane angurie arance."';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatfirstofany";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT='Divide il testo un più pezzi usando il testo \'ogni\' come punto di divisione e produce una lista con i risultati. \nDividendo "uno,due,tre,quattro" ogni "," (virgola) risulterà una lista “(uno due tre quattro)”. \nDividendo "una-patata,due-patate,tre-patate,quattro" ogni "-patata", verrà prodotta la lista “(uno due tre quattro)”.';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT="http://appinventor.mit.edu/explore/ai2/support/blocks/text#split";
Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY='Divide il testo in una lista, usando ogni elemento della lista \'lista\' come \npunto di divisione, e riporta una lista con i risultati. \nDividendo "appleberry,banana,cherry,dogfood" con \'lista\' con due elemnti \nvirgola e "rry" restituisce una lista di quattro elementi: \n"(applebe banana che dogfood)".';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatany";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE="dividi in spazi";Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP="Divide il testo in pezzi separati da spazi.";Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#segment";Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT="segmento";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START="inizio";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH="lunghezza";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT=
"testo";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT="segmento  testo %1 inizio %2 lunghezza %3";Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP="Estrae il segmento in base ai parametri inseriti\npartendo dal testo specificato dalla posizione specificata. La posizione\n1 indica l'inizio del testo.";Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT="segmento";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT=
"testo";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL="sostituisci tutto";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT="rimpiazzo";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT="sostituisce tutto il testo %1 segmento %2 rimpiazzo %3";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP="Riporta un nuovo testo ottenuto dalla sostituzione\ndel segmento con il rimpiazzo.";Blockly.Msg.LANG_CATEGORY_LISTS="Liste";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE="crea una lista vuota";Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist";Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST="crea lista";Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP="Crea una lista con ogni quantità di elementi.";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD="lista";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP="Aggiungere, rimuovere, o riordinare gli elementi di questo blocco.";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE="elemento";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP=
"Aggiungi un elemento alla lista.";Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE="elemento";Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP="Aggiungi un elemento alla lista.";Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT="seleziona un elemento dalla lista";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST=
"lista";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX="indice";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT="seleziona un elemento della lista  lista %1 indice %2";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP="Riporta l'elemento della lista nella posizione dell'indice.";Blockly.Msg.LANG_LISTS_IS_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist";Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN="è nella lista?";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING="contenuto";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST=
"lista";Blockly.Msg.LANG_LISTS_IS_IN_INPUT="è nella lista? contenuto %1 lista %2";Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP="Riporta vero se il contenuto è un elemento della lista, e falso se non lo è.";Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist";Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION="indice nella lista";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING="contenuto";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT=
"indice nella lista  contenuto %1 lista %2";Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP="Trova la posizione del contenuto nella lista. se non presente nella lista, riporta 0.";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM="scegli un elemento casuale";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP="Scegli un elemento casuale dalla lista.";
Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE="rimpiazza un elemento nella lista";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX="indice";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT="rimpiazzo";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT="rimpiazza un elemento nella lista  lista %1 indice %2 rimpiazzo %3";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP=
"Rimpiazza un elemento nella lista alla posizione specificata.";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE="rimuovi un elemento dalla lista";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX="indice";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT="rimuovi un elemento dalla lista  lista %1 indice %2";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP=
"Rimuove l'elemento nella lista alla posizione specificata.";Blockly.Msg.LANG_LISTS_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH="lunghezza della lista";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_LENGTH_INPUT="lunghezza della lista lista %1";Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP="Conta il numero di elementi presenti nella lista.";Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#append";
Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND="attacca alla lista";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1="lista1";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2="lista2";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT="attacca alla lista  lista1 %1 lista2 %2";Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP="Aggiunge tutti gli elementi della lista2 alla lista1. Dopo la lista1 includerà tutti gli elementi aggiunti della lista2, ma la lista2 rimarrà invariata.";Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD="aggiungi elementi alla lista";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST=" lista";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM="elementi";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT="aggiungi elementi alla lista lista %1 elementi %2";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP="Aggiunge elementi in coda alla lista.";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD="lista";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP=
"Add, remove, or reorder sections to reconfigure this list block.";Blockly.Msg.LANG_LISTS_COPY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy";Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY="copia lista";Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_COPY_TOOLTIP="Crea la copia di una lista, comprese eventuali sotto-liste";Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist";Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST=
"è una lista?";Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING="contenuto";Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP="Controlla se un elemento è una lista.";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV="da lista a riga csv";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP="Interpreta la lista come la riga di una tabella e restituisce un testo(comma-separated value) CSV. Ogni elemento della lista riga è considerato un campo,ed è messo tra virgolette nel testo CSV risultante. Gli elementi sono separati da virgole. Il testo risultante non dispone di un separatore di riga alla fine.";
Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV="lista da riga csv";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT="testo";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP="Analizza il testo come fosse una riga CSV (comma-separated value) per produrre una lista di campi. Esiste un errore per le righe di testo contenenti ritorni a capo (linee multiple). Ok per le righe di testo che terminano in un singolo carattere or CRLF.";
Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV="lista a tabella csv";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP="Interpreta la lista come una tabella e  converte in CSV (comma-separated value) il testo. Ogni elemento nalla lista dovrebbe essere di per sé un elenco che rappresenta una riga della tabella CSV. Ogni elemento nella riga lista è considerato come campo, e sarà racchiuso tra doppi apici nel CSV risultanteNel testo risultante, gli elementi saranno separati da una virgola e le righe saranno separate dal CRLF (\\r\\n).";
Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV="lista da una tabella csv";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT="testo";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP="Analizza il testo come una tabella CSV (comma-separated value) per produrre una lista di righe. Le righe possono essere separate da nuove linee (\\n) o CRLF (\\r\\n).";Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert";Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST="inserisci elemento nella lista";Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX="indirizzo";Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM="elemento";Blockly.Msg.LANG_LISTS_INSERT_INPUT="inserisce un elemento  lista %1 indice %2 elemento %3";Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP="Inserisce un elemento nella lista alla posizione specificata.";Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty";Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY="la lista è vuota?";Blockly.Msg.LANG_LISTS_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP="Riporta vero se la lista è vuota.";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS="cerca coppie";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY="chiave";
Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS="coppie";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND="nonTrovate";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT="cerca coppie  chiave %1 coppie %2 nonTrovate %3";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP="Riporta il valore associato alla chiave nella lista di coppie";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT=
"inizializza variabile globale";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME="nome";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO="valore";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT="globale";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP="Crea una variabile e gli assegna il valore contenuto nei blocchi collegati.";Blockly.Msg.LANG_VARIABLES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#get";Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET=
"richiama";Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT="richiama";Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP="Riporta il valore di questa variabile.";Blockly.Msg.LANG_VARIABLES_SET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#set";Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET="imposta";Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO="valore";Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT="imposta";Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP="Imposta questa variabile in base a quanto inserito.";
Blockly.Msg.LANG_VARIABLES_VARIABLE=" variabile";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#do";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT="initialize variabile locale";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME="nome";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO="valore";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO="dentro";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT=
"locale";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP="Ti permette di creare variabili accessibili solamente all'interno di questi blocchi.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME="inizializza variabile locale dentro";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#return";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN="dentro";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT=
"locale";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP="Consente di creare variabili che sono accessibili solo nella parte di ritorno di questo blocco.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME="inizializza variabile locale in ritorno";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES="nomi locali";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP="";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME="nome";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE=
"x";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE="crea";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="procedura";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO="esegui";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX="crea ";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP="Procedura senza valore di ritorno.";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn";
Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN="risultato";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO="crea";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN="risultato";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP="Esegue i blocchi in 'esegui' e riporta il risultato. Utile se è necessario eseguire una procedura prima di applicare il valore ad una variabile.";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT="crea/risultato";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";
Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE="crea";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DO=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN="risultato";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX="crea ";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP="Procedura con risultato di ritorno.";Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING="Attenzione:\nQuesta procedura\nrisulta duplicata.";
Blockly.Msg.LANG_PROCEDURES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL="richiama ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE="procedura";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX="richiama ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="Richiama una procedura senza risultati di ritorno.";
Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME="richiama senza risultato di ritorno";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL=Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_PROCEDURE=Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX="richiama ";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP=
"Richiama una procedura con risultati di ritorno.";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME="richiama con risultato di ritorno";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE="immetti";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE="immetti:";Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF="Evidenzia Procedura";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP="";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP="";Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN=
"quando ";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO="esegui";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL="richiama ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL="richiama ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT="per il componente";Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL="";
Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT="del componente";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET="imposta ";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO=" a";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET="imposta ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO=" a";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT=
"del componente";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL="/reference/components/userinterface.html#Button";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL="/reference/components/userinterface.html#buttonproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL="/reference/components/userinterface.html#buttonevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL="/reference/components/userinterface.html#CheckBox";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL=
"/reference/components/userinterface.html#checkboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL="/reference/components/userinterface.html#checkboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL="/reference/components/userinterface.html#Clock";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL="/reference/components/userinterface.html#clockproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL="/reference/components/userinterface.html#clockevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL=
"/reference/components/userinterface.html#clockmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL="/reference/components/userinterface.html#Image";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL="/reference/components/userinterface.html#imageproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL="/reference/components/userinterface.html#imageevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL="/reference/components/userinterface.html#imagemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL=
"/reference/components/userinterface.html#Label";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL="/reference/components/userinterface.html#labelproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL="/reference/components/userinterface.html#labelevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL="/reference/components/userinterface.html#labelmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL="/reference/components/userinterface.html#ListPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL=
"/reference/components/userinterface.html#listpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL="/reference/components/userinterface.html#listpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL="/reference/components/userinterface.html#listpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL="/reference/components/userinterface.html#Notifier";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL="/reference/components/userinterface.html#notifierproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL="/reference/components/userinterface.html#notifierevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL="/reference/components/userinterface.html#notifiermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL="/reference/components/userinterface.html#PasswordTextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#pwdboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL=
"/reference/components/userinterface.html#pwdboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#pwdboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL="/reference/components/userinterface.html#Screen";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL="/reference/components/userinterface.html#screenproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL="/reference/components/userinterface.html#screenevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL="/reference/components/userinterface.html#screenmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL="/reference/components/userinterface.html#Slider";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL="/reference/components/userinterface.html#sliderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL="/reference/components/userinterface.html#sliderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL="/reference/components/userinterface.html#slidermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL="/reference/components/userinterface.html#TextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#textboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#textboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#textboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL="/reference/components/userinterface.html#WebViewer";
Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL="/reference/components/userinterface.html#webviewerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL="/reference/components/userinterface.html#webviewerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL="/reference/components/userinterface.html#webviewermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL="/reference/components/layout.html#HorizontalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL=
"/reference/components/layout.html#horizarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL="/reference/components/layout.html#VerticalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#vertarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL="/reference/components/layout.html#TableArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#tablearrangeproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL="/reference/components/media.html#Camcorder";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL="/reference/components/media.html#camcorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL="/reference/components/media.html#camcorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL="/reference/components/media.html#camcordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL="/reference/components/media.html#Camera";
Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL="/reference/components/media.html#cameraproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL="/reference/components/media.html#cameraevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL="/reference/components/media.html#cameramethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL="/reference/components/media.html#ImagePicker";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL="/reference/components/media.html#imagepickerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL="/reference/components/media.html#imagepickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL="/reference/components/media.html#imagepickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL="/reference/components/media.html#Player";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL="/reference/components/media.html#playerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL="/reference/components/media.html#playerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL="/reference/components/media.html#playermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL="/reference/components/media.html#Sound";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL="/reference/components/media.html#soundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL="/reference/components/media.html#soundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL="/reference/components/media.html#soundmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL="/reference/components/media.html#SoundRecorder";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL="/reference/components/media.html#soundrecorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL="/reference/components/media.html#soundrecorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL="/reference/components/media.html#soundrecordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL=
"/reference/components/media.html#SpeechRecognizer";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL="/reference/components/media.html#speechrecognizerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL="/reference/components/media.html#speechrecognizerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL="/reference/components/media.html#speechrecognizermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL="/reference/components/media.html#TextToSpeech";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL="/reference/components/media.html#texttospeechproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL="/reference/components/media.html#texttospeechevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL="/reference/components/media.html#texttospeechmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL="/reference/components/media.html#VideoPlayer";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL=
"/reference/components/media.html#videoplayerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL="/reference/components/media.html#videoplayerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL="/reference/components/media.html#videoplayermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL="/reference/components/animation.html#Ball";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL="/reference/components/animation.html#ballproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL=
"/reference/components/animation.html#ballevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL="/reference/components/animation.html#ballmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL="/reference/components/animation.html#Canvas";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL="/reference/components/animation.html#canvasproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL="/reference/components/animation.html#canvasevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL=
"/reference/components/animation.html#canvasmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL="/reference/components/animation.html#ImageSprite";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL="/reference/components/animation.html#imagespriteproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL="/reference/components/animation.html#imagespriteevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL="/reference/components/animation.html#imagespritemethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL="/reference/components/sensors.html#AccelerometerSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#accelerometersensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#accelerometersensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL="/reference/components/sensors.html#accelerometersensormethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL="/reference/components/sensors.html#BarcodeScanner";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL="/reference/components/sensors.html#barcodescannerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL="/reference/components/sensors.html#barcodescannerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL="/reference/components/sensors.html#barcodescannermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL=
"/reference/components/sensors.html#LocationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#locationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#locationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#locationsensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL="/reference/components/sensors.html#OrientationSensor";
Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#orientationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#orientationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#orientationsensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL="/reference/components/social.html#ContactPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL=
"/reference/components/social.html#contactpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL="/reference/components/social.html#contactpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL="/reference/components/social.html#contactpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL="/reference/components/social.html#EmailPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL="/reference/components/social.html#emailpickerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL="/reference/components/social.html#emailpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL="/reference/components/social.html#emailpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL="/reference/components/social.html#PhoneCall";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL="/reference/components/social.html#phonecallproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL=
"/reference/components/social.html#phonecallevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL="/reference/components/social.html#phonecallmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL="/reference/components/social.html#PhoneNumberPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL="/reference/components/social.html#phonenumberpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL="/reference/components/social.html#phonenumberpickerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL="/reference/components/social.html#phonenumberpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL="/reference/components/social.html#Texting";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL="/reference/components/social.html#textingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL="/reference/components/social.html#textingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL="/reference/components/social.html#textingmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL="/reference/components/social.html#Twitter";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL="/reference/components/social.html#twitterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL="/reference/components/social.html#twitterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL="/reference/components/social.html#twittermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL="/reference/components/storage.html#FusiontablesControl";
Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL="/reference/components/storage.html#fusiontablescontrolproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL="/reference/components/storage.html#fusiontablescontrolevents";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL="/reference/components/storage.html#fusiontablescontrolmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL="/reference/components/storage.html#TinyDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL=
"/reference/components/storage.html#tinydbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL="/reference/components/storage.html#tinydbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL="/reference/components/storage.html#tinydbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL="/reference/components/storage.html#TinyWebDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinywebdbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL=
"/reference/components/storage.html#tinywebdbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL="/reference/components/storage.html#tinywebdbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL="/reference/components/connectivity.html#ActivityStarter";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL="/reference/components/connectivity.html#activitystarterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL="/reference/components/connectivity.html#activitystarterevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL="/reference/components/connectivity.html#activitystartermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL="/reference/components/connectivity.html#BluetoothClient";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothclientevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL="/reference/components/connectivity.html#BluetoothServer";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothserverproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothserverevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothservermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL="/reference/components/connectivity.html#Web";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL="/reference/components/connectivity.html#webproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL="/reference/components/connectivity.html#webevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL="/reference/components/connectivity.html#webmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL="/reference/components/legomindstorms.html#NxtDirectCommands";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdirectproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdirectmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL="/reference/components/legomindstorms.html#NxtColorSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL=
"/reference/components/legomindstorms.html#nxtcolorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtcolorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtcolormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL="/reference/components/legomindstorms.html#NxtLightSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtlightproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtlightevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtlightmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL="/reference/components/legomindstorms.html#NxtSoundSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtsoundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL=
"/reference/components/legomindstorms.html#nxtsoundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtsoundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL="/reference/components/legomindstorms.html#NxtTouchSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxttouchproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxttouchevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL="/reference/components/legomindstorms.html#nxttouchmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL="/reference/components/legomindstorms.html#NxtUltrasonicSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL=
"/reference/components/legomindstorms.html#nxtultrasonicmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL="/reference/components/legomindstorms.html#NxtDrive";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdriveproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdrivemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL="/reference/components/internal.html#GameClient";
Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL="/reference/components/internal.html#gameclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL="/reference/components/internal.html#gameclientevents";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL="/reference/components/internal.html#gameclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL="/reference/components/internal.html#Voting";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL=
"/reference/components/internal.html#votingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL="/reference/components/internal.html#votingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL="/reference/components/internal.html#votingmethods";Blockly.Msg.SHOW_WARNINGS="Mostra Avvertimenti";Blockly.Msg.HIDE_WARNINGS="Nascondi Avvertimenti";Blockly.Msg.MISSING_SOCKETS_WARNINGS="Devi inserire un blocco in ogni slot";Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS="Questo blocco può essere connesso solamente ad un blocco evento o ad una procedura definita";
Blockly.Msg.REPL_ERROR_FROM_COMPANION="Errore dall'app Companion";Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR="Errore di connessione rete";Blockly.Msg.REPL_NETWORK_ERROR="Errore di rete";Blockly.Msg.REPL_NETWORK_ERROR_RESTART="Errore di rete nel comunicare con l'app Companion.<br />Prova a riavviare l'app Companion e a riconnetterti";Blockly.Msg.REPL_OK="OK";Blockly.Msg.REPL_COMPANION_VERSION_CHECK="Controllo versione app Companion";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE="Stai usando una vecchia versione dell'app Companion. Clicca \"OK\" per avviare l'aggiornamento. Controlla il tuo ";
Blockly.Msg.REPL_EMULATORS="emulatore";Blockly.Msg.REPL_DEVICES="dispositivo";Blockly.Msg.REPL_APPROVE_UPDATE=" lo schermo perchè ti sarà chiesto di approvare l'aggiornamento.";Blockly.Msg.REPL_NOT_NOW="Non adesso";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1="Stai usando una vecchia versione dell'app Companion.<br/><br/>Questa versione di App Inventor deve essere usata con l'app Companion versione";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE="Stai usando una vecchia versione dell'app Companion. Non è necessario aggiornarla subito ma ricordati di farlo al più presto.";
Blockly.Msg.REPL_DISMISS="Respingi";Blockly.Msg.REPL_SOFTWARE_UPDATE="Aggiornamento Software";Blockly.Msg.REPL_OK_LOWER="Ok";Blockly.Msg.REPL_GOT_IT="Fatto";Blockly.Msg.REPL_UPDATE_INFO='L\'aggiornamento è ora installato sul tuo dispositivo. Controlla lo schermo del tuo dispositivo (o emulatore) e approva l\'installazione quando richiesto.<br /><br />IMPORTANTE: Ad aggiornamento completato, Scegli "DONE" (non cliccare su "apri"). Dopo apri App Inventor nel browser, clicca su "Connetti" e selezione "Reset Connessione".';
Blockly.Msg.REPL_UNABLE_TO_UPDATE="Impossibile inviare l'aggiornamento al tuo dispositivo/emulatore";Blockly.Msg.REPL_UNABLE_TO_LOAD="Impossibile caricare l'aggiornamento dal derver di App Inventor";Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND="Impossibile caricare l'aggiornamento dal derver di App Inventor (il server non risponde)";Blockly.Msg.REPL_NOW_DOWNLOADING="Stiamo scaricando l'aggiornamento dal server di App Inventor, si prega di attendere";Blockly.Msg.REPL_RUNTIME_ERROR="Runtime Error";Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS=
"<br/><i>Nota:</i>&nbsp;Non verrà riportato nessun errore per 5 secondi.";Blockly.Msg.REPL_CONNECTING_USB_CABLE="Connessione via cavo USB";Blockly.Msg.REPL_STARTING_EMULATOR="Avvio dell'emulatore<br/>Attendere: Potrebbero essere necessari uno o due minuti.";Blockly.Msg.REPL_CONNECTING="Connecting...";Blockly.Msg.REPL_CANCEL="Annulla";Blockly.Msg.REPL_GIVE_UP="Abbandona";Blockly.Msg.REPL_KEEP_TRYING="Continua a provare";Blockly.Msg.REPL_CONNECTION_FAILURE1="Connessione fallita";Blockly.Msg.REPL_NO_START_EMULATOR=
"Non è stato possibile avviare l'app Companion dall'emulatore";Blockly.Msg.REPL_PLUGGED_IN_Q="Siete collegati?";Blockly.Msg.REPL_AI_NO_SEE_DEVICE="AI2 non rileva il tuo dispositivo, controlla che il cavo sia collegato ed i driver siano quelli corretti.";Blockly.Msg.REPL_HELPER_Q="Aiuto?";Blockly.Msg.REPL_HELPER_NOT_RUNNING='L\'aiutante pare non essere in esecuzione<br /><a href="http://appinventor.mit.edu" target="_blank">Necessiti di aiuto?</a>';Blockly.Msg.REPL_USB_CONNECTED_WAIT="USB connesso, attendere ";
Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING=" qualche secondo affinchè sia tutto avviato.";Blockly.Msg.REPL_EMULATOR_STARTED="Emulatore avviato, attendere ";Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE="Avvio dell'app Companion sul telefono collegato.";Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR="Avvio dell'app Companion sull'emulatore.";Blockly.Msg.REPL_COMPANION_STARTED_WAITING="Avvio dell'app Companion, attendere ";Blockly.Msg.REPL_VERIFYING_COMPANION="verifica che l'app Companion sia avviata....";
Blockly.Msg.REPL_CONNECT_TO_COMPANION="Connessione all'app Companion";Blockly.Msg.REPL_TRY_AGAIN1="Tentativo fallito di connessione all'app Companion, riprovare.";Blockly.Msg.REPL_YOUR_CODE_IS="Il tuo codice è";Blockly.Msg.REPL_DO_YOU_REALLY_Q="Sei sicuro?";Blockly.Msg.REPL_FACTORY_RESET="Questo resetterà l'Emulatore riportandolo allo stato di \"fabbrica\". Sarà necessario installare nuovamente l'app Companion.";Blockly.Msg.WARNING_DELETE_X_BLOCKS="Sei sicuro di voler cancellare tutti i %1 blocchi?";
Blockly.Msg.GENERATE_YAIL="Generazione Yail";Blockly.Msg.DO_IT="Esegui";Blockly.Msg.CLEAR_DO_IT_ERROR="Rimuovi Errore";Blockly.Msg.CAN_NOT_DO_IT="Impossibile eseguire";Blockly.Msg.CONNECT_TO_DO_IT="Devi essere connesso all'app companion o all'emulatore per usare \"Esegui\""}};Blockly.Msg.it_it.switch_language_to_italian.init();Blockly.Msg.ru={};
Blockly.Msg.ru.switch_language_to_russian={category:"",helpUrl:"",init:function(){Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION="Этот блок не может использоваться в определении";Blockly.ERROR_DUPLICATE_EVENT_HANDLER="Это дубликат обработчика события для этого элемента.";Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN="Выберите подходящий пункт из выпадающего меню.";Blockly.MSG_CHANGE_VALUE_TITLE="Изменить значение:";Blockly.MSG_NEW_VARIABLE="Новая переменная...";Blockly.MSG_NEW_VARIABLE_TITLE="Новое имя переменной:";
Blockly.MSG_PROCEDURE_CATEGORY="Процедуры";Blockly.MSG_RENAME_VARIABLE="Переименовать переменную...";Blockly.MSG_RENAME_VARIABLE_TITLE='Переименовать все переменные "%1" в:';Blockly.MSG_VARIABLE_CATEGORY="Переменные";Blockly.Msg.ADD_COMMENT="Добавить комментарий";Blockly.Msg.ARRANGE_H="Упорядочить блоки по горизонтали";Blockly.Msg.ARRANGE_S="Упорядочить блоки по диагонали";Blockly.Msg.ARRANGE_V="Упорядочить блоки по вертикали";Blockly.Msg.CAN_NOT_DO_IT="Невозможно выполнить";Blockly.Msg.CLEAR_DO_IT_ERROR=
"Очистить ошибку";Blockly.Msg.COLLAPSE_ALL="Свернуть блоки";Blockly.Msg.COLLAPSE_BLOCK="Свернуть блок";Blockly.Msg.CONNECT_TO_DO_IT="Чтобы использовать команду Выполнить, вы должны быть подключены к Companion или к эмулятору.";Blockly.Msg.DELETE_BLOCK="Удалить блок";Blockly.Msg.DELETE_X_BLOCKS="Удалить %1 блоков";Blockly.Msg.DISABLE_BLOCK="Отключить блок";Blockly.Msg.DO_IT="Выполнить";Blockly.Msg.DUPLICATE_BLOCK="Создать копию";Blockly.Msg.ENABLE_BLOCK="Включить блок";Blockly.Msg.EXPAND_ALL="Развернуть блоки";
Blockly.Msg.EXPAND_BLOCK="Развернуть блок";Blockly.Msg.EXTERNAL_INPUTS="Дополнительные входы";Blockly.Msg.GENERATE_YAIL="Генерировать Yail";Blockly.Msg.HELP="Справка";Blockly.Msg.HIDE_WARNINGS="Скрыть Предупреждения";Blockly.Msg.HORIZONTAL_PARAMETERS="Расположить параметры горизонтально";Blockly.Msg.INLINE_INPUTS="Внутренний параметр";Blockly.Msg.LANG_CATEGORY_CONTROLS="Управление";Blockly.Msg.LANG_CATEGORY_LISTS="Списки";Blockly.Msg.LANG_CATEGORY_LOGIC="Логика";Blockly.Msg.LANG_CATEGORY_MATH="Математика";
Blockly.Msg.LANG_CATEGORY_TEXT="Текст";Blockly.Msg.LANG_COLOUR_BLACK="чёрный";Blockly.Msg.LANG_COLOUR_BLUE="синий";Blockly.Msg.LANG_COLOUR_CYAN="голубой";Blockly.Msg.LANG_COLOUR_DARK_GRAY="тёмно-серый";Blockly.Msg.LANG_COLOUR_GRAY="серый";Blockly.Msg.LANG_COLOUR_GREEN="зеленый";Blockly.Msg.LANG_COLOUR_LIGHT_GRAY="светло-серый";Blockly.Msg.LANG_COLOUR_MAGENTA="пурпурный";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR="создать цвет";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make";
Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP='"Цвет с заданными красной, зелёной, голубой и (необязательной) альфа составляющими"';Blockly.Msg.LANG_COLOUR_ORANGE="оранжевый";Blockly.Msg.LANG_COLOUR_PICKER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic";Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP="чёрный";Blockly.Msg.LANG_COLOUR_PINK="розовый";Blockly.Msg.LANG_COLOUR_RED="красный";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR="расщепить цвет";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP='"Список четырёх элементов, каждый в интервале от 0 до 255, представляющих красную, зелёную, синюю и альфа составляющие."';Blockly.Msg.LANG_COLOUR_WHITE="белый";Blockly.Msg.LANG_COLOUR_YELLOW="жёлтый";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#accelerometersensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL=
"/reference/components/sensors.html#AccelerometerSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL="/reference/components/sensors.html#accelerometersensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#accelerometersensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL="/reference/components/connectivity.html#activitystarterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL=
"/reference/components/connectivity.html#ActivityStarter";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL="/reference/components/connectivity.html#activitystartermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL="/reference/components/connectivity.html#activitystarterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL="/reference/components/animation.html#ballevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL="/reference/components/animation.html#Ball";
Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL="/reference/components/animation.html#ballmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL="/reference/components/animation.html#ballproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL="/reference/components/sensors.html#barcodescannerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL="/reference/components/sensors.html#BarcodeScanner";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL=
"/reference/components/sensors.html#barcodescannermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL="/reference/components/sensors.html#barcodescannerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothclientevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL="/reference/components/connectivity.html#BluetoothClient";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothclientmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothserverevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL="/reference/components/connectivity.html#BluetoothServer";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothservermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothserverproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL="/reference/components/userinterface.html#buttonevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL="/reference/components/userinterface.html#Button";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL="/reference/components/userinterface.html#buttonproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL=
"/reference/components/media.html#camcorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL="/reference/components/media.html#Camcorder";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL="/reference/components/media.html#camcordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL="/reference/components/media.html#camcorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL="/reference/components/media.html#cameraevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL=
"/reference/components/media.html#Camera";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL="/reference/components/media.html#cameramethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL="/reference/components/media.html#cameraproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL="/reference/components/animation.html#canvasevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL="/reference/components/animation.html#Canvas";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL=
"/reference/components/animation.html#canvasmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL="/reference/components/animation.html#canvasproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL="/reference/components/userinterface.html#checkboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL="/reference/components/userinterface.html#CheckBox";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#checkboxproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL="/reference/components/userinterface.html#clockevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL="/reference/components/userinterface.html#Clock";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL="/reference/components/userinterface.html#clockmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL="/reference/components/userinterface.html#clockproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL="/reference/components/social.html#contactpickerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL="/reference/components/social.html#ContactPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL="/reference/components/social.html#contactpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL="/reference/components/social.html#contactpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL="/reference/components/social.html#emailpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL=
"/reference/components/social.html#EmailPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL="/reference/components/social.html#emailpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL="/reference/components/social.html#emailpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL="/reference/components/storage.html#fusiontablescontrolevents";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL="/reference/components/storage.html#FusiontablesControl";
Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL="/reference/components/storage.html#fusiontablescontrolmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL="/reference/components/storage.html#fusiontablescontrolproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL="/reference/components/internal.html#gameclientevents";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL="/reference/components/internal.html#GameClient";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL=
"/reference/components/internal.html#gameclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL="/reference/components/internal.html#gameclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL=" ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT="компонента";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL=" ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL="вызвать ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT=
"для компонента";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL=" ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT="компонента";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET="присвоить ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO="в";Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL=" ";Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL=" ";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL="/reference/components/layout.html#HorizontalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL=
"/reference/components/layout.html#horizarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL="/reference/components/media.html#imagepickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL="/reference/components/media.html#ImagePicker";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL="/reference/components/media.html#imagepickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL="/reference/components/media.html#imagepickerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL="/reference/components/animation.html#imagespriteevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL="/reference/components/animation.html#ImageSprite";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL="/reference/components/animation.html#imagespritemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL="/reference/components/animation.html#imagespriteproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL=
"/reference/components/userinterface.html#imageevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL="/reference/components/userinterface.html#Image";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL="/reference/components/userinterface.html#imagemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL="/reference/components/userinterface.html#imageproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL="/reference/components/userinterface.html#labelevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL=
"/reference/components/userinterface.html#Label";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL="/reference/components/userinterface.html#labelmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL="/reference/components/userinterface.html#labelproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL="/reference/components/userinterface.html#listpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL="/reference/components/userinterface.html#ListPicker";
Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL="/reference/components/userinterface.html#listpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL="/reference/components/userinterface.html#listpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#locationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL="/reference/components/sensors.html#LocationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL=
"/reference/components/sensors.html#locationsensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#locationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL=" ";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL="вызов";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL="/reference/components/userinterface.html#notifierevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL="/reference/components/userinterface.html#Notifier";
Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL="/reference/components/userinterface.html#notifiermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL="/reference/components/userinterface.html#notifierproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtcolorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL="/reference/components/legomindstorms.html#NxtColorSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL=
"/reference/components/legomindstorms.html#nxtcolormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtcolorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL="/reference/components/legomindstorms.html#NxtDirectCommands";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdirectmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdirectproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL="/reference/components/legomindstorms.html#NxtDrive";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdrivemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdriveproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtlightevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL=
"/reference/components/legomindstorms.html#NxtLightSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtlightmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtlightproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtsoundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL="/reference/components/legomindstorms.html#NxtSoundSensor";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtsoundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtsoundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxttouchevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL="/reference/components/legomindstorms.html#NxtTouchSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL=
"/reference/components/legomindstorms.html#nxttouchmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxttouchproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL="/reference/components/legomindstorms.html#NxtUltrasonicSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#orientationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL="/reference/components/sensors.html#OrientationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#orientationsensormethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#orientationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#pwdboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL="/reference/components/userinterface.html#PasswordTextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#pwdboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL=
"/reference/components/userinterface.html#pwdboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL="/reference/components/social.html#phonecallevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL="/reference/components/social.html#PhoneCall";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL="/reference/components/social.html#phonecallmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL="/reference/components/social.html#phonecallproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL=
"/reference/components/social.html#phonenumberpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL="/reference/components/social.html#PhoneNumberPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL="/reference/components/social.html#phonenumberpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL="/reference/components/social.html#phonenumberpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL="/reference/components/media.html#playerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL="/reference/components/media.html#Player";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL="/reference/components/media.html#playermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL="/reference/components/media.html#playerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL="/reference/components/userinterface.html#screenevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL="/reference/components/userinterface.html#Screen";
Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL="/reference/components/userinterface.html#screenmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL="/reference/components/userinterface.html#screenproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL=" ";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET="присвоить ";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO="в";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL="/reference/components/userinterface.html#sliderevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL="/reference/components/userinterface.html#Slider";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL="/reference/components/userinterface.html#slidermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL="/reference/components/userinterface.html#sliderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL="/reference/components/media.html#soundrecorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL=
"/reference/components/media.html#SoundRecorder";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL="/reference/components/media.html#soundrecordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL="/reference/components/media.html#soundrecorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL="/reference/components/media.html#soundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL="/reference/components/media.html#Sound";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL=
"/reference/components/media.html#soundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL="/reference/components/media.html#soundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL="/reference/components/media.html#speechrecognizerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL="/reference/components/media.html#SpeechRecognizer";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL="/reference/components/media.html#speechrecognizermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL="/reference/components/media.html#speechrecognizerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL="/reference/components/layout.html#TableArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#tablearrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#textboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL=
"/reference/components/userinterface.html#TextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#textboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#textboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL="/reference/components/social.html#textingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL="/reference/components/social.html#Texting";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL=
"/reference/components/social.html#textingmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL="/reference/components/social.html#textingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL="/reference/components/media.html#texttospeechevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL="/reference/components/media.html#TextToSpeech";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL="/reference/components/media.html#texttospeechmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL=
"/reference/components/media.html#texttospeechproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL="/reference/components/storage.html#tinydbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL="/reference/components/storage.html#TinyDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL="/reference/components/storage.html#tinydbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinydbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL=
"/reference/components/storage.html#tinywebdbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL="/reference/components/storage.html#TinyWebDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL="/reference/components/storage.html#tinywebdbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinywebdbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO="делать";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN="когда";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL=
"/reference/components/social.html#twitterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL="/reference/components/social.html#Twitter";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL="/reference/components/social.html#twittermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL="/reference/components/social.html#twitterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL="/reference/components/layout.html#VerticalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL=
"/reference/components/layout.html#vertarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL="/reference/components/media.html#videoplayerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL="/reference/components/media.html#VideoPlayer";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL="/reference/components/media.html#videoplayermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL="/reference/components/media.html#videoplayerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL="/reference/components/internal.html#votingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL="/reference/components/internal.html#Voting";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL="/reference/components/internal.html#votingmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL="/reference/components/internal.html#votingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL="/reference/components/userinterface.html#webviewerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL="/reference/components/userinterface.html#WebViewer";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL="/reference/components/userinterface.html#webviewermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL="/reference/components/userinterface.html#webviewerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL="/reference/components/connectivity.html#webevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL="/reference/components/connectivity.html#Web";
Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL="/reference/components/connectivity.html#webmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL="/reference/components/connectivity.html#webproperties";Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT="если";Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN="иначе";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST="";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN=
"то";Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE="если";Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP="Если проверяемое условие истинно";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT="закрыть приложение";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE="закрыть приложение";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP="Закрывает все экраны в приложение и завершает приложение.";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT="закрыть экран";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE="закрыть экран";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP="Закрывает текущий экран";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT="закрыть текстовый экран";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT="текст";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE="закрыть текстовый экран";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP="Закрывает текущий экран и возвращает текст приложению, которое";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT="закрыть окно и возвратить значение";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT="результат";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE="закрыть экран и возвратить значение";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP="Закрывает текущий экран и возвращает результат";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT="выполнить/результат";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO=
"выполнить";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN="результат";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE="выполнить результат";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP="Выполняет блоки в 'выполнить' и возвращает значение. Полезно, если нужно выполнить процедуру до присваивания значения переменной.";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT="выполнить, но проигнорировать";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate";
Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE="выполнить, но игнорировать результат";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP="Выполняет включённый блок кода и игнорирует возвращаемое значение (если оно есть). Полезно, если нужно вызвать процедуру, возвращающую значение, когда значение не нужно.";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL="http://en.wikipedia.org/wiki/Control_flow";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP="из цикла";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK=
"выйти из цикла";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE="перейти к следующему шагу цикла";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="Выходит из текущего цикла.";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="Пропускает остаток текущего шага цикла и";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="Предупреждение:";Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX=
"для";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX=" в списке";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT="для элемента в списке";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO="выполнить";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST="в списке";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM="для каждого";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR="элемент";Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP="Выполняет блоки в секции 'выполнить'  для каждого элемента в";Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX="для";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX=" в интервале";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT="для числа в интервале";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO="выполнить";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END="до";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM="для каждого";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START=
"с";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP="с шагом";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR="число";Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP="Выполняет блоки в секции 'выполнить' для каждого численного";Blockly.Msg.LANG_CONTROLS_FOR_HELPURL="";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO="выполнить";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM="с";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO="до";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR="x";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH="с шагом";Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP=
"Присваивает значения от стартового числа до конечного числа.";Blockly.Msg.LANG_CONTROLS_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#get";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT="получить начальный текст";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE="получить начальный текст";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP=
"Возвращает текст, который был передан экрану при";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT="получить начальное значение";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME="названиеЭкрана";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE="начальноеЗначение";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE="получить начальное значение";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP=
"Возвращает значение, которое было передано экрану при его";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF="иначе если";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="Добавьте условие к блоку если";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE="иначе";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP="Добавляет заключительную секцию к блоку если, когда все условия ложны";Blockly.Msg.LANG_CONTROLS_IF_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#if";Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF=
"если";Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP="Добавляет, удаляет, меняет порядок секций";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE="иначе";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF="иначе если";Blockly.Msg.LANG_CONTROLS_IF_MSG_IF="если";Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN="то";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1="Если условие истинно, то выполняет набор команд.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2="Если условие истинно, то выполняет первую группу команд.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3=
"Если первое условие истинно, то выполняет первую группу команд.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4="Если первое условие истинно, то выполняет первую группу  команд.";Blockly.Msg.LANG_CONTROLS_NOTHING_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#nothing";Blockly.Msg.LANG_CONTROLS_NOTHING_TITLE="ничего";Blockly.Msg.LANG_CONTROLS_NOTHING_TOOLTIP='"Ничего не возвращает. Используется для инициализации переменных или может быть включено в ячейку возвращенного значения. Это является эквивалентом null или Ничего."';
Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT="открыть экран";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME="названиеЭкрана";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE="открыть другой экран";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP="Открывает экран в многоэкранном. приложении";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT=
"открывает экран с начальным значением";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME="названиеЭкрана";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE="начальноеЗначение";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE="открыть ещё один экран с начальным значением";
Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP="Открывает новый экран в многоэкранном приложении и передаёт";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO="выполнить";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="до тех пор, пока";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="пока";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT="повторять";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1=
'Запускает блок в секции "делать", пока тест ...';Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="Пока значение ложно, выполнять набор команд.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="Пока значение истинно, выполнять набор команд.";Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT="пока";Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO="выполнить";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST=
"проверить";Blockly.Msg.LANG_CONTROLS_WHILE_TITLE="пока";Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP="Выполняет блоки в секции 'выполнить', пока условие ";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD="список";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP="Добавить, удалить или изменить порядок секций для изменения конфигурации этого блока списка.";Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT=
"добавить элементы к списку список %1 список %2";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM="элемент";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST=" список";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD="добавить элементы в список";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP="Добавляет элементы в конец списка.";Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE="элемент";Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP=
"Добавляет элемент в список.";Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#append";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT="добавить к списку  список1 %1 список2 %2";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1="список1";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2="список2";Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND="добавить в список";Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP="Добавляет все элементы в список2 в конец список1. После добавления список1 будет включать эти дополнительные элементы, тогда как список2 не изменится.";
Blockly.Msg.LANG_LISTS_COPY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy";Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY="скопировать список";Blockly.Msg.LANG_LISTS_COPY_TOOLTIP="Создаёт копию списка, включая все подсписки";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE="создать пустой лист";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD="список";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP="Добавить, удалить или изменить порядок фрагментов для реконфигурации этого блока списка.";
Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE="элемент";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP="Добавляет элемент в список.";Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST="создать список";Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP="Создаёт список с произвольным числом элементов.";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow";
Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT="текст";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV="лист из строки csv";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP="Интерпретирует текст как CSV, чтобы произвести список полей. Наличие пустых строк в тексте ведет к ошибке. Текст может заканчиваться пустой строкой или CRLF.";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT=
"текст";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV="список из таблицы csv";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP="Интерпретирует текст как таблицу, форматированную в CSV , чтобы произвести список строк, каждая из которых является списком полей. Строки могут быть разделены новыми строками (\n)  или CRLF (\r\n).";Blockly.Msg.LANG_LISTS_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_INSERT_INPUT="вставляет элемент списка список %1 номер %2 номер %3";Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX=
"указатель";Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM="элемент";Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert";Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST="вставить элемент списка";Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP="Вставляет элемент в указанную позицию в списке.";Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty";
Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP="Возвращает значение истина, если список пуст.";Blockly.Msg.LANG_LISTS_IS_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist";Blockly.Msg.LANG_LISTS_IS_IN_INPUT="в списке? элемент %1 список %2";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING="элемент";Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN="есть в списке?";Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP="Возвращает верно, если элемент есть в списке и неверно - если нет.";
Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist";Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING="список";Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST="список?";Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP="Проверяет, является ли аргумент списком.";Blockly.Msg.LANG_LISTS_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist";Blockly.Msg.LANG_LISTS_LENGTH_INPUT="длина списка список %1";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH=
"длина списка";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP="Возвращает число элементов в списке.";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT="проверить в парах   ключ %1 пара %2 неНайден %3";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY="ключ";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND="неНайден";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS=
"пары";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS="искать в парах";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP="Возвращает значение, связанное с ключом в заданном списке пар.";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM="выбрать случайный элемент";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP=
"Выбирает случайный элемент из списка.";Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT="номер в списке   элемент %1 список %2";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING="элемент";Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION="номер в списке";Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP="Найти позицию элемента в списке. Если элемент не в списке, вернуть 0.";
Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT="заменить элемент списка список %1 индекс %2";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX="указатель";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE="удалить элемент списка";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP="Удаляет элемент в указанной позиции из списка.";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT="заменить элемент списка %1 индекс %2 замена %3";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX="индекс";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT="замена";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE="заменить элемент в списке";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP="Заменяет n-ый элемент в списке.";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT=
"выбрать это элемент списка %1 индекса %2";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX="указатель";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT="выбрать элемент списка";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP="Возвращает элемент списка по его номеру.";Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY="список пуст?";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV="список - в строку csv";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP="Интерпретирует список как строку таблицы и возвращает текст в CSV. Каждый элемент строки интерпретируется как поле, и заключается в кавычки. Элементы разделяются запятыми. Итоговый текст не разделяется строками.";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable";
Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST="список";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV="список - в таблицу csv";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP="Интерпретирует список в качестве таблицы и возвращает текст в CSV. Каждый элемент представляется строкой CSV таблицы. Каждый элемент таблицы считается полем, заключенным в двойные кавычки. В итоговом тексте элементы разделяются запятыми, а ряды - CRLF (\r\n).";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE="ложь";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE="Возвращает логическое значение ложь";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE="Возвращает логическое значение истина";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE="истина";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true";Blockly.Msg.LANG_LOGIC_COMPARE_EQ="=";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL="https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE";
Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=";Blockly.Msg.LANG_LOGIC_COMPARE_NEQ="≠";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ="Проверяет равенство двух объектов.";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ="Возвращает значение истина, если аргументы не равны";Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME="логическое равенство";
Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not";Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT="не";Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP="Возвращает значение истина, если аргумент ложен.";Blockly.Msg.LANG_LOGIC_OPERATION_AND="и";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or";Blockly.Msg.LANG_LOGIC_OPERATION_OR=
"или";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND="Возвращает значение истина, если все аргументы истинны";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR="Возвращает значение истина, если среди аргументов есть истинный";Blockly.Msg.LANG_MATH_ARITHMETIC_ADD="+";Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE="/";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#add";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide";
Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY="http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent";Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS="-";Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY="*";Blockly.Msg.LANG_MATH_ARITHMETIC_POWER="^";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD=
"Возвращает сумму двух чисел.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE="возвращает частное от деления.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS="Возвращает разность двух чисел.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY="Возвращает произведение двух чисел.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER="Возвращает первое число возведённое в";Blockly.Msg.LANG_MATH_COMPARE_EQ="=";Blockly.Msg.LANG_MATH_COMPARE_GT=">";Blockly.Msg.LANG_MATH_COMPARE_GTE="≥";Blockly.Msg.LANG_MATH_COMPARE_HELPURL=
"";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte";
Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=";Blockly.Msg.LANG_MATH_COMPARE_LT="<";Blockly.Msg.LANG_MATH_COMPARE_LTE="≤";Blockly.Msg.LANG_MATH_COMPARE_NEQ="≠";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ="Возвращает значение истина, если числа равны";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT="Возвращает значение истина, если первое число больше";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE="Возвращает значение истина, если первое число больше";
Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT="Возвращает значение истина, если первое число меньше";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE="Возвращает значение истина, если первое число меньше";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ="Возвращает значение истина, если числа не равны";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertdeg";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertrad";
Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD="углы в радианы";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG="радианы в углы";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT="преобразовать";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD="Возвращает величину угла в радианах в диапазоне [-u03C0, +u03C0) по заданному углу в градусах.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG="Возвращает величину угла в градусах [0, 360) по заданному углу в радианах.";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_BIN_TO_DEC=
" ";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_BIN=" ";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_HEX=" ";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_HEX_TO_DEC=" ";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_BIN_TO_DEC="двоичное в десятичное";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_BIN="десятичное в двоичное";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_HEX="десятичное в шестнадцатеричное";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_HEX_TO_DEC="шестнадцатеричное в десятичное";
Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TITLE_CONVERT="преобразовать число";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_BIN_TO_DEC="Возвращает строку с десятичным представлением заданного двоичного числа";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_BIN="Возвращает строку с двоичным представлением числа заданного десятичного числа";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_HEX="Возвращает шестнадцатеричное представление заданного десятичного числа.";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_HEX_TO_DEC=
"Возвращает десятичное представление заданного шестнадцатеричного числа";Blockly.Msg.LANG_MATH_DIVIDE="u00F7";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO="http://appinventor.mit.edu/explore/ai2/support/blocks/math#modulo";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#quotient";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#remainder";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO=
"модуль";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT="частное от";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER="остаток от";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO="Возвращает остаток от деления.";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT="Возвращает частное.";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER="Возвращает остаток.";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#format";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT=
"отформатировать как десятичное число %1 цифр%2";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM="число";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES="места";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE="форматировать как десятичное";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP="Возвращает число в десятичной форме с указанным числом цифр.";Blockly.Msg.LANG_MATH_IS_A_BINARY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_BINARY_INPUT_NUM=
"двоичное?";Blockly.Msg.LANG_MATH_IS_A_BINARY_TOOLTIP="Проверяет, представляет ли строка двоичное число.";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_INPUT_NUM="основание 10?";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_TOOLTIP="Проверяет, представляет ли строка десятичное число.";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_INPUT_NUM=
"шестнадцатиричное?";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_TOOLTIP="Проверяет, представляет ли строка шестнадцатеричное число.";Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM="является числом?";Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP="Проверяет, является ли аргумент числом.";Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER="число";Blockly.Msg.LANG_MATH_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#number";
Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP="Задаёт число";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX="max";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN="мин.";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX="Возвращает наибольшее число списка..";Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN="Возвращает минимальный элемент..";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomfrac";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM="случайная дробь";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP=
"Возвращает случайное число между 0 и 1.";Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomint";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT="случайное целое в диапазоне от %1 до %2";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM="от";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO="до";Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM="случайное целое";Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP="Возвращает случайное целое число в диапазоне между верхним и нижним. Диапазон будет ограничен между 2**30.";
Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomseed";Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO="в";Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM="случайный набор значений";Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP="устанавливает случайное число для генератора случайных чисел";Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING="http://appinventor.mit.edu/explore/ai2/support/blocks/math#ceiling";Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR="http://appinventor.mit.edu/explore/ai2/support/blocks/math#floor";
Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND="http://appinventor.mit.edu/explore/ai2/support/blocks/math#round";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING="округление в меньшую сторону";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR="округление в большую сторону";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND="округлить";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING="Округляет вводимую величину до наименьшего значения не меньшего этой величины.";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR="Округляет вводимую величину до наибольшего значения не большего этой величины.";
Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND="Округляет число до большего или меньшего.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#abs";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP="http://appinventor.mit.edu/explore/ai2/support/blocks/math#e";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#log";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#neg";
Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt";Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE="абсолютный";Blockly.Msg.LANG_MATH_SINGLE_OP_EXP="e^";Blockly.Msg.LANG_MATH_SINGLE_OP_LN="log";Blockly.Msg.LANG_MATH_SINGLE_OP_NEG="нег";Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT="квадратный корень";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS="Возвращает абсолютное значение числа.";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP="Возвращает e (2,71828...) в заданной степени.";
Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN="Возвращает натуральный логарифм числа (логарифм по основанию e = 2,71828...)";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG="Возвращает противоположное число.";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT="Возвращает квадратный корень числа";Blockly.Msg.LANG_MATH_TRIG_ACOS="arccos";Blockly.Msg.LANG_MATH_TRIG_ASIN="arcsin";Blockly.Msg.LANG_MATH_TRIG_ATAN="arctg";Blockly.Msg.LANG_MATH_TRIG_ATAN2="arctg2";Blockly.Msg.LANG_MATH_TRIG_ATAN2_X="x";Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y=
"y";Blockly.Msg.LANG_MATH_TRIG_COS="cos";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#acos";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#asin";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan2";Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#cos";Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sin";Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#tan";Blockly.Msg.LANG_MATH_TRIG_SIN="sin";Blockly.Msg.LANG_MATH_TRIG_TAN="tg";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS="Возвращает угол в диапазоне [0, 180) градусов с заданным косинусом.";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN="Возвращает угол в диапазоне (-90, +90] градусов с заданным синусом.";
Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN="Возвращает угол в диапазоне (-90, +90) градусов с заданным тангенсом.";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2="Возвращает угол в диапазоне (-180, +180] градусов на точку с заданными координатими в прямоугольной системе координат.";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS="Возвращает косинус угла (в градусах). ";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN="Возвращает синус заданного угла в градусах.";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN="Возвращает тангенс угла (в градусах)";
Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL="вызвать ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX="вызвать ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE="процедура";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="Вызывает процедуру, не возвращающую значение.";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME='вызвать "не возвращать"';Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX=
"вызвать ";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP="Вызывает проуедуру, возвращающую значение.";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME='вызвать "вернуть"';Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX="в";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE="в";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO="выполнить";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="процедура";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP="Процедура, не возвращающая значение.";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX="в";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE="в";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN="результат";
Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP="Процедура возвращающая значение.";Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING="Предупреждение:n У этой процедуры есть n повторяющихся элементов ввода.";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT="выполнить/результат";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO="делать";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN=
"результат";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN="результат";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP='Запускает блоки в "выполнить" и возвращает значение. Это полезно, если вы хотите выполнить процедуру, перед тем, как возвращать значение переменной.';Blockly.Msg.LANG_PROCEDURES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get";Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF="Выделить Процедуру";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE="ввод:";
Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP=" ";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE="параметры";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP=" ";Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT="добавить текст";Blockly.Msg.LANG_TEXT_APPEND_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.Msg.LANG_TEXT_APPEND_TO="к";Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP='Добавляет текст к переменной "%1".';Blockly.Msg.LANG_TEXT_APPEND_VARIABLE="элемент";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#downcase";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#upcase";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE="строчные буквы";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE="заглавные буквы";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE="Возвращает копию текста со строчными буквами.";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE="Возвращает копию текста с заглавными буквами. ";
Blockly.Msg.LANG_TEXT_COMPARE_EQUAL="=";Blockly.Msg.LANG_TEXT_COMPARE_GT=" >";Blockly.Msg.LANG_TEXT_COMPARE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#compare";Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE="сравнить тексты";Blockly.Msg.LANG_TEXT_COMPARE_LT=" <";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL="Проверяет, являются ли текстовые цепочки идентичными, т.е. содержит ли одинаковые символы в нужном порядке. Это отличается от обычного =n в случае, если текстовые цепочки являются номерами: 123 и 0123 =n, но не text =.";
Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT="Сообщает, является ли text1 большей цепочкой, чем text2. Более короткая цепочка считается меньшей. Символы в верхнем регистре размещаются раньше символов в нижнем регистре.";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT="Проверяет, меньше ли текст1, чем текст2. Если один текст является началом другого, то более короткий текст считается меньшим. Заглавные буквы предшествуют строчным.";Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains";
Blockly.Msg.LANG_TEXT_CONTAINS_INPUT="содержит текстовый %1 фрагмент %2";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS="содержит";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE="фрагмент";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT="text";Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP="Проверяет, содержится ли подстрока в тексте.";Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#isempty";Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY="является пустым";Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP=
"возвращает истина, если длина текста равна 0, и ложь в противном случае. ";Blockly.Msg.LANG_TEXT_JOIN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#join";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM="строка";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP=" ";Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH="создать текст из";Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN="соединить";Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP="Создаёт текст из произвольного числа элементов. Если входных параметров нет - создаётся пустой текст.";
Blockly.Msg.LANG_TEXT_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#length";Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH="длина";Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP="Возвращает число символов (включая пробелы) в тексте.";Blockly.Msg.LANG_TEXT_PRINT_TITLE_PRINT="напечатать";Blockly.Msg.LANG_TEXT_PRINT_TOOLTIP="Печатает текст, число или другой объект.";Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT=
"заменить все  текстовые %1 сегменты %2 замена %3";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT="замена";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT="отрезок";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT="текст";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL="заменить все";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP="Возвращает новый текст, полученный в результате замены заданного сегмента определенным текстом.";Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP="Извлекает сегмент заданной длины из данного текста, начиная с заданной позиции. Позиция1 означает начало текста.";
Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#segment";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT="сегмент текста %1 начало %2 длина %3";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH="длина";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START="начало";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT="текст";Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT="отрезок";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces";
Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE="разбить по пробелам";Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP="Разделить текст на фрагменты, разделенные пробелами.";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL=" ";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT="http://appinventor.mit.edu/explore/ai2/support/blocks/text#split";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatany";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitat";
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatfirstofany";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT="с";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST="в (список)";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT="текст";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT="разделить";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY="разделить в любом";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST="разбить по первому";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY=
"разбить по первому из набора";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT='Разделяет текст на фрагменты, используя разделитель и производит список результатов. Разделение "один,два,три, четыре" с помощью "," (запятая) возвращает список (один два три четыре). Разделение "один-картошка,два-картошка,три-картошка, четыре" с помощью "-картошка" возвращает список (один два три четыре).';Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY='Разделяет данный текст на список, используя любые элементы списка в качестве разделителей и возвращает список результатов. Разделение "яблокоягода,банан,вишня,собачьяеда" с помощью запятой и "да" возвращает спискок (яблокояго банан вишня собачьяе).';
Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST='Делит заданный текст на два фрагмента на основе того, где встречается "в" как разделитель и возвращает список из двух пунктов, состоящих из фрагмента перед разделителем и фрагмента после разделителя. Разбиение "яблоко,банан,вишня,собачьяеда" запятой возвращает список из двух элементов: тексты - "яблоко" и "банан,вишня,собачьяеда". Обратите внимание, что запятая после слова "яблоко" не появляется в результирующем тексте, поскольку это разделитель.';
Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY='Разделяет заданный текст на список из двух элементов, используя первое местоположение любого элемента списка как разделитель. Разделение текста "я люблю яблоки бананы яблоки виноград" с помощью (ба, яб) возвращает два элемента - "я люблю" и "яблоки бананы яблоки виноград".';Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#startsat";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT="начинается с текстового %1 фрагмента %2";
Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE="фрагмент";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT="начинается с";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT="текст";Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP="Возвращает начальную позицию в тексте. Позиция 1 означает начало текста. Если элемент не встречается в тексте, возвращает 0.";Blockly.Msg.LANG_TEXT_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#string";Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE="“";Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE=
"Обрезанный текст";Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#obsfucatetext";Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE_TOOLTIP="Производит текст, как и текстовый блок. Разница состоит в том, что ntext не так легко найти, как APK. Используйте его при создании приложений для того, чтобы передать конфиденциальную информацию, например ключи API. Предупреждение: уровень безопасности этого решения остается невысоким.";Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE=
"”";Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP="Текстовая строка.";Blockly.Msg.LANG_TEXT_TRIM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#trim";Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM="обрезать";Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP="Возвращает копию его аргументов текстовой цепочки, удаляя все знаки пробелов.";Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT="получить";Blockly.Msg.LANG_VARIABLES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#get";Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET=
"получить";Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP="Возвращает значение переменной.";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT="глобальная";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME="имя";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT="инициализировать глобальную";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO="в";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP=
"Создаёт глобальную переменную и присваивает её значение прикреплённых блоков.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT="локальная";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME="имя";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT="локальная";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#return";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_INPUT_NAME=
"имя";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_INPUT_TO="в";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN="в";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TITLE_INIT="инициализировать локальную ";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP='Позволяет создавать переменные, доступные в части блока "Вернуть".';Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME='инициализировать локальную в "Вернуть"';Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/variables#do";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO="в";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO="в";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT="инициализировать локальную";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP='Позволяет создавать переменные, доступные только в части блока "выполнить".';Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME="инициализировать локальную переменную в";
Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE="x";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME="имя";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES="локальные имена";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP=" ";Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT="установить";Blockly.Msg.LANG_VARIABLES_SET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#set";Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET="присвоить";Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO=
"в";Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP="Присваивает переменной значение вставки.";Blockly.Msg.LANG_VARIABLES_VARIABLE=" переменная";Blockly.Msg.MISSING_SOCKETS_WARNINGS="Вы должны заполнить блоками все гнезда";Blockly.Msg.REMOVE_COMMENT="Удалить комментарий";Blockly.Msg.REPL_AI_NO_SEE_DEVICE="AI2 не распознает ваше устройство. Убедитесь, что кабель подключен и драйвера установлены.";Blockly.Msg.REPL_APPROVE_UPDATE="поскольку вам будет предложено подтвердить обновление.";Blockly.Msg.REPL_CANCEL=
"Отменить";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE="Ваш Companion устарел. Нажмите ОК для того, чтобы скачать обновление. Наблюдайте за";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1="Версия Companion, которую вы используете, устарела.<br/><br/>Эта версия App Inventor должна использоваться с версией Companion.";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE="Вы используете устаревшую версию Companion. Вам нужно будет - сейчас или впоследствии обновить ваш Companion.";Blockly.Msg.REPL_COMPANION_STARTED_WAITING=
"Companion запускается, ожидаем...";Blockly.Msg.REPL_COMPANION_VERSION_CHECK="Проверка версии Companion";Blockly.Msg.REPL_CONNECTING="Подключение...";Blockly.Msg.REPL_CONNECTING_USB_CABLE="Подключение через кабель USB";Blockly.Msg.REPL_CONNECTION_FAILURE1="Ошибка соединения";Blockly.Msg.REPL_CONNECT_TO_COMPANION="Подключиться к Companion";Blockly.Msg.REPL_DEVICES="эмулятора устройства";Blockly.Msg.REPL_DISMISS="Отменить";Blockly.Msg.REPL_DO_YOU_REALLY_Q="Вы уверены?";Blockly.Msg.REPL_EMULATORS="экраном";
Blockly.Msg.REPL_EMULATOR_STARTED="Эмулятор запущен, ожидайте";Blockly.Msg.REPL_ERROR_FROM_COMPANION="Ошибка в Companion";Blockly.Msg.REPL_FACTORY_RESET="Мы попробуем вернуть эмулятор к фабричным настройкам. Если вы недавно обновляли Companion, вам, скорее всего придется сделать это снова.";Blockly.Msg.REPL_GIVE_UP="Отказаться";Blockly.Msg.REPL_GOT_IT="Согласен.";Blockly.Msg.REPL_HELPER_NOT_RUNNING='Запуск AI не работает <br /><a href="http://appinventor.mit.edu" target="_blank">Нужна помощь?</a>';
Blockly.Msg.REPL_HELPER_Q="Нужна справка?";Blockly.Msg.REPL_KEEP_TRYING="Продолжить ожидание";Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR="Ошибка сетевого соединения";Blockly.Msg.REPL_NETWORK_ERROR="Ошибка сети";Blockly.Msg.REPL_NETWORK_ERROR_RESTART="Сетевая ошибка связи с Companion. <br /> Попробуйте перезапустить Companion и повторить попытку соединения.";Blockly.Msg.REPL_NOT_NOW="Не сейчас";Blockly.Msg.REPL_NOW_DOWNLOADING="Загружается обновление с сервера App Inventor, пожалуйста, подождите";Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS=
"<br/><i>Внимание:</i>&nbsp;Отчет о другой ошибке появится не ранее, чем через 5 секунд.";Blockly.Msg.REPL_NO_START_EMULATOR="Невозможно запустить MIT AI Companion с эмулятором";Blockly.Msg.REPL_OK="OK";Blockly.Msg.REPL_OK_LOWER="Ок";Blockly.Msg.REPL_PLUGGED_IN_Q="Вы подключены?";Blockly.Msg.REPL_RUNTIME_ERROR="Ошибка времени исполнения";Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING=" секунд, чтобы убедиться, что всё работает.";Blockly.Msg.REPL_SOFTWARE_UPDATE="Обновление программы";Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR=
"Запускаем приложение Companion на эмуляторе.";Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE="Запускаем приложение Companion на подключенном телефоне.";Blockly.Msg.REPL_STARTING_EMULATOR=" Android эмулятор запускается<br/>Подождите: Это может занять одну - две минуты.";Blockly.Msg.REPL_TRY_AGAIN1="Подключиться к MIT AI2 Companion не удалось. Попробуйте снова.";Blockly.Msg.REPL_UNABLE_TO_LOAD="Не могу загрузить обновление с сервера App Inventor.";Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND="Невозможно загрузать обновление с сервера App Inventor (сервер не отвечает)";
Blockly.Msg.REPL_UNABLE_TO_UPDATE="Не могу отправить обновление на устройство/эмулятор";Blockly.Msg.REPL_UPDATE_INFO='На ваше устройство установлено дополнение. Посмотрите на экран вашего устройство и подтвердите установку программы. <br /><br />Важно: когда установка закончится, нажмите "ЗАВЕРШИТЬ"(а не открыть). Затем перейдите в App Inventor в вашем браузере, нажмите на "Подключить" и выберите "Переподключиться". Затем переподключите ваше устройство.';Blockly.Msg.REPL_USB_CONNECTED_WAIT="Подключение по USB. Подождите";
Blockly.Msg.REPL_VERIFYING_COMPANION="Проверяем, запущен ли Companion...";Blockly.Msg.REPL_YOUR_CODE_IS="Ваш код";Blockly.Msg.SHOW_WARNINGS="Показывать предупреждения";Blockly.Msg.SORT_C="Отсортировать блоки по категории";Blockly.Msg.SORT_H="Отсортировать блоки по высоте";Blockly.Msg.SORT_W="Отсортировать блоки по ширине";Blockly.Msg.VERTICAL_PARAMETERS="Расположить параметры вертикально";Blockly.Msg.WARNING_DELETE_X_BLOCKS="Вы уверены, что хотите удалить все эти %1 блоков?";Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS=
"Этот блок должен быть присоединён к блоку обработки события или определению процедуры"}};Blockly.Msg.ru.switch_language_to_russian.init();Blockly.Msg.ko_kr={};
Blockly.Msg.ko_kr.switch_language_to_korean={category:"",helpUrl:"",init:function(){Blockly.Msg.DUPLICATE_BLOCK="복제하기";Blockly.Msg.REMOVE_COMMENT="주석 삭제하기";Blockly.Msg.ADD_COMMENT="주석 추가하기";Blockly.Msg.EXTERNAL_INPUTS="외부 입력값";Blockly.Msg.INLINE_INPUTS="블럭 내부 입력값";Blockly.Msg.HORIZONTAL_PARAMETERS="가로로 배열하기";Blockly.Msg.VERTICAL_PARAMETERS="세로로 배열하기";Blockly.Msg.DELETE_BLOCK="블록 삭제하기";Blockly.Msg.DELETE_X_BLOCKS="블록 %1개 삭제하기";Blockly.Msg.COLLAPSE_BLOCK="블록 접기";Blockly.Msg.EXPAND_BLOCK="블록 펼치기";Blockly.Msg.DISABLE_BLOCK=
"블록 비활성화하기";Blockly.Msg.ENABLE_BLOCK="블록 활성화하기";Blockly.Msg.HELP="도움말";Blockly.Msg.EXPORT_IMAGE="블록을 이미지로 다운로드하기";Blockly.Msg.COLLAPSE_ALL="블록 모두 접기";Blockly.Msg.EXPAND_ALL="블록 모두 펼치기";Blockly.Msg.ARRANGE_H="블록 가로로 배열하기";Blockly.Msg.ARRANGE_V="블록 세로로 배열하기";Blockly.Msg.ARRANGE_S="블록 대각선으로 배열하기";Blockly.Msg.SORT_W="블록 너비순으로 정렬하기";Blockly.Msg.SORT_H="블록 높이순으로 정렬하기";Blockly.Msg.SORT_C="블록 카테고리별로 정렬하기";Blockly.MSG_CHANGE_VALUE_TITLE="값 바꾸기:";Blockly.MSG_NEW_VARIABLE="새 변수...";Blockly.MSG_NEW_VARIABLE_TITLE=
"새 변수 이름:";Blockly.MSG_RENAME_VARIABLE="변수 이름 바꾸기...";Blockly.MSG_RENAME_VARIABLE_TITLE='모든 "%1" 변수 이름 바꾸기:';Blockly.MSG_VARIABLE_CATEGORY="변수";Blockly.MSG_PROCEDURE_CATEGORY="함수";Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION="이 블럭은 정의 내에 있을 수 없습니다";Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN="드롭 다운에서 유효한 항목을 선택하세요.";Blockly.ERROR_DUPLICATE_EVENT_HANDLER="이 컴포넌트에 같은 이벤트 핸들러가 여러 개 있습니다.";Blockly.Msg.LANG_COLOUR_PICKER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic";Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP=
"사각형을 클릭하여 색상을 고르세요";Blockly.Msg.LANG_COLOUR_BLACK="검정";Blockly.Msg.LANG_COLOUR_WHITE="흰색";Blockly.Msg.LANG_COLOUR_RED="빨강";Blockly.Msg.LANG_COLOUR_PINK="분홍";Blockly.Msg.LANG_COLOUR_ORANGE="주황";Blockly.Msg.LANG_COLOUR_YELLOW="노랑";Blockly.Msg.LANG_COLOUR_GREEN="초록";Blockly.Msg.LANG_COLOUR_CYAN="청록";Blockly.Msg.LANG_COLOUR_BLUE="파랑";Blockly.Msg.LANG_COLOUR_MAGENTA="자홍색";Blockly.Msg.LANG_COLOUR_LIGHT_GRAY="밝은 회색";Blockly.Msg.LANG_COLOUR_DARK_GRAY="짙은 회색";Blockly.Msg.LANG_COLOUR_GRAY="회색";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR=
"색상 분리하기";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP="각각 0에서 255사이의 빨강, 초록, 파랑색과 투명도값을 가지는 리스트를 반환합니다.";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR="색상 만들기";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP="주어진 빨강, 초록, 파랑색과 투명도값을 조합한 색상을 만듭니다.";Blockly.Msg.LANG_CATEGORY_CONTROLS="제어";Blockly.Msg.LANG_CONTROLS_IF_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/control#if";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1="만약 주어진 값이 참이면, 다음 명령문을 실행합니다.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2="만약 주어진 값이 참이면, 첫번째 명령문 블록을 실행하고, 아니라면, 두번째 명령문 블록을 실행합니다.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3="만약 주어진 값이 참이면, 첫번째 명령문 블록을 실행합니다. 그렇지 않고 두번째 값이 참이면, 두번째 명령문 블럭을 실행합니다.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4="만약 첫번째 값이 참이면, 첫번째 명령문 블록을 실행합니다.\n 그렇지 않고 두번째 값이 참이면 두번째 명령문 블록을 실행합니다.\n 모든 값이 참이 아니면 마지막 명령문 블록을 실행합니다.";Blockly.Msg.LANG_CONTROLS_IF_MSG_IF=
"만약";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF="아니고 … 라면";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE="아니면";Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN="그러면";Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF="만약";Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP="조건을 추가 또는 삭제하거나 순서를 바꾸어 만약 블럭을 재설정합니다.";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF="아니고 … 만약";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="만약 블럭에 조건을 추가합니다.";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE="아니면";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP="만약 블럭의 모든 조건을 검사한 후 실행될 마지막 조건을 추가합니다.";
Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT="반복";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO="실행";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="하는 동안";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="할 때 까지";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="주어진 값이 참이면, 계속하여 명령문을 실행합니다.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="주어진 값이 거짓이면, 계속하여 명령문을 실행합니다.";
Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1="검사 결과가 참이라면, 계속하여 '실행' 구역에 있는 블록을 실행합니다.";Blockly.Msg.LANG_CONTROLS_FOR_HELPURL="";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH="숫자 세기";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR="x";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM="부터";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO="까지";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO="실행";Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP='시작 숫자부터 마지막 숫자까지 숫자를 셉니다.\n 각 숫자마다, 현재 숫자를 변수 "%1"에 지정하고\n 해당 명령문을 실행합니다.';Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM="각각 반복";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR="숫자";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START="시작";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END="끝";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP="간격";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO="실행";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT="범위내의 각 숫자마다";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX=
"각 ";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX=" 범위내의";Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP="시작부터 끝까지 범위 내의 각 간격의 숫자마다 '실행' 영역의 블록을 실행합니다.  현재 숫자를 참조하려면 해당 변수 이름의 가져오기 블록을 사용하세요.";Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM="각각 반복";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR="항목";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST="리스트";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO=
"실행";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT="각각 리스트 항목";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX="각 ";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX=" 리스트의";Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP="리스트의 각 항목마다 '실행' 영역의 블록을 실행합니다. 리스트의 현재 항목을 참조하려면 해당 변수 이름의 가져오기 블록을 사용하세요.";Blockly.Msg.LANG_CONTROLS_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#get";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL="http://en.wikipedia.org/wiki/Control_flow";
Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP="반복의";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK="벗어나기";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE="다음 반복 이어나가기";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="진입되어 있는 반복문 벗어나기";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="이번 반복 블록의 나머지는 뛰어넘고, \n 다음 반복 블록으로 이어나갑니다.";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="경고: 이 블럭은 반복문 안에서만 사용됩니다.";Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#while";
Blockly.Msg.LANG_CONTROLS_WHILE_TITLE="~하는 동안";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST="검사";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO="실행";Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT="~하는 동안";Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP="검사 결과가 참이라면 '실행' 구역의 블록을 계속하여 실행합니다.";Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose";Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE="만약";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST="";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN=
"그러면";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN="아니면";Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT="만약";Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP="만약 조건이 참이라면, '그러면-반환' 슬롯에 있는 표현식을 실행한 결과가 반환되고, 그렇지 않으면 '아니면-반환' 슬롯에 있는 표현식을 실행한 결과가 반환됩니다. 즉, 적어도 하나의 표현식은 실행되어 반환되게 됩니다.";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO="실행";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN=
"결과";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP="'실행' 블록이 실행되고 명령문을 반환합니다. 변수에 값을 반환하기 전에 함수를 실행해야한다면 유용하게 사용할 수 있습니다.";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT="실행/결과";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE="결과 실행";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE="결과 무시하고 실행";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT="무시하고 실행";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP=
"모든 반환값을 무시하고 연결된 코드의 블럭을 실행합니다. 반환값을 가지는 함수를 호출하고 싶지만, 그 값이 필요없을 때 유용하게 사용 가능합니다.";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE="다른 스크린 열기";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME="스크린 이름";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT="스크린 열기";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP="다중 스크린 앱에 새 스크린을 엽니다.";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE="시작 값을 전달하며 다른 스크린 열기";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME="스크린 이름";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE="시작 값";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT="값을 전달하며 스크린 열기";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP=
"다중 스크린 앱에 새로운 스크린을 열고 시작 값을 전달합니다.";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE="시작 값 가져오기";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME="스크린 이름";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE="시작 값";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT="시작 값 가져오기";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP="스크린이 열릴 때 전달 받은 시작 값입니다. 만약 전달 받은 값이 없다면, 빈 텍스트를 반환합니다.";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE="스크린 닫기";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT="스크린 닫기";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP="현재 스크린을 닫습니다.";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE=
"값을 전달하며 스크린 닫기";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT="결과";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT="값을 전달하며 스크린 닫기";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP="현재 스크린을 닫습니다. 그리고 새로 열리는 스크린에 결과를 반환합니다.";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE="앱 종료";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT=
"앱 종료";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP="이 앱의 모든 스크린을 닫고 앱을 종료시킵니다.";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE="일반 시작 텍스트 가져오기";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT="일반 시작 텍스트 가져오기";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP="다른 앱에서 이 앱을 실행했을 때 이 스크린에 넘겨준 일반 텍스트 반환합니다. 넘겨 받은 값이 없다면, 빈 텍스트를 반환합니다. 여러개의 스크린을 가지고 있는 앱들은, '일반 시작 텍스트 가져오기' 보다 '시작 값 가져오기'를 사용하세요.";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE="일반 텍스트를 전달하며 스크린 닫기";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT="텍스트";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT="일반 텍스트를 전달하며 스크린 닫기";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP="현재 스크린을 닫습니다. 그리고 열려있는 앱에 텍스트를 반환합니다. 여러개의 스크린을 가지고 있는 앱들은, 일반 텍스트를 전달하며 스크린 닫기 보다 값을 전달하며 스크린 닫기를 사용하세요.";
Blockly.Msg.LANG_CATEGORY_LOGIC="논리";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL="http://en.wikipedia.org/wiki/Inequality_(mathematics)";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=";Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ='두 값이 동일한지 아닌지 검사합니다. \n 비교되는 값들이 숫자 뿐 아니라 다른 유형의 값도 될 수 있습니다. \n 숫자는 보이는 형태의 문자열과 동일한 값으로 간주합니다. \n 예를 들어, 숫자 0은 텍스트 "0"과 동일합니다. 또한 두 문자열이 나타내는 \n 숫자가 동일한 값이라면, 두 문자열은 서로 동일합니다. 예를 들어 \n "1"은 "01"과 동일합니다.';
Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ="만약 두 값이 서로 다르면 참을 반환합니다.";Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME="동일한 식";Blockly.Msg.LANG_LOGIC_COMPARE_EQ="=";Blockly.Msg.LANG_LOGIC_COMPARE_NEQ="≠";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and";Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or";Blockly.Msg.LANG_LOGIC_OPERATION_AND="그리고";Blockly.Msg.LANG_LOGIC_OPERATION_OR=
"또는";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND="만약 모든 입력값이 참이면 참을 반환합니다.";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR="만약 하나 이상의 값이 참이면 참을 반환합니다.";Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not";Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT="아니다";Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP="만약 입력값이 거짓이면 참을 반환합니다.\n 만약 입력값이 참이면 거짓을 반환합니다.";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE="참";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE="거짓";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE="불린값 참(true)을 반환합니다.";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE="불린값 거짓(false)을 반환합니다.";Blockly.Msg.LANG_CATEGORY_MATH="수학";Blockly.Msg.LANG_MATH_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#number";Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP="빈칸에 입력한 숫자를 값으로 사용합니다.";Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER=
"숫자";Blockly.Msg.LANG_MATH_COMPARE_HELPURL="";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ="http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt";Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ="만약 두 수가 서로 같으면 참을 반환합니다.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ="만약 두 수가 서로 다르면 참을 반환합니다.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT="만약 앞의 수가 뒤의 수보다 작으면\n 참을 반환합니다.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE="만약 앞의 수가 뒤의 수보다 작거나 같으면\n 참을 반환합니다.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT=
"만약 앞의 수가 뒤의 수보다 크면\n 참을 반환합니다.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE="만약 앞의 수가 뒤의 수보다 크거나 같으면\n 참을 반환합니다.";Blockly.Msg.LANG_MATH_COMPARE_EQ="=";Blockly.Msg.LANG_MATH_COMPARE_NEQ="≠";Blockly.Msg.LANG_MATH_COMPARE_LT="<";Blockly.Msg.LANG_MATH_COMPARE_LTE="≤";Blockly.Msg.LANG_MATH_COMPARE_GT=">";Blockly.Msg.LANG_MATH_COMPARE_GTE="≥";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#add";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract";
Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY="http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE="http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide";Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD="두 수를 더한 값을 반환합니다.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS="두 수를 뺀 값을 반환합니다.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY=
"두 수를 곱한 값을 반환합니다.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE="두 수를 나눈 값을 반환합니다.";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER="앞의 수를 뒤의 수만큼 제곱한 값을\n 반환합니다.";Blockly.Msg.LANG_MATH_ARITHMETIC_ADD="+";Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS="-";Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY="*";Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE="/";Blockly.Msg.LANG_MATH_ARITHMETIC_POWER="^";Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT="제곱근";Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE="절대값";Blockly.Msg.LANG_MATH_SINGLE_OP_NEG=
"음수";Blockly.Msg.LANG_MATH_SINGLE_OP_LN="로그";Blockly.Msg.LANG_MATH_SINGLE_OP_EXP="e^";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT="해당 숫자의 제곱근을 반환합니다.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS="해당 숫자의 절대값을 반환합니다.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#abs";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG="해당 숫자의 음수를 반환합니다.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#neg";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN="해당 숫자의 자연 로그값을 반환합니다. 즉, 밑이 e(2.71828…)인 로그값을 반환합니다.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#log";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP="해당 숫자의 e (2.71828…) 거듭제곱값을 반환합니다.";Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP="http://appinventor.mit.edu/explore/ai2/support/blocks/math#e";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND="해당 숫자를 반올림합니다.";
Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND="http://appinventor.mit.edu/explore/ai2/support/blocks/math#round";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING="해당 숫자를 올림합니다.";Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING="http://appinventor.mit.edu/explore/ai2/support/blocks/math#ceiling";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR="해당 숫자를 내림합니다.";Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR="http://appinventor.mit.edu/explore/ai2/support/blocks/math#floor";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND="반올림";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING=
"올림";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR="내림";Blockly.Msg.LANG_MATH_TRIG_SIN="sin";Blockly.Msg.LANG_MATH_TRIG_COS="cos";Blockly.Msg.LANG_MATH_TRIG_TAN="tan";Blockly.Msg.LANG_MATH_TRIG_ASIN="asin";Blockly.Msg.LANG_MATH_TRIG_ACOS="acos";Blockly.Msg.LANG_MATH_TRIG_ATAN="atan";Blockly.Msg.LANG_MATH_TRIG_ATAN2="atan2";Blockly.Msg.LANG_MATH_TRIG_ATAN2_X="x";Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y="y";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN="주어진 각도의 사인(sine) 값으로 변환합니다.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN=
"http://appinventor.mit.edu/explore/ai2/support/blocks/math#sin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS="주어진 각도의 코사인(cosine) 값으로 변환합니다.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#cos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN="주어진 각도의 탄젠트(tangent) 값으로 변환합니다.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#tan";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN="주어진 사인(sine) 값을 가지게 되는 각도로 변환합니다.\n 반환되는 각도 범위는 (-90, +90] 입니다.";
Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#asin";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS="주어진 코사인(cosine) 값을 가지게 되는 각도로 변환합니다.\n 변환되는 각도 범위는 [0, 180) 입니다.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS="http://appinventor.mit.edu/explore/ai2/support/blocks/math#acos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN="주어진 탄젠트(tangent) 값을 가지게 되는 각도로 변환합니다.\n 변환되는 각도 범위는 (-90, +90) 입니다.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan";
Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2="주어진 두 값이 직각좌표(y/x)를 이루게 되는 각도를 반환합니다.\n 반환되는 각도 범위는 (-180, +180] 입니다.";Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2="http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan2";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN="최솟값";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX="최댓값";Blockly.Msg.LANG_MATH_DIVIDE="÷";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO="모듈로";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER="나머지";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT=
"몫";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO="모듈로를 반환합니다.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO="http://appinventor.mit.edu/explore/ai2/support/blocks/math#modulo";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER="나머지를 반환합니다.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER="http://appinventor.mit.edu/explore/ai2/support/blocks/math#remainder";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT="몫을 반환합니다.";Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT="http://appinventor.mit.edu/explore/ai2/support/blocks/math#quotient";
Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomint";Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM="임의의 정수";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM="시작";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO="끝";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT="임의의 정수 시작 %1 끝 %2";Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP="주어진 범위 내의 임의의 정수를 반환합니다.\n 최대 범위는 2**30보다 작은 수로 자동으로 변환됩니다.";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomfrac";
Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM="임의의 분수";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP="0부터 1사이의 임의의 수를 반환합니다.";Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomseed";Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM="난수 시드 지정하기";Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO="시드";Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP="난수 생성기의 시드를 지정합니다.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT="변환";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG=
"라디안을 각도로";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD="각도를 라디안으로";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG="해당 라디안값에 대응되는 [0, 360) 범위의 각도값을 반환합니다.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertrad";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD="해당 각도값에 대응되는 [-π, +π) 범위의 라디안값을 반환합니다.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD="http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertdeg";
Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#format";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE="소수로 나타내기";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM="숫자";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES="자릿수";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT="소수로 나타내기 숫자 %1 자릿수 %2";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP="주어진 소수점 이하의 자릿수까지 나타내는 형태로 반환합니다.";Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";
Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM="숫자인가요?";Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP="주어진 값이 숫자인지 검사합니다.";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_INPUT_NUM="10진수인가요?";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_TOOLTIP="주어진 값이 양의 10진수를 나타내는 문자열인지 검사합니다.";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_INPUT_NUM=
"16진수인가요?";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_TOOLTIP="주어진 값이 16진수를 나타내는 문자열인지 검사합니다.";Blockly.Msg.LANG_MATH_IS_A_BINARY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber";Blockly.Msg.LANG_MATH_IS_A_BINARY_INPUT_NUM="2진수인가요?";Blockly.Msg.LANG_MATH_IS_A_BINARY_TOOLTIP="주어진 값이 2진수를 나타내는 문자열인지 검사합니다.";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TITLE_CONVERT="진법 바꾸기";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_HEX="10진수를 16진수로";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_HEX=
"";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_HEX="10진수인 양의 정수를 16진수로 변환한 문자열을 반환합니다.";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_HEX_TO_DEC="16진수를 10진수로";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_HEX_TO_DEC="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_HEX_TO_DEC="16진수를 나타내는 문자열을 10진수로 변환한 문자열을 반환합니다.";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_BIN="10진수를 2진수로";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_BIN="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_BIN="10진수인 양의 정수를 2진수로 변환한 문자열을 반환합니다.";
Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_BIN_TO_DEC="2진수를 10진수로";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_BIN_TO_DEC="";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_BIN_TO_DEC="2진수를 나타내는 문자열을 10진수로 변환한 문자열을 반환합니다.";Blockly.Msg.LANG_CATEGORY_TEXT="텍스트";Blockly.Msg.LANG_TEXT_TEXT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#string";Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP="빈칸에 입력한 텍스트 문자열을 사용하게 됩니다.";Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE='"';Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE=
'"';Blockly.Msg.LANG_TEXT_JOIN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#join";Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH="텍스트 만들기";Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP="모든 입력들을 하나의 텍스트 문자열로 합칩니다.\n 만약 아무런 입력값이 없다면, 빈 텍스트를 만듭니다.";Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN="합치기";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM="문자열";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP="";Blockly.Msg.LANG_TEXT_APPEND_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.Msg.LANG_TEXT_APPEND_TO=
"~에";Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT="텍스트 추가하기";Blockly.Msg.LANG_TEXT_APPEND_VARIABLE="항목";Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP='텍스트를 변수 "%1"에 붙이기.';Blockly.Msg.LANG_TEXT_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#length";Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH="길이";Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP="주어진 텍스트를 구성하고 있는 문자 갯수(스페이스 포함)를 반환합니다.";Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#isempty";Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY=
"비어있나요?";Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP="텍스트 길이가 0이면 참을, 그렇지 않으면 거짓을 반환합니다.";Blockly.Msg.LANG_TEXT_COMPARE_LT=" <";Blockly.Msg.LANG_TEXT_COMPARE_EQUAL=" =";Blockly.Msg.LANG_TEXT_COMPARE_GT=" >";Blockly.Msg.LANG_TEXT_COMPARE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#compare";Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE="텍스트 비교하기";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT="텍스트1이 텍스트2보다 사전 순서 상 작은지 검사합니다.\n 만약 한 텍스트가 다른 텍스트의 접두사이면, 더 짧은 텍스트가 작은 것으로 간주됩니다. 대문자는 소문자보다 큽니다.";
Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL="텍스트 문자열이 동일한지 검사합니다.\n 즉, 똑같은 문자들이 똑같은 순서인지 확인합니다. 이는 보통의 = 와는 다릅니다.\n 예를 들어 텍스트 문자열이 숫자인 경우: 123과 0123은 = 이지만\n 텍스트로서는 =. 입니다.";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT="텍스트1이 텍스트2보다 사전 순서 상 큰지 검사합니다.\n 만약 한 텍스트가 다른 텍스트의 접두사이면, 더 짧은 텍스트가 작은 것으로 간주됩니다. 대문자는 소문자보다 큽니다.";Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE_TOOLTIP="입력된 텍스트를 읽기 어려운 형태의 새로운 텍스트 블록으로 만듭니다. \n 이는 앱에 보안이 중요한 정보를 포함하여 배포해야 할 때 사용하세요. 예를 들면 API 키 같은 경우에요. \n 경고: 전문가 수준에서는 매우 낮은 수준의 보안만 제공합니다.";
Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE="텍스트 난독화";Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#obsfucatetext";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE="대문자";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE="소문자";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE="대문자로 변환한 텍스트 문자열의 복사본을 반환합니다.";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#upcase";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE=
"소문자로 변환한 텍스트 문자열의 복사본을 반환합니다.";Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE="http://appinventor.mit.edu/explore/ai2/support/blocks/text#downcase";Blockly.Msg.LANG_TEXT_TRIM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#trim";Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM="다듬기";Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP="시작과 끝의 띄어쓰기를 모두 제거한\n 텍스트 문자열의 복사본을 반환합니다.";Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#startsat";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT=
"위치 찾기";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT="텍스트";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE="조각";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT="~에서 시작하기  텍스트 %1 조각 %2";Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP="입력 받은 텍스트에서 해당 조각이 시작하는 위치(인덱스)를 반환합니다.\n 인덱스 1은 텍스트의 시작 위치를 의미합니다. 만약 텍스트에 해당 조각이 포함되지 않으면\n 0을 반환합니다.";Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS="포함";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT=
"텍스트";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE="조각";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT="포함 텍스트 %1 조각 %2";Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP="텍스트가 해당 조각을 포함하고 있는지 검사합니다.";Blockly.Msg.LANG_TEXT_SPLIT_HELPURL="";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT="텍스트";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT="구분";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST="구분 (리스트)";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST="처음 일치하는 위치 분할";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY="리스트 처음 일치하는 위치 분할";
Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT="분할";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY="일치하는 모든 위치 분할";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST='주어진 텍스트를 \'구분\' 텍스트가 처음으로 일치하는 위치를 기준으로 두 개의 조각으로 나눕니다.\n 그리고 나누는 기준 점 앞과 뒤로 이루어진 두 조각의 텍스트를 가지는 리스트를 반환합니다 \n "apple.banana.cherry.dogfood"를 콤마를 구분 기준으로 나누면 \n 다음과 같은 두 개의 항목으로 이루어진 리스트를 반환합니다: 첫 번째 텍스트 "apple", 두 번째 텍스트 "banana,cherry,dogfood".';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitat";
Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY='주어진 텍스트를 \'구분\' 리스트 항목 중 아무거나 처음으로 일치하는 위치를 기준으로 두 개의 항목을 가진 리스트로 나눕니다. \n\n "I love apples bananas apples grapes"를 리스트 "(ba ap)"로 나누면\n 첫 번째는 "I love"이고 두 번째는 "ples bananas apples grapes"인 리스트를 반환합니다';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatfirstofany";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT='주어진 텍스트를 \'구분\' 텍스트를 사용하여 일치하는 모든 점들을 나누어 결과 리스트를 만듭니다.  \n "one,two,three,four"를 "," (콤마) 로 분할하면 "(one two three four)" 리스트를 반환합니다. \n "one-potato,two-potato,three-potato,four"를 "-potato,"로 분할하면 "(one two three four)" 리스트를 반환합니다.';
Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT="http://appinventor.mit.edu/explore/ai2/support/blocks/text#split";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY='주어진 텍스트를 \'구분\' 리스트와 일치하는 위치들을 모두 나누어 결과를 리스트로 반환합니다. \n "appleberry,banana,cherry,dogfood"를 첫 번째 항목은 콤마, 두 번째 항목은 "rry"인 \'구분\' 리스트로 분할을 하면\n 다음 네개의 항목을 가지는 리스트를 반환합니다: \n "(applebe banana che dogfood)".';Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY="http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatany";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE="빈 칸으로 분할";Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP="텍스트를 빈 칸으로 구분하여 분할합니다.";Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#segment";Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT="부분";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START="시작";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH="길이";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT="텍스트";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT=
"부분  텍스트 %1 시작 %2 길이 %3";Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP='주어진 텍스트에서 "시작" 위치부터 "길이" 값 만큼의 텍스트 일부분을 추출합니다.\n 텍스트의 시작 위치는 1입니다.';Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT="부분";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT="텍스트";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL="모두 교체하기";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT="교체";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT=
"모두 교체하기 %1 부분 %2 교체 %3";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP='"부분"과 일치하는 모든 항목을 "교체"로 바꾼 새로운 텍스트를 반환합니다.';Blockly.Msg.LANG_CATEGORY_LISTS="리스트";Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE="빈 리스트 만들기";Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist";Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST="리스트 만들기";Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP="여러 개의 항목을 가진 리스트를 만듭니다.";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD=
"리스트";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP="추가 또는 삭제하거나 순서를 바꾸어 리스트 블록을 재설정합니다.";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE="항목";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP="항목을 리스트에 추가합니다.";Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE="항목";Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP="항목을 리스트에 추가합니다.";Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem";
Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT="리스트에서 항목 선택하기";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX="위치";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT="리스트에서 항목 선택하기  리스트 %1 위치 %2";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP="리스트 안에서 해당 위치에 있는 값을 반환합니다.";Blockly.Msg.LANG_LISTS_IS_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist";Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN="리스트안에 있나요?";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING=
"값";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_IS_IN_INPUT="리스트에 포함되어 있나요? 값 %1 리스트 %2";Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP="리스트가 해당 값을 포함하고 있으면 참을 반환하고, 그렇지 않으면 거짓을 반환합니다.";Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist";Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION="리스트에서의 위치";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING="값";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT=
"리스트에서의 위치  값 %1 리스트 %2";Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP="리스트 안에서 해당 값이 몇 번째에 위치하고 있는지 찾아서 그 값을 반환합니다. 만약 리스트에 해당 값이 없다면, 0을 반환합니다.";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM="임의의 항목 선택하기";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP="리스트에서 임의의 항목을 선택합니다.";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE="리스트의 항목 교체하기";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX="목록";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT="교체";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT="리스트의 항목 교체하기  리스트 %1 위치 %2 교체 %3";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP="리스트에서 해당 위치의 항목을 교체하고자 하는 항목으로 변경합니다.";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE="리스트에서 항목 삭제하기";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX="목록";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT="리스트에서 항목 삭제하기  리스트 %1 위치 %2";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP="리스트의 지정된 위치에 있는 항목을 삭제합니다.";Blockly.Msg.LANG_LISTS_LENGTH_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH=
"리스트 길이";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_LENGTH_INPUT="리스트 길이 리스트 %1";Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP="리스트에 몇 개의 항목이 있는지 세어 그 값을 반환합니다.";Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#append";Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND="리스트 붙이기";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1="리스트1";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2="리스트2";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT="리스트 붙이기  리스트1 %1 리스트2 %2";
Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP="리스트1의 맨 끝에 리스트2의 모든 항목을 가져다 붙입니다. 추가한 다음에는, 리스트1 은 추가된 모든 항목들을 포함하게 되고, 리스트2는 아무것도 바뀌지 않습니다.";Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD="리스트에 항목 추가하기";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM="항목";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT="리스트에 항목 추가 리스트 %1 항목 %2";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP=
"리스트 마지막에 항목 추가하세요";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD="리스트";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP="추가, 삭제 또는 리스트 블록 재구성을 위한 섹션 재정렬하기";Blockly.Msg.LANG_LISTS_COPY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy";Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY="리스트 복사하기";Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_COPY_TOOLTIP="모든 하위 리스트 복사를 포함하여 리스트 복사본 만들기";Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist";
Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST="리스트인가요?";Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING="값";Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP="리스트인지 검사합니다.";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV="리스트를 csv 행으로 바꾸기";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP="해당 리스트를 테이블의 행을 나타내는 CSV (콤마로 구분된 값) 텍스트로 변환합니다. 행 목록의 각 항목들은 하나의 필드로 간주되어 쌍따옴표로 구분되어 표시됩니다. 그리고 각 항목들은 콤마로 나누어집니다. 반환된 행 텍스트는 맨 끝에 줄 바꿈 표시를 포함하고 있지 않습니다.";
Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV="csv 행을 리스트로 바꾸기";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT="텍스트";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP="CSV (콤마로 구분된 값) 형태의 텍스트를 리스트로 변환합니다. 행 텍스트가 이스케이프 되지 않은 새 라인을 필드에 포함하고 있다면 (쉽게 말해, 다중 라인이면) 오류가 발생합니다. 행 텍스트가 단일 새 라인이거나 CRLF로 끝나는 것은 괜찮습니다.";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable";
Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV="리스트를 csv 표로 바꾸기";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP="해당 리스트를 표를 나타내는 CSV (콤마로 구분된 값) 텍스트로 변환합니다. 리스트의 각 항목들은 CSV 표의 행 하나를 나타내는 리스트입니다. 행 리스트의 각 항목은 하나의 필드로 간주되어, 쌍따옴표로 구분됩니다. 반환된 텍스트에서 행의 항목들은 콤마로 나누어지며, 행은 CRLF (\\r\\n)로 구분됩니다.";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV=
"csv 표를 리스트로 바꾸기";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT="텍스트";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP="CSV (콤마로 구분된 값) 형식의 표를 나타내는 텍스트를 리스트로 변환합니다. 행은 새 라인 (\\n) 이나 CRLF (\\r\\n) 로 구분됩니다.";Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert";Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST="리스트에 항목 추가하기";Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX="목록";Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM=
"항목";Blockly.Msg.LANG_LISTS_INSERT_INPUT="리스트에 항목 추가하기  리스트 %1 위치 %2 항목 %3";Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP="해당 항목을 지정된 위치의 리스트에 추가합니다.";Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty";Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY="리스트가 비어있나요?";Blockly.Msg.LANG_LISTS_INPUT_LIST="리스트";Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP="리스트가 비어있다면 참을 반환합니다.";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs";
Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS="짝을 지어 찾기";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY="키";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS="쌍";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND="찾지 못함";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT="짝을 지어 찾기  키 %1 쌍 %2 찾지 못함 %3";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP="쌍으로 된 리스트에서 키와 연관된 값을 찾아 반환합니다.";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global";
Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT="전역변수 초기화";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME="변수 이름";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO="값";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT="전역변수";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP="전역변수를 만들고 연결된 블록의 값을 해당 변수에 지정합니다.";Blockly.Msg.LANG_VARIABLES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global";Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET="가져오기";Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT=
"가져오기";Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP="이 변수의 값을 반환합니다.";Blockly.Msg.LANG_VARIABLES_SET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#set";Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET="지정하기";Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO="값";Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT="지정하기";Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP="이 변수에 입력값을 지정합니다.";Blockly.Msg.LANG_VARIABLES_VARIABLE="변수";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/variables#do";
Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT="지역변수 초기화";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME="변수 이름";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO="값";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO="실행";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT="지역";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP="이 블럭의 '실행' 영역에서만 접근 가능한 변수를 만듭니다.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME="실행할 때 지역변수 초기화하기";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/variables#return";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN="실행";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT="지역변수";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP="이 블럭의 반환 영역에서만 접근가능한 변수를 만듭니다.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME="반환 시 지역변수를 초기화 하세요";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES="지역변수 이름";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP=
"";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME="이름";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE="x";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE="함수";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="함수 이름";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO="실행";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX="함수 ";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP=
"반환값을 가지지 않는 함수입니다.";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN="결과";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO="실행";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN="결과";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP="'실행' 영역에 있는 블록을 실행하고 결과를 반환한다. 변수에 값을 반환하기 전에 함수를 실행해야 하는 경우 유용합니다.";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT="실행/결과";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL=
"http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE="함수";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DO=Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO;Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN="결과";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX="함수 ";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP="결과값을 반환하는 함수입니다.";Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING=
"경고:\n이 함수는 \n중복된 입력값을 가지고 있습니다.";Blockly.Msg.LANG_PROCEDURES_GET_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL="호출 ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE="함수";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX="호출 ";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="반환값이 없는 함수를 호출합니다.";
Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME="반환을 호출하지 않는다";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL="http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL=Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_PROCEDURE=Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE;Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX="호출 ";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP="반환값의 프로시저를 호출한다";
Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME="반환을 호출한다";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE="입력값";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE="입력:";Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF="하이라이트 프로시저";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP="";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP="";Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN="언제 ";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO="실행";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL=
"";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL="호출 ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL="호출 ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT="컴포넌트";Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT="컴포넌트";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET=
"지정하기 ";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO=" 값";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL="";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET="지정하기 ";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO=" 값";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT="컴포넌트";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL="/reference/components/userinterface.html#Button";Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL="/reference/components/userinterface.html#buttonproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL="/reference/components/userinterface.html#buttonevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL="/reference/components/userinterface.html#CheckBox";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#checkboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL="/reference/components/userinterface.html#checkboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL="/reference/components/userinterface.html#Clock";
Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL="/reference/components/userinterface.html#clockproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL="/reference/components/userinterface.html#clockevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL="/reference/components/userinterface.html#clockmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL="/reference/components/userinterface.html#Image";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL="/reference/components/userinterface.html#imageproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL="/reference/components/userinterface.html#imageevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL="/reference/components/userinterface.html#imagemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL="/reference/components/userinterface.html#Label";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL="/reference/components/userinterface.html#labelproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL="/reference/components/userinterface.html#labelevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL="/reference/components/userinterface.html#labelmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL="/reference/components/userinterface.html#ListPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL="/reference/components/userinterface.html#listpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL="/reference/components/userinterface.html#listpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL=
"/reference/components/userinterface.html#listpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL="/reference/components/userinterface.html#Notifier";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL="/reference/components/userinterface.html#notifierproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL="/reference/components/userinterface.html#notifierevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL="/reference/components/userinterface.html#notifiermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL="/reference/components/userinterface.html#PasswordTextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#pwdboxproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#pwdboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#pwdboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL=
"/reference/components/userinterface.html#Screen";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL="/reference/components/userinterface.html#screenproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL="/reference/components/userinterface.html#screenevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL="/reference/components/userinterface.html#screenmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL="/reference/components/userinterface.html#Slider";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL=
"/reference/components/userinterface.html#sliderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL="/reference/components/userinterface.html#sliderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL="/reference/components/userinterface.html#slidermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL="/reference/components/userinterface.html#TextBox";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL="/reference/components/userinterface.html#textboxproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL="/reference/components/userinterface.html#textboxevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL="/reference/components/userinterface.html#textboxmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL="/reference/components/userinterface.html#WebViewer";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL="/reference/components/userinterface.html#webviewerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL=
"/reference/components/userinterface.html#webviewerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL="/reference/components/userinterface.html#webviewermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL="/reference/components/layout.html#HorizontalArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#horizarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL="/reference/components/layout.html#VerticalArrangement";
Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#vertarrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL="/reference/components/layout.html#TableArrangement";Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL="/reference/components/layout.html#tablearrangeproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL="/reference/components/media.html#Camcorder";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL=
"/reference/components/media.html#camcorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL="/reference/components/media.html#camcorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL="/reference/components/media.html#camcordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL="/reference/components/media.html#Camera";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL="/reference/components/media.html#cameraproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL=
"/reference/components/media.html#cameraevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL="/reference/components/media.html#cameramethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL="/reference/components/media.html#ImagePicker";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL="/reference/components/media.html#imagepickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL="/reference/components/media.html#imagepickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL=
"/reference/components/media.html#imagepickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL="/reference/components/media.html#Player";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL="/reference/components/media.html#playerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL="/reference/components/media.html#playerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL="/reference/components/media.html#playermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL=
"/reference/components/media.html#Sound";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL="/reference/components/media.html#soundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL="/reference/components/media.html#soundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL="/reference/components/media.html#soundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL="/reference/components/media.html#SoundRecorder";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL=
"/reference/components/media.html#soundrecorderproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL="/reference/components/media.html#soundrecorderevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL="/reference/components/media.html#soundrecordermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL="/reference/components/media.html#SpeechRecognizer";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL="/reference/components/media.html#speechrecognizerproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL="/reference/components/media.html#speechrecognizerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL="/reference/components/media.html#speechrecognizermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL="/reference/components/media.html#TextToSpeech";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL="/reference/components/media.html#texttospeechproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL=
"/reference/components/media.html#texttospeechevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL="/reference/components/media.html#texttospeechmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL="/reference/components/media.html#VideoPlayer";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL="/reference/components/media.html#videoplayerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL="/reference/components/media.html#videoplayerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL="/reference/components/media.html#videoplayermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL="/reference/components/animation.html#Ball";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL="/reference/components/animation.html#ballproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL="/reference/components/animation.html#ballevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL="/reference/components/animation.html#ballmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL="/reference/components/animation.html#Canvas";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL="/reference/components/animation.html#canvasproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL="/reference/components/animation.html#canvasevents";Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL="/reference/components/animation.html#canvasmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL="/reference/components/animation.html#ImageSprite";
Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL="/reference/components/animation.html#imagespriteproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL="/reference/components/animation.html#imagespriteevents";Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL="/reference/components/animation.html#imagespritemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL="/reference/components/sensors.html#AccelerometerSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL=
"/reference/components/sensors.html#accelerometersensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#accelerometersensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL="/reference/components/sensors.html#accelerometersensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL="/reference/components/sensors.html#BarcodeScanner";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL=
"/reference/components/sensors.html#barcodescannerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL="/reference/components/sensors.html#barcodescannerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL="/reference/components/sensors.html#barcodescannermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL="/reference/components/sensors.html#LocationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#locationsensorproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL="/reference/components/sensors.html#locationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#locationsensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL="/reference/components/sensors.html#OrientationSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL="/reference/components/sensors.html#orientationsensorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL=
"/reference/components/sensors.html#orientationsensorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL="/reference/components/sensors.html#orientationsensormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL="/reference/components/social.html#ContactPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL="/reference/components/social.html#contactpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL="/reference/components/social.html#contactpickerevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL="/reference/components/social.html#contactpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL="/reference/components/social.html#EmailPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL="/reference/components/social.html#emailpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL="/reference/components/social.html#emailpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL=
"/reference/components/social.html#emailpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL="/reference/components/social.html#PhoneCall";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL="/reference/components/social.html#phonecallproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL="/reference/components/social.html#phonecallevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL="/reference/components/social.html#phonecallmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL=
"/reference/components/social.html#PhoneNumberPicker";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL="/reference/components/social.html#phonenumberpickerproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL="/reference/components/social.html#phonenumberpickerevents";Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL="/reference/components/social.html#phonenumberpickermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL="/reference/components/social.html#Texting";
Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL="/reference/components/social.html#textingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL="/reference/components/social.html#textingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL="/reference/components/social.html#textingmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL="/reference/components/social.html#Twitter";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL="/reference/components/social.html#twitterproperties";
Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL="/reference/components/social.html#twitterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL="/reference/components/social.html#twittermethods";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL="/reference/components/storage.html#FusiontablesControl";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL="/reference/components/storage.html#fusiontablescontrolproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL=
"/reference/components/storage.html#fusiontablescontrolevents";Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL="/reference/components/storage.html#fusiontablescontrolmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL="/reference/components/storage.html#TinyDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinydbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL="/reference/components/storage.html#tinydbevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL="/reference/components/storage.html#tinydbmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL="/reference/components/storage.html#TinyWebDB";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL="/reference/components/storage.html#tinywebdbproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL="/reference/components/storage.html#tinywebdbevents";Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL="/reference/components/storage.html#tinywebdbmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL="/reference/components/connectivity.html#ActivityStarter";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL="/reference/components/connectivity.html#activitystarterproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL="/reference/components/connectivity.html#activitystarterevents";Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL="/reference/components/connectivity.html#activitystartermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL="/reference/components/connectivity.html#BluetoothClient";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothclientevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothclientmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL="/reference/components/connectivity.html#BluetoothServer";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL="/reference/components/connectivity.html#bluetoothserverproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL="/reference/components/connectivity.html#bluetoothserverevents";Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL="/reference/components/connectivity.html#bluetoothservermethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL="/reference/components/connectivity.html#Web";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL="/reference/components/connectivity.html#webproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL="/reference/components/connectivity.html#webevents";Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL="/reference/components/connectivity.html#webmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL="/reference/components/legomindstorms.html#NxtDirectCommands";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdirectproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdirectmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL="/reference/components/legomindstorms.html#NxtColorSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtcolorproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL=
"/reference/components/legomindstorms.html#nxtcolorevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtcolormethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL="/reference/components/legomindstorms.html#NxtLightSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtlightproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtlightevents";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtlightmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL="/reference/components/legomindstorms.html#NxtSoundSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtsoundproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtsoundevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL=
"/reference/components/legomindstorms.html#nxtsoundmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL="/reference/components/legomindstorms.html#NxtTouchSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxttouchproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxttouchevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL="/reference/components/legomindstorms.html#nxttouchmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL="/reference/components/legomindstorms.html#NxtUltrasonicSensor";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicevents";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtultrasonicmethods";
Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL="/reference/components/legomindstorms.html#NxtDrive";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL="/reference/components/legomindstorms.html#nxtdriveproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL="/reference/components/legomindstorms.html#nxtdrivemethods";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL="/reference/components/internal.html#GameClient";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL=
"/reference/components/internal.html#gameclientproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL="/reference/components/internal.html#gameclientevents";Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL="/reference/components/internal.html#gameclientmethods";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL="/reference/components/internal.html#Voting";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL="/reference/components/internal.html#votingproperties";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL=
"/reference/components/internal.html#votingevents";Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL="/reference/components/internal.html#votingmethods";Blockly.Msg.SHOW_WARNINGS="경고 보이기";Blockly.Msg.HIDE_WARNINGS="경고 숨기기";Blockly.Msg.MISSING_SOCKETS_WARNINGS="블록의 모든 구멍을 채워야 합니다";Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS="이 블럭은 이벤트 블럭 또는 함수 정의에 연결되어야 합니다";Blockly.Msg.REPL_ERROR_FROM_COMPANION="컴패니언 오류";Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR="네트워크 연결 오류";Blockly.Msg.REPL_NETWORK_ERROR="네트워크 오류";
Blockly.Msg.REPL_NETWORK_ERROR_RESTART="컴패니언과 통신하는데 네트워크 오류가 발생했습니다.<br />컴패니언을 다시 시작하여 다시 연결해보세요";Blockly.Msg.REPL_OK="확인";Blockly.Msg.REPL_COMPANION_VERSION_CHECK="컴패니언 버전 확인";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE='컴패니언 앱의 버전이 오래되었습니다. 업데이트를 하려면 "확인"을 클릭하세요. Watch your ';Blockly.Msg.REPL_EMULATORS="에뮬레이터의";Blockly.Msg.REPL_DEVICES="기기의";Blockly.Msg.REPL_APPROVE_UPDATE=" screen because you will be asked to approve the update.";Blockly.Msg.REPL_NOT_NOW="나중에";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1=
"지금 사용 중인 컴패니언은 오래된 버전입니다. <br/><br/>이 버전의 앱 인벤터는 컴패니언 버전과 함께 사용되어야 합니다";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE="오래된 버전의 컴패니언을 사용 중입니다. 지금 당장 컴패니언을 업데이트 할 필요는 없지만 조만간 업데이트를 고려해야할 것입니다..";Blockly.Msg.REPL_DISMISS="거절하기";Blockly.Msg.REPL_SOFTWARE_UPDATE="소프트웨어 업데이트";Blockly.Msg.REPL_OK_LOWER="확인";Blockly.Msg.REPL_GOT_IT="알겠습니다";Blockly.Msg.REPL_UPDATE_INFO='업데이트가 여러분의 기기에 지금 설치되는 중입니다. 기기 (또는 에뮬레이터) 화면에서 소프트웨어 설치를 승인해주십시오.<br /><br />중요: 업데이트가 완료되면, "완료"를 선택하세요 ("열기"를 클릭하면 안됩니다). 그 다음 웹 브라우저의 앱 인벤터로 가서, "연결" 메뉴를 클릭하시고 "다시 연결하기"를 선택하세요. 그러면 기기가 다시 연결됩니다.';
Blockly.Msg.REPL_UNABLE_TO_UPDATE="기기/에뮬레이터로 업데이트를 보낼 수 없습니다";Blockly.Msg.REPL_UNABLE_TO_LOAD="앱 인벤터 서버에서 업데이트를 볼러올 수 없습니다";Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND="앱 인벤터 서버 (서버 응답 없음)에서 업데이트를 불러올 수 없습니다.";Blockly.Msg.REPL_NOW_DOWNLOADING="앱 인벤터 서버에서 업데이트를 다운로드 중입니다, 잠시만 기다려주세요";Blockly.Msg.REPL_RUNTIME_ERROR="런타임 오류";Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS="<br/><i>참고:</i>&nbsp;5초 동안은 다른 오류가 보고되지 않습니다.";Blockly.Msg.REPL_CONNECTING_USB_CABLE="USB 케이블로 연결 중";Blockly.Msg.REPL_STARTING_EMULATOR="안드로이드 에뮬레이터 시작 중<br/>잠시만 기다려주세요: 1~2분 정도 소요됩니다.";
Blockly.Msg.REPL_CONNECTING="연결 중…";Blockly.Msg.REPL_CANCEL="취소하기";Blockly.Msg.REPL_GIVE_UP="그만두기";Blockly.Msg.REPL_KEEP_TRYING="계속 시도하기";Blockly.Msg.REPL_CONNECTION_FAILURE1="연결 실패";Blockly.Msg.REPL_NO_START_EMULATOR="에뮬레이터에서는 MIT AI 컴패니언을 시작할 수 없습니다";Blockly.Msg.REPL_PLUGGED_IN_Q="꽂혀있나요?";Blockly.Msg.REPL_AI_NO_SEE_DEVICE="AI2가 기기를 찾지 못합니다. 케이블이 꽂혀있는지, 올바른 드라이버를 사용 중인지 확인해주세요.";Blockly.Msg.REPL_HELPER_Q="도움이 필요한가요?";Blockly.Msg.REPL_HELPER_NOT_RUNNING='ai스타터 도우미가 작동을 멈춘 것 같습니다<br /><a href="http://appinventor.mit.edu" target="_blank">도움이 필요한가요?</a>';
Blockly.Msg.REPL_USB_CONNECTED_WAIT="USB 연결됨, 모두 정상 작동하는지 확인하기 위해 ";Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING=" 초 기다리는 중.";Blockly.Msg.REPL_EMULATOR_STARTED="에뮬레이터 시작됨, 모두 정상 작동하는지 확인하기 위해 ";Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE="연결된 폰에서 컴패니언 앱을 시작합니다.";Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR="에뮬레이터에서 컴패니언 앱 시작합니다.";Blockly.Msg.REPL_COMPANION_STARTED_WAITING="컴패니언 시작 중, 모두 정상 작동하는지 확인하기 위해 ";Blockly.Msg.REPL_VERIFYING_COMPANION="실행된 컴패니언 확인 중....";Blockly.Msg.REPL_CONNECT_TO_COMPANION=
"컴패니언에 연결하기";Blockly.Msg.REPL_TRY_AGAIN1="MIT AI2 컴패니언에 연결 실패하였습니다, 다시 시도해주세요.";Blockly.Msg.REPL_YOUR_CODE_IS="여러분의 코드는";Blockly.Msg.REPL_DO_YOU_REALLY_Q="정말입니까?";Blockly.Msg.REPL_FACTORY_RESET='에뮬레이터를 "공장 초기화"상태로 돌려놓을 것입니다. 만약 이전에 에뮬레이터에서 컴패니언 앱을 업데이트 한 적이 있다면, 다시 업데이트를 해주어야 합니다.';Blockly.Msg.WARNING_DELETE_X_BLOCKS="모든 %1 개의 블록을 지우시겠습니까?";Blockly.Msg.GENERATE_YAIL="Yail 만들기";Blockly.Msg.DO_IT="바로 실행";Blockly.Msg.CAN_NOT_DO_IT="실행할 수 없습니다";Blockly.Msg.CONNECT_TO_DO_IT='"바로 실행"하려면 컴패니언 또는 에뮬레이터에 연결되어야 합니다.';
Blockly.Msg.COPY_TO_BACKPACK="백팩에 추가하기";Blockly.Msg.COPY_ALLBLOCKS="모든 블록을 백팩으로 복사하기";Blockly.Msg.BACKPACK_GET="백팩에 있는 모든 블록 붙여넣기";Blockly.Msg.BACKPACK_EMPTY="백팩 비우기";Blockly.Msg.BACKPACK_CONFIRM_EMPTY="백팩에 있는 모든 블록을 비우시겠습니까?";Blockly.Msg.BACKPACK_DOC_TITLE="백팩 정보";Blockly.Msg.BACKPACK_DOCUMENTATION='백팩은 블록 복사-붙여넣기를 도와주는 기능입니다. 현재 사용 중인 프로젝트 또는 스크린에서 블록을 복사하여 다른 프로젝트나 스크린에 붙여넣을 수 있습니다. 블록을 복사하려면, 원하는 블록을 드래그하여 백팩에 넣어주세요. 복사된 블록을 붙여넣으려면, 백팩 아이콘을 클릭한 다음 블록을 작업 공간으로 드래그하면 됩니다.</p><p>백팩안에 들어있는 내용들을 현재 접속된 앱 인벤터 세션 동안에만 유지됩니다. 만약 앱 인벤터를 종료하거나 웹 페이지를 다시 불러온다면 백팩은 다시 초기화됩니다. 즉 빈 가방이 되는거죠.</p><p>더 자세한 내용은 다음 문서를 참고하세요: </p><p><a href="http://ai2.appinventor.mit.edu/reference/other/backpack.html" target="_blank">http://ai2.appinventor.mit.edu/reference/other/backpack.html</a>'}};
Blockly.Msg.ko_kr.switch_language_to_korean.init();Blockly.Msg.sv={};
Blockly.Msg.sv.switch_language_to_swedish={category:"",helpUrl:"",init:function(){Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT="parvis uppslagning  nyckel %1 par %2 hittadesInte %3";Blockly.MSG_VARIABLE_CATEGORY="Variabler";Blockly.Msg.ADD_COMMENT="Lägg till kommentar";Blockly.Msg.EXPAND_BLOCK="Expandera block";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE="annars";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT='Delar upp texten i bitar med texten \'at\' som delningspunkt och ger en lista med resultat.  \nAtt dela upp "one,two,three,four" at "," (comma) ger listan "(one two three four)". \nAtt dela upp "one-potato,two-potato,three-potato,four" at "-potato" ger listan "(one two three four)".';Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT=
"text";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP="Returnerar värdet som skickas till den här skärmen när den öppnades, normalt av en annan skärm i en multiskärm-app. Om inget värde skickades, får man en tom text.";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE="objekt";Blockly.Msg.DELETE_BLOCK="Ta bort block";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP="Ger talet i decimalformat\nmed ett givet antal värdesiffror.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="medan";Blockly.Msg.LANG_COLOUR_PINK=
"rosa";Blockly.Msg.CONNECT_TO_DO_IT='Du måste vara uppkopplad mot Companion eller emulatorn för att använda "Gör det"';Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT="hämta";Blockly.Msg.LANG_MATH_TRIG_SIN="sin";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE="fortsätt med nästa iteration";Blockly.Msg.DISABLE_BLOCK="Stäng av block";Blockly.Msg.REPL_HELPER_Q="Hjälpare?";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT="ersätt all text %1 segment %2 ersättning %3";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN=
"när ";Blockly.Msg.LANG_COLOUR_CYAN="cyanblå";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT="stäng skärmen med värdet";Blockly.Msg.LANG_MATH_TRIG_ASIN="asin";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV="lista till kommaseparerad tabell";Blockly.Msg.REPL_NOW_DOWNLOADING="Vi laddar nu ner en uppdatering from App Inventor-servern. Vänta";Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP="anger ett numeriskt startvärde\nför slumptalsgeneratorn";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT=
"omvandla";Blockly.Msg.LANG_MATH_SINGLE_OP_EXP="e^";Blockly.Msg.LANG_TEXT_COMPARE_EQUAL=" =";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT="Ger kvadratroten av ett tal.";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT="text";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP="Lägger till objekt i slutet av en lista.";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX="index";Blockly.Msg.LANG_TEXT_COMPARE_GT=" >";Blockly.Msg.REPL_USB_CONNECTED_WAIT="USB ansluten. Väntar ";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES=
"lokala namn";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR="gör färg";Blockly.Msg.LANG_MATH_DIVIDE="÷";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP="Kör blocket inom 'gör' och returnerar en programsats. Användbart om en procedur behöver köras innan ett värde returneras till en variabel.";Blockly.Msg.COPY_ALLBLOCKS="Kopiera alla block till ryggsäcken";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST="vid (lista)";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT="global";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE=
"indata:";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND="hittadesInte";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP="Låter dig skapa variabler som bara är tillgängliga i blockets 'gör'-avsnitt.";Blockly.Msg.REPL_PLUGGED_IN_Q="Ansluten?";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP="";Blockly.Msg.HORIZONTAL_PARAMETERS="Ordna parametrar horisontellt";Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST="är en lista?";Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE="indata";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM=
"från";Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND="lägg till i lista";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX=" i intervallet";Blockly.MSG_NEW_VARIABLE_TITLE="Nytt variabelnamn:";Blockly.Msg.VERTICAL_PARAMETERS="Ordna parametrar vertikalt";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT="text";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN="resultat";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE="ersätt listelement";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY='Bryter upp den givna texten i en lista vid delningspunkterna som ges av \'vid\'\noch returnerar en lista med resultat. \nOm man delar upp listan "appleberry,banana,cherry,dogfood" med listan \'vid\'\nsatt till de två elementen komma och "rry" blir resultatet en lista med fyra\nelement: "(applebe banana che dogfood)".';
Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN="i";Blockly.Msg.DO_IT="Gör det";Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE="absolutbelopp";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT="text";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME="anrop utan retur";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT="text";Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP="Kör block i 'gör'-sektionen så länge testvillkoret är sant.";Blockly.Msg.BACKPACK_DOCUMENTATION='Ryggsäcken är en funktion för att klippa och klistra. Den låter dig kopiera block från ett projekt eller skärm   och att sen klistra in dem i ett annat projekt eller annan skärm.  För att kopiera kan du dra och släppa block i ryggsäcken. För att klistra in, klicka på ryggsäcksikonen och  dra och släpp block på arbetsytan.</p><p>Innehållet i ryggsäcken finns kvar under  en App Inventor-session. När du avslutar APp Inventor eller laddar om webbsidan i webbläsaren  så kommer ryggsäcken att återställas, dvs. tömmas.</p><p>Mer dokumentation och en \'gör så här\'-video hittar du på</p><p><a href="http://ai2.appinventor.mit.edu/reference/other/backpack.html" target="_blank">http://ai2.appinventor.mit.edu/reference/other/backpack.html</a>';
Blockly.Msg.LANG_MATH_TRIG_ATAN2="atan2";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX="anropa";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO="gör";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF="annars om";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN="resultat";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL="anropa";Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE="dela vid mellanslag";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV="lista från kommaseparerad rad";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE=
"x";Blockly.Msg.REPL_CONNECTION_FAILURE1="Anslutningsfel";Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY='Delar upp den givna texten i en lista med två element och delningspunkten är \nförsta stället i texten där något av element i \'vid\'-listan hittas. \n\nAtt dela upp "I love apples bananas apples grapes" med listan "(ba,ap)" ger \nen lista med två element där det första är "I lovet" och det andra är \n"ples bananas apples grapes."';Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE=
"öpnna en skärm till";Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING="sak";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP="Lägg till, ta bort eller ordna om sektioner för att konfigurera om det här listblocket.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE="Ger sant om det första talet är större\nän eller lika med det andra talet.";Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP='Räkna från ett startvärde till ett slutvärde.\nSätt vid varje uppräkning det aktuella räknarvärdet till\nvariabeln "%1" och utför sen några kommandon.';
Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP="Ger ett slumptal mellan 0 och 1.";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO="till";Blockly.Msg.LANG_VARIABLES_VARIABLE=" variabel";Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD="lista";Blockly.Msg.WARNING_DELETE_X_BLOCKS="Vill du verkligen radera alla %1 blocken?";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP="";Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM="element";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE=
"stäng skärmen";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL="Testar om textsträngen är identiska, dvs. har samma bokstäver\ni samma ordning. Detta skiljer från vanligt = i fallet när\ntextsträngarna är tal: 123 och 0123 är = med inte text =.";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND="Avrundar ett tal uppåt eller neråt.";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END="till";Blockly.Msg.LANG_COLOUR_ORANGE="orange";Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR="Startar Companion-appen i emulatorn.";
Blockly.Msg.LANG_MATH_COMPARE_LT="<";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS="Ger absolutbeloppet av ett tal.";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM="objekt";Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN="Välj ett element i rullistan.";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX="max";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD="grader till radianer";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP="Ger klartexten som skickades till skärmen när den startades av en annan app. Om ingen värde skickades, returneras den tomma texten. För multiskärm-appar ska 'hämta startvärde' användas istället för 'hämta starttext'";
Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM="för varje";Blockly.Msg.BACKPACK_DOC_TITLE="Ryggsäcksinfo";Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN="förena";Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP="Ger antalet bokstäver (inklusive mellanslag)}\ni den givna texten.";Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP="Lägg till, ta bort eller flytta om sektioner\nför att konfigurera det här om-blocket.";Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1="Du använder en för gammal Companion-app.<br/><br/>Den här versionen av App Inventor ska användas med Companion-version";
Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE="gör till stora";Blockly.Msg.LANG_MATH_ARITHMETIC_ADD="+";Blockly.Msg.REPL_COMPANION_VERSION_CHECK="Versionskontroll av Companion";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP="En procedure som ger ett värde som resultat.";Blockly.Msg.LANG_MATH_TRIG_ATAN2_X="x";Blockly.Msg.EXPAND_ALL="Expandera block";Blockly.MSG_CHANGE_VALUE_TITLE="Ändra värdet:";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP="Öppnar en ny skärm i en multiskärm-app.";Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP=
"Ger sant om textlängden är 0,\nannars falskt.";Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT="sätt";Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM="slumpmässigt bråk";Blockly.Msg.LANG_COLOUR_BLUE="blå";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="tills";Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET="hämta";Blockly.Msg.REPL_APPROVE_UPDATE=" skärm eftersom du kommer att bli ombedd att godkänna uppdateringen.";Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP="Ger en kopia av argumentet, en textsträng, där\neventuella mellanslag i början och slutet tagits bort.";
Blockly.Msg.REPL_EMULATORS="emulatorns";Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM="är tal?";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX="till ";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE="jämför texter";Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP="Rapportera talet som visas.";Blockly.Msg.LANG_TEXT_COMPARE_LT=" <";Blockly.Msg.LANG_LISTS_INPUT_LIST="lista";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP="Tar bort elementet på den givna platsen från listan.";
Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN="är i listan?";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING="Avrundar indata till det minsta\ntal som inte är mindre än indata.";Blockly.Msg.LANG_COLOUR_YELLOW="gult";Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR="Avrundar indata till det största\ntal som inte är större än indata.";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO="Ger resten vid heltalsdivision (mod).";Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM="sträng";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE=
"procedur";Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE="annars";Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP="Ger startposition för söktexten i texten,\ndär index 1 är början på texten. Ger 0 om söktexten\ninte finns i texten.";Blockly.Msg.SORT_W="Sorterar blocken efter storlek";Blockly.Msg.ENABLE_BLOCK="Aktivera blocket";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT="beräkna men strunta i";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD="Ger summan av två tal.";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT="index i listan  sak %1 lista %2";
Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING=" sekunder för att garantera att allt kör.";Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS="<br/><i>Obs!</i>&nbsp,Inga fel kommer att rapporteras de kommande 5 sekunderna.";Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT="inte";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE="procedur";Blockly.Msg.LANG_CATEGORY_CONTROLS="Kontroll";Blockly.Msg.LANG_COLOUR_MAGENTA="magenta";Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP="Ger sant om saken är ett element i listan och falskt om så inte är fallet.";
Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT="ersätt listelement  lista %1 index %2 ersättning %3";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_BIN="Tar ett positivt heltal i bas 10 och ger strängen som motsvarar talet i binärform";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_HEX_TO_DEC="hex till bas 10";Blockly.Msg.LANG_LOGIC_COMPARE_NEQ="≠";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME="namn";Blockly.MSG_NEW_VARIABLE="Ny variabel...";Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR="Ger sant om något indata är sant.";
Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP="";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS="innehåller";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT="ta bort listlelement  lista %1 index %2";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT="segment  text %1 start %2 längd %3";Blockly.Msg.LANG_LISTS_LENGTH_INPUT="listans längd lista %1";Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP="Testar om delen finns i texten.";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG="Ger gradtalet i intervallet\n[0, 360) som motsvarar argumentet, givet i radianer.";
Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX="index";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT="hämta 'plain start'-text";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST="lista";Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT="segment";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST=" lista";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX="för ";Blockly.Msg.LANG_MATH_TRIG_TAN="tan";Blockly.Msg.LANG_MATH_TRIG_ATAN="atan";Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO="till";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT=
"lokal";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO="gör";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="Utför några kommandon så länge ett värde är falskt.";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT="resultat";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG="radianer till grader";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT="välj listelement";Blockly.Msg.LANG_CATEGORY_TEXT="Text";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT="lägg till i listan  lista1 %1 lista2 %2";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR=
"dela färg";Blockly.Msg.LANG_CONTROLS_IF_MSG_IF="om";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP="Anropa en procedure med returvärde.";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND="avrunda";Blockly.Msg.REPL_DISMISS="Stäng";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP="Ersätter det n:te elementet i en lista.";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT="Talar om ifall text1 är lexikografiskt större än text 2.\nom en text är prefix till den andra, anses den kortare texten som mindre.\nStora bokstäver kommer före små bokstäver.";
Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR="element";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO="till";Blockly.Msg.LANG_COLOUR_RED="rött";Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO="till";Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD="lista";Blockly.Msg.REPL_KEEP_TRYING="Försök igen";Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST="gör en lista";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING="tak";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET="sätt ";Blockly.Msg.EXTERNAL_INPUTS="Externa indata";
Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS="par";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE="öppna en ny skärm till med startvärde";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_HEX_TO_DEC="Tar en sträng som innehåller ett hexadecimalt tal och ger strängen som motsvarar talet i bas 10.";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN="Ger sinus av den givna vinkeln i grader.";Blockly.Msg.REPL_GIVE_UP="Ge upp";Blockly.Msg.LANG_CATEGORY_LOGIC="Logik";Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST=
"lista";Blockly.Msg.LANG_LISTS_INSERT_INPUT="infoga listelement  lista %1 index %2 element %3";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_HEX="Tar ett positivt heltal i basen 10 och ger strängen som motsvarar talet i hexadecimal form.";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START="från";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK="hoppa ur";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP="Läser en text som en kommaseparerat rad (CSV) för att få en lista med fält. Textraden får inte innehålla oskyddad radbrytningar inuti fält (i praktiken är det flera rader). Textraden får sluta på ett newline-tecken (10 decimalt) eller CRLF (13 10 decimalt).";
Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER="Ger det första talet upphöjt till\ndet andra talet.";Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT="text";Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET="sätt";Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO="gör";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT="text";Blockly.Msg.LANG_COLOUR_GRAY="grått";Blockly.Msg.REPL_NETWORK_ERROR_RESTART="Nätverksfel vid kommunikation med Companion.<br />Pröva att starta om Companion och ansluta igen";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO=
"gör";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM="välj ett slumpmässigt element";Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT="Testar om text1 är lexikografiskt mindre än text2.\nom en text är prefix till den andra, anses den kortare\ntexten som mindre. stora bokstäver går före små bokstäver. ";Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT="lägg till text";Blockly.Msg.REPL_CANCEL="Avbryt";Blockly.Msg.LANG_CATEGORY_MATH="Matte";Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE_TOOLTIP="Ger text ungefär som ett textblock. Skillnaden är att \ntexten inte är lätt att upptäcka om man studerar appens APK-fil. Används när man skapar appar \nsom ska distribueras och som innehåller känslig information, t.ex. API-nycklar. \nVarning: detta ger väldigt låg säkerhet mot skickliga motståndare.";
Blockly.Msg.SORT_C="Sortera block efter kategori";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO="gör";Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP="Ger elementet på position index i listan.";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING="sak";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH="längden av listan";Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME="namn";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE="formattera som decimalt";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="Utför några kommandon så länge ett värde är sant.";
Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE="skapa tom lista";Blockly.Msg.LANG_MATH_ARITHMETIC_POWER="^";Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST="lista";Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP="Kör det kopplade kodblocket och struntar i returvärdet (om det finns). Användbart om man behöver anropa en procedur med ett returvärde som man inte behöver.";Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP="Skapa en lista med valfritt antal element";Blockly.ERROR_DUPLICATE_EVENT_HANDLER="Detta är en upprepning av händelsehanteraren för den här komponenten.";
Blockly.Msg.LANG_MATH_TRIG_COS="cos";Blockly.Msg.BACKPACK_CONFIRM_EMPTY="Vill du verkligen tömma ryggsäcken?";Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP="Ger sant om listan är tom.";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME="retur från anrop";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN="Ger naturliga logaritmen av talet, alltså logaritmen i bas e (2,71828...)";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE="Ger en kopia av argumentet, en textsträng, omvandlat till stora bokstäver.";
Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP="Lägg till, ta bort eller flytta om sektioner för att konfigurera om det här listblocket.";Blockly.Msg.LANG_COLOUR_DARK_GRAY="mörkgrått";Blockly.Msg.ARRANGE_H="Ordna block horisontellt";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF="annars om";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP="Stänger den aktuella skärm och skickar ett resultat till skärmen som öppnade den.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4="Om det första värdet är sant så utför det första kommandoblocket.\nAnnars om den andra värdet är sant så utför det andra kommandoblocket.\nOm inget av värdena är sanna, utför det sista kommandoblocket.";
Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR="Fel på nätverksanslutningen";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX=" i listan";Blockly.Msg.LANG_LISTS_IS_IN_INPUT="med i listan? sak %1 lista %2";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL="anropa ";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR="x";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_INPUT_NUM="är bas 10?";Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP="En lista med fyra element, vart och ett i intervallet 0 till 255, som motsvarar komponenterna rött, grönt, blått och alfa.";
Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE="beräkna men släng resultatet";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST="lista";Blockly.Msg.CAN_NOT_DO_IT="Kan inte utföras";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME="initiera lokal i 'gör'";Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE="“";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="Hoppa över resten av loopen och\nfortsätt med nästa iteration.";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM="från";Blockly.Msg.COPY_TO_BACKPACK=
"Lägg i ryggsäcken";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME="skärmnamn";Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY="är tom";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY="dela vid varje";Blockly.Msg.EXPORT_IMAGE="Hämta block som bild";Blockly.Msg.REPL_GOT_IT="Fick det";Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP="En färg med de givna komponenterna av rött, grönt, blue och eventuellt alfa";Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY="är listan tom?";Blockly.Msg.LANG_MATH_SINGLE_OP_NEG=
"neg";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME="skärmnamn";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET="sätt ";Blockly.Msg.INLINE_INPUTS="inbakade inmatningsfält";Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP="Sätt in ett element i listan på angiven plats.";Blockly.Msg.REPL_CONNECTING="Ansluter ...";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP="Ger värdet som är kopplat till nyckeln i listan med par";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG="Ger talets negation";
Blockly.Msg.REPL_UNABLE_TO_LOAD="Kan inte ladda uppdatering från App Inventor-servern";Blockly.Msg.LANG_LISTS_COPY_TOOLTIP="Kopierar en lista och också alla dellistor i den";Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE="Ger logiska värdet 'sant'.";Blockly.Msg.LANG_TEXT_TEXT_OBSFUCATE="Förvanskad text";Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP="En textsträng.";Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT="välj listelement  lista %1 index %2";Blockly.Msg.REPL_DO_YOU_REALLY_Q="Är du säker?";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP=
"Låter dig skapa variabler som bara kan nås i det här blockets retur-avsnitt.";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT="initiera global variabel";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_INPUT_NUM="är hexadecimalt?";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT="Ger kvoten.";Blockly.Msg.LANG_MATH_IS_A_BINARY_INPUT_NUM="är binärt?";Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP="Kör blocket i 'gör'-sektionen för varje element i listan. Använd det givna variabelnamnet för att komma åt det aktuella listelementet.";
Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT="ersättning";Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE="”";Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN="så";Blockly.Msg.LANG_CONTROLS_WHILE_TITLE="medan";Blockly.Msg.LANG_MATH_COMPARE_GT=">";Blockly.Msg.LANG_MATH_IS_A_DECIMAL_TOOLTIP="Testar om något är en sträng som motsvarar ett positivt heltal i basen 10.";Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER="tal";Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP="Lägger till ett element i listan.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO=
"i";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT="Ger sant om det första talet är mindre\nän det andra talet.";Blockly.Msg.LANG_COLOUR_BLACK="svart";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP="Stänger aktuella skärmen och returnerar text till appen som öppnade den.   Kommandot är till för att returnera text till aktiviteter utanför App Inventor, inte App Inventor-skärmar. För App Inventor-skärmar som t.ex. flerskärmsappar används 'Stäng skärm med värde', inte 'Stäng skärm med klartext'.";
Blockly.Msg.REPL_COMPANION_OUT_OF_DATE='Din Companion-app är gammal. Klicka på "OK" för att starta uppdateringen. Följ ';Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND="Ge sant om alla indata är sanna.";Blockly.Msg.REPL_NO_START_EMULATOR="We kunde inte starta MIT AI Companion i emulatorn.";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="Hoppar ut ur den omkringliggande loopen.";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ="Ger sant om värdena är lika.";Blockly.Msg.LANG_LOGIC_OPERATION_AND="och";
Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST='Delar den givna texten i två delar beroende på platsen för första förekomsten av \ntexten \'vid\' som delningspunkt och ger en lista med två element som innehåller biten \nföre delningspunkten och biten efter delningspunkten. \nAtt dela upp "apple,banana,cherry,dogfood" med ett komma som delningspunkt \nger en lista med två element: den första är texten "apple" och den andra är texten \n"banana,cherry,dogfood". \nTänk på att kommat efter "apple" inte är med i resultatet \neftersom det är delningspunkten.';
Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT="gör/resultat";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_BIN_TO_DEC="binärt till bas 10";Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP="Lägg till ett sista heltäckande villkor till om-blocket.";Blockly.Msg.GENERATE_YAIL="Generera Yail";Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME="logiskt lika med";Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE="Ger en kopia av argumentet (en textsträng) omvandlad till små bokstäver.";Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH=
"längd";Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING="sak";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT="kvoten av";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ="Ger sant om talen är olika.";Blockly.Msg.DELETE_X_BLOCKS="Ta bort %1 block";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO="modulo";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT="börjar på   text %1 del %2";Blockly.Msg.BACKPACK_EMPTY="Töm ryggsäcken";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST="i listan";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP=
"Kör blocket inom 'gör' och ger som resultat ett kommando. Användar om du behöver köra en procedure innan ett variabelvärde sätts.";Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP="Utför blocket i 'do'-sektionen för varje talvärde i intervallet från start till slut och stegar värdet varje gång. Använd det givna variabelnamnet för att komma åt det aktuella värdet.";Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE="ta bort listelement";Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE="Startar Companion-appen på den anslutna telefonen.";
Blockly.Msg.ARRANGE_S="Ordna block diagonalt";Blockly.ERROR_COMPONENT_DOES_NOT_EXIST="Komponenten finns inte";Blockly.Msg.LANG_MATH_COMPARE_LTE="≤";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT="innehåller  text %1 del %2";Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN="min";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT="formattera som decimaltal %1 decimalantal %2";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST="";Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP="";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL="anropa ";
Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN="Ger tangens av den givna vinkeln i grader.";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO="till";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME="skärmnamn";Blockly.Msg.HELP="Hjälp";Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION="index i listan";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE="stäng applikation";Blockly.Msg.LANG_COLOUR_GREEN="grönt";Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF="Markera procedur";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE=
"hämta startvärde";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP="av loopen";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX="anropa ";Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE="läs starttext som klartext";Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="Anropa en procedur utan returvärde.";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV="lista från csv-tabell";Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST="infoga listelement";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST=
"lista";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1="lista1";Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2="lista2";Blockly.Msg.REPL_UPDATE_INFO='Uppdateringen installeras nu på din enhet. Kolla enhetens (eller emulatorns) skärm och godkänn programinstallationen när du blir ombedd till det.<br /><br />VIKTIGT: När uppdateringen är klar, välj "KLAR" (klicka inte på "Öppna"). Gå sen till App Inventor i din webbläsare, klicka på "Connect"-menyn och välj "Reset Connection". Koppla sedan in enheten igen.';
Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE="Ger sant om det första talet är mindre\nän eller lika med det andra talet.";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT="stäng skärm med klartext";Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT="medan";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY="nyckel";Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH="skapa text med";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP="Tolkar listan som en tabellrad och ger ett kommauppdelat textvärde (CSV) som utgör raden. Varje element i listan anses vara ett fält och omges av dubbla citattecken i den resulterande CSV-texten. Element skiljs åt med kommatecken. Den returnerade radens text har inget radslutstecken i slutet.";
Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP="Lägger ihop alla indata till en enda textsträng.\nOm indata saknas blir den en tom text.";Blockly.Msg.LANG_COLOUR_WHITE="vitt";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE="Ger kvoten av de två talen.";Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT="lägg till element i listan list %1 element %2";Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE="falskt";Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX="index";Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP="Tolkar en text som en tabell i CSV-format (kommaseparerade värden) och ger en lista med rader där varje rad är en lista med fält. Rader kan skiljas åt med tecknet newline (n) eller CRLF (rn).";
Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN="annars";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP="Öppnar en skärm i en flerskärmsapp och skickar startvärde till den skärmen.";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN="Ger vinkeln i intervallet (-90,+90]\ngrader med det givna sinusvärdet.";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT="av komponten";Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM="slumpa sätt startvärde";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO=
"gör";Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS="slå upp parvis";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT="lokal";Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE="textbit";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT="börjar på";Blockly.Msg.REPL_NOT_NOW="Inte nu";Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE="textbit";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT="för komponenten";Blockly.Msg.HIDE_WARNINGS="Göm varningar";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_HEX=
"bas 10 till hex";Blockly.Msg.REPL_CONNECT_TO_COMPANION="Anslut till Companion-appen";Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP="Klicka i kvadraten för att välja en färg.";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO=" till";Blockly.Msg.REPL_SOFTWARE_UPDATE="Programuppdatering";Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST="lista";Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP="Om testvillkoret är sant får man tillbaks resultet av att beräkna uttrycket i facket 'så-returnera', annars får man resultatet av att beräkna uttrycket i facket 'annars-returnera'. Högst ett av uttrycken i facken kommer att beräknas.";
Blockly.MSG_RENAME_VARIABLE_TITLE='Döp om alla "%1" variabler till:';Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE="Ger logiska värdet falskt.";Blockly.Msg.REPL_TRY_AGAIN1="Kunde inte ansluta till MIT AI2 Companion; försök igen.";Blockly.Msg.REPL_VERIFYING_COMPANION="Kontrollerar att Companionen startade ...";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE="startvärde";Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP="Hittar sakens position i listan. Om den inte finns i listan, ges 0.";
Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST="lista";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT="text";Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="Varning:\nDet här blocket får bara\nanvändas i en slinga.";Blockly.Msg.REPL_AI_NO_SEE_DEVICE="AI2 ser inte din enhet; kontrollera att kabeln är inkopplad och att drivrutinerna är rätt.";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX="index";Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD="Ger radianvärdet i intervallet\n[-π, +π) som motsvarande argumentet i grader.";
Blockly.Msg.REPL_STARTING_EMULATOR="Startar Android-emulatorn<br/>.Vänta. Detta kan ta ett par minuter";Blockly.Msg.REPL_RUNTIME_ERROR="Körningsfel";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT="öppna skärm";Blockly.Msg.REPL_FACTORY_RESET='Försöker återställa din emulator till sitt "fabriks"-läge. Om du tidigare har uppdaterad Companion-appen som är installerad i Emulatorn kommer du förmodligen att behöva göra om det.';Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE="element";Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE=
"om";Blockly.Msg.LANG_CATEGORY_LISTS="Listor";Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT="Ger sant om det första talet är större\nän det andra talet.";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT="stäng applikationen";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT="läs startvärde";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT="stäng skärmen";Blockly.Msg.REMOVE_COMMENT="Ta bort kommentar";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="procedur";Blockly.Msg.REPL_OK_LOWER=
"Ok";Blockly.Msg.LANG_MATH_SINGLE_OP_LN="log";Blockly.Msg.LANG_MATH_IS_A_BINARY_TOOLTIP="Testar om något är en sträng som motsvarar ett binärt tal.";Blockly.Msg.REPL_UNABLE_TO_UPDATE="Kan inte skicka uppdatering till enhet/emulator";Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST="lista";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO="till";Blockly.Msg.LANG_MATH_COMPARE_NEQ="≠";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP="med";Blockly.Msg.LANG_MATH_COMPARE_GTE="≥";Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL=
"anropa ";Blockly.Msg.LANG_MATH_TRIG_ACOS="acos";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN="Ger vinkeln i intervallet (-90, +90)\ngrader med det givna tan-värdet.";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE="till";Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS="-";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN="resultat";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1="Om värdet är sant så utför några kommandon.";Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3="Om det första värdet är sant så utför det första kommandoblocket.\nAnnars om det andra värdet är sant så utför det andra kommandoblocket.";
Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2="Om värdet är sant så utför det första kommandoblocket.\nAnnars utför det andra kommandoblocket.";Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR="golv";Blockly.Msg.LANG_TEXT_APPEND_TO="till";Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="Lägg till ett villkor till om-blocket.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT="upprepa";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH="räkna med";Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP="Skapar en global variabel och ger den värdet av de kopplade blocken.";
Blockly.Msg.CLEAR_DO_IT_ERROR="Rensa fel";Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV="lista till CSV-rad";Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP="Ger e (2,71828...) upphöjt till ett tal.";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME="namn";Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY="*";Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP="Stänger alla skärmar i den här appen och stoppar den.";Blockly.Msg.MISSING_SOCKETS_WARNINGS="Du behöver sätta block i alla positioner.";Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE=
"/";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP="Stäng aktuell skärm";Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP="Tolkar listan som en tabell ordnad radvis och ger en kommauppdelad text (CSV) som motsvarar tabellen. Varje element i listan ska i sig vara en listan som motsvarar raden i CSV-tabellen. Varje element i radlistan ses som ett fält och omges av dubbelt citattecken i den resulterande CSV-texten. I den returnerade texten avskiljs radelement med komma och rader avskiljs med CRLF (rn).";
Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE="stäng skärm med värde";Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP="Dela upp texten i delar åtskilda av mellanslag.";Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP="Testar om något är ett tal.";Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP="Testar om något är en lista.";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS="Ger vinkeln i intervallet [0, 180)\ngrader med det givna cosinus-värdet.";Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM="slumpheltal";Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION=
"Det här blocket får inte finnas i en definition";Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER="Ger resten vid division.";Blockly.Msg.REPL_CONNECTING_USB_CABLE="Ansluter via USB-kabel";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES="decimalantal";Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO="gör";Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT="öppna skärm med värdet";Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP="Lägger till alla element i lista2 i slutet av lista1. Efter tilläggning kommer lista1 att innehålla alla de nya elementen men lista2 är oförändrad.";
Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE="Du använder en gammal Companion. Du behöver uppdatera MIT AI2 Companion snarast. Om du har valt autouppdatering i Play Store, kommer uppdateringen att hända av sig själv inom kort.";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS="Ger cosinus av den givna vinkeln i grader.";Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT="segment";Blockly.Msg.BACKPACK_GET="Klistra in alla block från ryggsäcken";Blockly.MSG_PROCEDURE_CATEGORY="Procedurer";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH=
"längd";Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO=" till";Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY="kopiera lista";Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP="Räknar antalet element i en lista.";Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP="Ger variabeln värde.";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO="gör";Blockly.Msg.LANG_TEXT_APPEND_VARIABLE="element";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY="Ger produkten av de två talen.";Blockly.Msg.REPL_OK="OK";Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN=
"resultat";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX="för ";Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y="y";Blockly.Msg.LANG_PROCEDURES_CALLRETURN_PROCEDURE="procedur";Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DO="gör";Blockly.Msg.REPL_HELPER_NOT_RUNNING='Hjälpappen aiStarter verkar inte vara igång<br /><a href="http://appinventor.mit.edu" target="_blank">Behöver du hjälp?</a>';Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP="Plockar ut ett segment av given längd från den givna texten\nmed början från den givna texten och givna positionen. Position 1\nanger början av texten.";
Blockly.Msg.LANG_LOGIC_OPERATION_OR="eller";Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS="Blocket behöver kopplas till ett händelseblock eller en procedurdefinition";Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS="Ger skillnaden mellan två tal.";Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP='Lägger till en text till variabeln "%1".';Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL="ersätt alla";Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST="testa";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX="till ";Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM=
"ansa";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR="tal";Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE="startvärde";Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM="tal";Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2="Ger vinkeln i intervallet (-180, +180]\ngrader med de givna rektangulära koodinaterna.";Blockly.Msg.REPL_YOUR_CODE_IS="Din kod är";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT="dela upp";Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF="om";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO=
"gör";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME="initiera lokal variabel vid retur";Blockly.Msg.REPL_EMULATOR_STARTED="Startat emulatorn; väntar ";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST="dela vid första";Blockly.Msg.LANG_COLOUR_LIGHT_GRAY="ljusgrått";Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1="Kör blocken i 'gör'-sektionen så länge testet är sant.";Blockly.Msg.DUPLICATE_BLOCK="Duplicera";Blockly.Msg.SORT_H="Sortera block efter storlek";Blockly.Msg.ARRANGE_V=
"Ordna block vertikalt";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE="till";Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT="slumptal från %1 till %2";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ='Testar om två saker är lika. \nDe saker som jämförs kan vara vilka saker som helst, inte bara tal. \nTal anses vara lika med sitt utskrivna format (strängformat) \noch t.ex. är talet 0 lika med texten "0". Dessutom är två strängar \nsom motsvarar tal lika om talen är lika. T.ex. är "1" lika med "01".\n';Blockly.Msg.LANG_LOGIC_COMPARE_EQ=
"=";Blockly.MSG_RENAME_VARIABLE="Döp om variabel ...";Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP="Ger ett slumpmässigt heltal mellan den övre och\nundre gränsen. Gränserna huggs av om nödvändigt så att\nde är mindre än 2**30.";Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE="sant";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM="för varje";Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP="Välj ett slumpmässigt element från listan.";Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT="ersättning";Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE=
"stäng skärm med klartext";Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND="Går inte att ladda en uppdatering från App Inventor-servern (servern svarar inte)";Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START="starta";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE="gör resultat";Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP="En procedur som inte returnerar något värde,";Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_TOOLTIP="Testar om något är en sträng som motsvarar ett hexadecimalt tal.";Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP=
"Ger en ny text som fås genom att byta alla förekomster\nav segmentet med utbytestexten.";Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP="Sätter den här variabeln till indatavärdet.";Blockly.Msg.REPL_ERROR_FROM_COMPANION="Fel från Companion-appen";Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ="Ger sant om indata inte är lika med varann.";Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT="av komponenten";Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT="gör/resultat";Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP=
"Lägg till ett element i listan.";Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE="små bokstäver";Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT="för element i listan";Blockly.Msg.COLLAPSE_ALL="Fäll ihop block";Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING="Varning:\nDen här proceduren har\ndubbletter i indata.";Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT="om";Blockly.Msg.REPL_NETWORK_ERROR="Nätverksfel";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TITLE_CONVERT="omvandla tal";Blockly.Msg.COLLAPSE_BLOCK=
"Fäll ihop block";Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD="lägg till element i listan";Blockly.Msg.REPL_COMPANION_STARTED_WAITING="Companion startar; väntar ";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_BIN_TO_DEC="Tar en sträng som innehåller ett tal i binär form och ger en sträng som innehåller talet i basen 10.";Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP="Ger sant om indata är falskt.\nGer falskt om indata är sant.";Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER="resten vid heltalsdivision";Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY=
"dela vid första av";Blockly.Msg.SHOW_WARNINGS="Visa varningar";Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_BIN="bas 10 till binärt";Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT="initiera lokal variabel";Blockly.Msg.REPL_DEVICES="enhetens";Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN="så";Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT="vid";Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT="för tal i intervallet";Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT="kvadratrot";Blockly.Msg.LANG_MATH_COMPARE_EQ=
"="}};Blockly.Msg.sv.switch_language_to_swedish.init();/*

 @fileoverview Visual blocks editor for App Inventor
 Set of drawers for holding factory blocks (blocks that create
 other blocks when dragged onto the workspace). The set of drawers
 includes the built-in drawers that we get from the blocks language, as
 well as a drawer per component instance that was added to this workspace.

 @author mckinney@mit.edu (Andrew F. McKinney)
 @author Sharon Perl (sharon@google.com)
*/
Blockly.Drawer={};Blockly.Drawer.createDom=function(){Blockly.Drawer.flyout_=new Blockly.Flyout;var a=Blockly.Drawer.flyout_.createDom();Blockly.svg.insertBefore(a,Blockly.mainWorkspace.svgGroup_.nextSibling)};Blockly.Drawer.init=function(){Blockly.Drawer.flyout_.init(Blockly.mainWorkspace,!0);for(var a in Blockly.DrawerInit)Blockly.DrawerInit[a]();Blockly.Drawer.languageTree=Blockly.Drawer.buildTree_()};Blockly.Drawer.PREFIX_="cat_";
Blockly.Drawer.buildTree_=function(){var a={},b;for(b in Blockly.Blocks){var c=Blockly.Blocks[b];c.category&&(c=Blockly.Drawer.PREFIX_+window.encodeURI(c.category),c in a?a[c].push(b):a[c]=[b])}return a};
Blockly.Drawer.showBuiltin=function(a){var a=Blockly.Drawer.PREFIX_+a,b=Blockly.Drawer.languageTree[a];if("cat_Procedures"==a){for(var c=[],d=0;d<b.length;d++)!("procedures_callnoreturn"==b[d]&&JSON.stringify(Blockly.AIProcedure.getProcedureNames(!1))==JSON.stringify([Blockly.FieldProcedure.defaultValue]))&&!("procedures_callreturn"==b[d]&&JSON.stringify(Blockly.AIProcedure.getProcedureNames(!0))==JSON.stringify([Blockly.FieldProcedure.defaultValue]))&&c.push(b[d]);b=c}if(!b)throw"no such drawer: "+
a;a=Blockly.Drawer.blockListToXMLArray(b);Blockly.Toolbox.flyout_.show(a)};Blockly.Drawer.showComponent=function(a){Blockly.ComponentInstances[a]?(Blockly.Drawer.flyout_.hide(),a=Blockly.Drawer.instanceNameToXMLArray(a),Blockly.Drawer.flyout_.show(a)):console.log("Got call to Blockly.Drawer.showComponent("+a+") - unknown component name")};
Blockly.Drawer.showGeneric=function(a){Blockly.ComponentTypes[a]?(Blockly.Drawer.flyout_.hide(),a=Blockly.Drawer.componentTypeToXMLArray(a),Blockly.Drawer.flyout_.show(a)):console.log("Got call to Blockly.Drawer.showGeneric("+a+") - unknown component type name")};Blockly.Drawer.hide=function(){Blockly.Drawer.flyout_.hide()};Blockly.Drawer.isShowing=function(){return Blockly.Drawer.flyout_.isVisible()};
Blockly.Drawer.blockListToXMLArray=function(a){for(var b=[],c=0;c<a.length;c++)b=b.concat(Blockly.Drawer.blockTypeToXMLArray(a[c],null));return b};
Blockly.Drawer.instanceNameToXMLArray=function(a){for(var b=[],c=Blockly.Component.instanceNameToTypeName(a),d,e=Blockly.ComponentTypes[c].componentInfo.events,f=0;f<e.length;f++)d={component_type:c,instance_name:a,event_name:e[f].name},b=b.concat(Blockly.Drawer.blockTypeToXMLArray("component_event",d));e=Blockly.ComponentTypes[c].componentInfo.methods;for(f=0;f<e.length;f++)d={component_type:c,instance_name:a,method_name:e[f].name,is_generic:"false"},b=b.concat(Blockly.Drawer.blockTypeToXMLArray("component_method",
d));e=Blockly.ComponentTypes[c].componentInfo.blockProperties;for(f=0;f<e.length;f++){if("read-write"==e[f].rw||"read-only"==e[f].rw)d={set_or_get:"get",component_type:c,instance_name:a,property_name:e[f].name,is_generic:"false"},b=b.concat(Blockly.Drawer.blockTypeToXMLArray("component_set_get",d));if("read-write"==e[f].rw||"write-only"==e[f].rw)d={set_or_get:"set",component_type:c,instance_name:a,property_name:e[f].name,is_generic:"false"},b=b.concat(Blockly.Drawer.blockTypeToXMLArray("component_set_get",
d))}d={component_type:c,instance_name:a};return b=b.concat(Blockly.Drawer.blockTypeToXMLArray("component_component_block",d))};
Blockly.Drawer.componentTypeToXMLArray=function(a){for(var b=[],c,d=Blockly.ComponentTypes[a].componentInfo.methods,e=0;e<d.length;e++)c={component_type:a,method_name:d[e].name,is_generic:"true"},b=b.concat(Blockly.Drawer.blockTypeToXMLArray("component_method",c));d=Blockly.ComponentTypes[a].componentInfo.blockProperties;for(e=0;e<d.length;e++){if("read-write"==d[e].rw||"read-only"==d[e].rw)c={set_or_get:"get",component_type:a,property_name:d[e].name,is_generic:"true"},b=b.concat(Blockly.Drawer.blockTypeToXMLArray("component_set_get",
c));if("read-write"==d[e].rw||"write-only"==d[e].rw)c={set_or_get:"set",component_type:a,property_name:d[e].name,is_generic:"true"},b=b.concat(Blockly.Drawer.blockTypeToXMLArray("component_set_get",c))}return b};
Blockly.Drawer.blockTypeToXMLArray=function(a,b){var c=Blockly.Drawer.getDefaultXMLString(a,b);null==c&&("procedures_callnoreturn"==a||"procedures_callreturn"==a?c=Blockly.Drawer.procedureCallersXMLString("procedures_callreturn"==a):(c='<xml><block type="'+a+'">',b&&(c+=Blockly.Drawer.mutatorAttributesToXMLString(b)),c+="</block></xml>"));for(var d=[],c=Blockly.Xml.textToDom(c),c=goog.dom.getChildren(c),e=0;e<c.length;e++)d.push(c[e]);return d};
Blockly.Drawer.mutatorAttributesToXMLString=function(a){var b="<mutation ",c;for(c in a)b+=c+'="'+a[c]+'" ';return b+"></mutation>"};Blockly.Drawer.procedureCallersXMLString=function(a){var b="<xml>",a=Blockly.AIProcedure.getProcedureDeclarationBlocks(a);a.sort(Blockly.Drawer.compareDeclarationsByName);for(var c=0;c<a.length;c++)b+=Blockly.Drawer.procedureCallerBlockString(a[c]);return b+"</xml>"};
Blockly.Drawer.compareDeclarationsByName=function(a,b){var c=a.getFieldValue("NAME").toLocaleLowerCase(),d=b.getFieldValue("NAME").toLocaleLowerCase();return c.localeCompare(d)};
Blockly.Drawer.procedureCallerBlockString=function(a){var b='<block type="'+("procedures_defreturn"==a.type?"procedures_callreturn":"procedures_callnoreturn")+'" inline="false">',c=a.getFieldValue("NAME"),b=b+('<title name="PROCNAME">'+c+"</title>"),a=a.mutationToDom();a.setAttribute("name",c);c=Blockly.Xml.domToText(a);return b=b+c+"</block>"};
Blockly.Drawer.getDefaultXMLString=function(a,b){if(null==Blockly.Drawer.defaultBlockXMLStrings[a])return null;if(null!=Blockly.Drawer.defaultBlockXMLStrings[a].xmlString)return Blockly.Drawer.defaultBlockXMLStrings[a].xmlString;if(null!=Blockly.Drawer.defaultBlockXMLStrings[a].length){for(var c=Blockly.Drawer.defaultBlockXMLStrings[a],d,e,f=0;f<c.length;f++)if(d=c[f].matchingMutatorAttributes){e=!0;for(var g in d)if(b[g]!=d[g]){e=!1;break}if(e)return c[f].mutatorXMLStringFunction(b)}return null}};
Blockly.Drawer.defaultBlockXMLStrings={controls_forRange:{xmlString:'<xml><block type="controls_forRange"><value name="START"><block type="math_number"><title name="NUM">1</title></block></value><value name="END"><block type="math_number"><title name="NUM">5</title></block></value><value name="STEP"><block type="math_number"><title name="NUM">1</title></block></value></block></xml>'},math_random_int:{xmlString:'<xml><block type="math_random_int"><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">100</title></block></value></block></xml>'},
color_make_color:{xmlString:'<xml><block type="color_make_color"><value name="COLORLIST"><block type="lists_create_with" inline="false"><mutation items="3"></mutation><value name="ADD0"><block type="math_number"><title name="NUM">255</title></block></value><value name="ADD1"><block type="math_number"><title name="NUM">0</title></block></value><value name="ADD2"><block type="math_number"><title name="NUM">0</title></block></value></block></value></block></xml>'},lists_create_with:{xmlString:'<xml><block type="lists_create_with"><mutation items="0"></mutation></block><block type="lists_create_with"><mutation items="2"></mutation></block></xml>'},
component_method:[{matchingMutatorAttributes:{component_type:"TinyDB",method_name:"GetValue"},mutatorXMLStringFunction:function(a){return'<xml><block type="component_method">'+Blockly.Drawer.mutatorAttributesToXMLString(a)+'<value name="ARG1"><block type="text"><title name="TEXT"></title></block></value></block></xml>'}},{matchingMutatorAttributes:{component_type:"Notifier",method_name:"ShowTextDialog"},mutatorXMLStringFunction:function(a){return'<xml><block type="component_method">'+Blockly.Drawer.mutatorAttributesToXMLString(a)+
'<value name="ARG2"><block type="logic_boolean"><title name="BOOL">TRUE</title></block></value></block></xml>'}},{matchingMutatorAttributes:{component_type:"Notifier",method_name:"ShowChooseDialog"},mutatorXMLStringFunction:function(a){return'<xml><block type="component_method">'+Blockly.Drawer.mutatorAttributesToXMLString(a)+'<value name="ARG4"><block type="logic_boolean"><title name="BOOL">TRUE</title></block></value></block></xml>'}}]};/*

 @fileoverview Visual blocks editor for MIT App Inventor
 Initialize the blocks editor workspace.

 @author mckinney@mit.edu (Andrew F. McKinney)
 @author sharon@google.com (Sharon Perl)
*/
Blockly.BlocklyEditor||(Blockly.BlocklyEditor={});
Blockly.BlocklyEditor.startup=function(a,b){goog.mixin(Blockly,{collapse:!0,hasScrollbars:!0,hasTrashcan:!0,hasBackpack:!0,comments:!0,disable:!0,configForTypeBlock:{frame:"ai_frame",typeBlockDiv:"ai_type_block",inputText:"ac_input_text"}});Blockly.inject(a);Blockly.Drawer.createDom();Blockly.Drawer.init();Blockly.readOnly||Blockly.TypeBlock(Blockly.configForTypeBlock);Blockly.BlocklyEditor.formName=b;Blockly.showPrefixToUser=!1;Blockly.usePrefixInYail=!1;Blockly.globalNamePrefix="global";Blockly.procedureParameterPrefix=
"input";Blockly.handlerParameterPrefix="input";Blockly.localNamePrefix="local";Blockly.loopParameterPrefix="item";Blockly.loopRangeParameterPrefix="counter";Blockly.menuSeparator=" ";Blockly.yailSeparator="_";Blockly.possiblyPrefixMenuNameWith=function(a){return function(b){return(Blockly.showPrefixToUser?a+Blockly.menuSeparator:"")+b}};Blockly.possiblyPrefixYailNameWith=function(a){return function(b){return(Blockly.usePrefixInYail?a+Blockly.yailSeparator:"")+b}};Blockly.prefixGlobalMenuName=function(a){return Blockly.globalNamePrefix+
Blockly.menuSeparator+a};Blockly.unprefixName=function(a){if(0==a.indexOf(Blockly.globalNamePrefix+Blockly.menuSeparator))return[Blockly.globalNamePrefix,a.substring(Blockly.globalNamePrefix.length+Blockly.menuSeparator.length)];if(Blockly.showPrefixToUser){var b=[Blockly.procedureParameterPrefix,Blockly.handlerParameterPrefix,Blockly.localNamePrefix,Blockly.loopParameterPrefix,Blockly.loopRangeParameterPrefix];for(i=0;i<b.length;i++)if(0==a.indexOf(b[i]))return[b[i],a.substring(b[i].length+Blockly.menuSeparator.length)]}return["",
a]};Blockly.bindEvent_(Blockly.mainWorkspace.getCanvas(),"blocklyWorkspaceChange",this,function(){window.parent.BlocklyPanel_blocklyWorkspaceChanged&&window.parent.BlocklyPanel_blocklyWorkspaceChanged(Blockly.BlocklyEditor.formName);Blockly.WarningHandler.determineDuplicateComponentEventHandlers()})};
Blockly.BlocklyEditor.render=function(){var a=(new Date).getTime();Blockly.Instrument.initializeStats("Blockly.BlocklyEditor.render");Blockly.mainWorkspace.render();Blockly.WarningHandler.checkAllBlocksForWarningsAndErrors();a=(new Date).getTime()-a;Blockly.Instrument.stats.totalTime=a;Blockly.Instrument.displayStats("Blockly.BlocklyEditor.render")};
Blockly.Block.prototype.customContextMenu=function(a){var b=this,c={enabled:this.disabled?!1:!0};if(window.parent.BlocklyPanel_checkIsAdmin()){var d={enabled:this.disabled?!1:!0};d.text=Blockly.Msg.GENERATE_YAIL;d.callback=function(){var a=Blockly.Yail.blockToCode1(b);b.setCommentText(a instanceof Array?a[0]:a)};a.push(d)}c.text=Blockly.Msg.DO_IT;c.callback=function(){var a;a=Blockly.Yail.blockToCode1(b);window.parent.ReplState.state!=Blockly.ReplMgr.rsState.CONNECTED?(a=new goog.ui.Dialog(null,!0),
a.setTitle(Blockly.Msg.CAN_NOT_DO_IT),a.setContent(Blockly.Msg.CONNECT_TO_DO_IT),a.setButtonSet((new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.OK,!1,!0)),a.setVisible(!0)):(a=a instanceof Array?a[0]:a,Blockly.ReplMgr.putYail(a,b))};a.push(c);b.replError&&(c={enabled:!0},c.text=Blockly.Msg.CLEAR_DO_IT_ERROR,c.callback=function(){b.replError=null;Blockly.WarningHandler.checkErrors.call(b)},a.push(c));b.procCustomContextMenu&&b.procCustomContextMenu(a)};/*

 @fileoverview Visual blocks editor for MIT App Inventor
 Color definitions for blocks

 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.HSV_SATURATION=0.7;Blockly.CONTROL_CATEGORY_HUE=[177,142,53];Blockly.LOGIC_CATEGORY_HUE=[119,171,65];Blockly.MATH_CATEGORY_HUE=[63,113,181];Blockly.TEXT_CATEGORY_HUE=[179,45,94];Blockly.LIST_CATEGORY_HUE=[73,166,212];Blockly.COLOR_CATEGORY_HUE=[125,125,125];Blockly.VARIABLE_CATEGORY_HUE=[208,95,45];Blockly.PROCEDURE_CATEGORY_HUE=[124,83,133];Blockly.TranslationProperties={};Blockly.TranslationProperties.map={};Blockly.TranslationProperties.rwState={READ_ONLY:0,READ_WRITE:1,WRITE_ONLY:2};Blockly.TranslationProperties.haveType=function(a){return void 0!=Blockly.TranslationProperties.map[a]};Blockly.TranslationProperties.haveProperty=function(a,b){return!Blockly.TranslationProperties.haveType(a)?!1:void 0!=Blockly.TranslationProperties.map[a][b]};
Blockly.TranslationProperties.addProperty=function(a,b,c,d){Blockly.TranslationProperties.haveType(a)||(Blockly.TranslationProperties.map[a]={});Blockly.TranslationProperties.haveProperty(a,b)||(Blockly.TranslationProperties.map[a][b]=[c,d])};Blockly.TranslationProperties.addProperties=function(a,b){for(var c=0;c<b.length;c++)Blockly.TranslationProperties.addProperty(a,b[c][1],b[c][0],b[c][2])};
Blockly.TranslationProperties.updateProperty=function(a,b,c){Blockly.TranslationProperties.haveProperty(a,b)&&(Blockly.TranslationProperties.map[a][b]=[c,Blockly.TranslationProperties.map[a][b][1]])};Blockly.TranslationProperties.updateProperties=function(a,b){for(var c=0;c<b.length;c++)Blockly.TranslationProperties.updateProperty(a,b[c][1],b[c][0])};
Blockly.TranslationProperties.getProperty=function(a,b){return!Blockly.TranslationProperties.haveProperty(a,b)?[]:[Blockly.TranslationProperties.map[a][b][0],b]};Blockly.TranslationProperties.getAllProperties=function(a){if(!Blockly.TranslationProperties.haveType(a))return[];var b=[],c;for(c in Blockly.TranslationProperties.map[a]){var d=Blockly.TranslationProperties.getProperty(a,c);b.push(d)}return b};
Blockly.TranslationProperties.getAllPropertiesSetter=function(a){if(!Blockly.TranslationProperties.haveType(a))return[];var b=[],c;for(c in Blockly.TranslationProperties.map[a]){var d=Blockly.TranslationProperties.map[a][c];(d[1]==Blockly.TranslationProperties.rwState.READ_WRITE||d[1]==Blockly.TranslationProperties.rwState.WRITE_ONLY)&&b.push([d[0],c])}return b};
Blockly.TranslationProperties.getAllPropertiesGetter=function(a){if(!Blockly.TranslationProperties.haveType(a))return[];var b=[],c;for(c in Blockly.TranslationProperties.map[a]){var d=Blockly.TranslationProperties.map[a][c];(d[1]==Blockly.TranslationProperties.rwState.READ_WRITE||d[1]==Blockly.TranslationProperties.rwState.READ_ONLY)&&b.push([d[0],c])}return b};
Blockly.TranslationProperties.updateComponentMap=function(a){for(var b=a.name,c=0,d;d=a.blockProperties[c];c++)Blockly.TranslationProperties.updateProperty(b,d.key,d.value)};Blockly.TranslationProperties.updateMap=function(a){for(var a=JSON.parse(a),b=0,c;c=a[b];b++)Blockly.TranslationProperties.updateComponentMap(c)};Blockly.TranslationEvents={};Blockly.TranslationEvents.map={};Blockly.TranslationEvents.haveEvent=function(a){return void 0!=Blockly.TranslationEvents.map[a]};Blockly.TranslationEvents.addEvent=function(a,b,c){Blockly.TranslationEvents.haveEvent(a)||(Blockly.TranslationEvents.map[a]=[b,c])};Blockly.TranslationEvents.addEvents=function(a){for(var b=0;b<a.length;b++)Blockly.TranslationEvents.addEvent(a[b][1],a[b][0],a[b][2])};
Blockly.TranslationEvents.updateEvent=function(a,b,c){if(Blockly.TranslationEvents.haveEvent(a)){var d=c;""==c&&(d=Blockly.TranslationEvents.map[a][1]);Blockly.TranslationEvents.map[a]=[b,d]}else Blockly.TranslationEvents.addEvent(a,b,c)};Blockly.TranslationEvents.updateEvents=function(a){for(var b=0;b<a.length;b++)Blockly.TranslationEvents.updateEvent(a[b][1],a[b][0],a[b][2])};Blockly.TranslationEvents.getEventValue=function(a){return!Blockly.TranslationEvents.haveEvent(a)?"":Blockly.TranslationEvents.map[a][0]};
Blockly.TranslationEvents.getEventDescription=function(a){return!Blockly.TranslationEvents.haveEvent(a)?"":Blockly.TranslationEvents.map[a][1]};Blockly.TranslationEvents.updateEventMap=function(a){Blockly.TranslationEvents.updateEvent(a.key,a.value,a.description)};Blockly.TranslationEvents.updateMap=function(a){for(var a=JSON.parse(a),b=0,c;c=a[b];b++)Blockly.TranslationEvents.updateEventMap(c)};Blockly.TranslationMethods={};Blockly.TranslationMethods.map={};Blockly.TranslationMethods.haveMethod=function(a){return void 0!=Blockly.TranslationMethods.map[a]};Blockly.TranslationMethods.addMethod=function(a,b,c){Blockly.TranslationMethods.haveMethod(a)||(Blockly.TranslationMethods.map[a]=[b,c])};Blockly.TranslationMethods.addMethods=function(a){for(var b=0;b<a.length;b++)Blockly.TranslationMethods.addMethod(a[b][1],a[b][0],a[b][2])};
Blockly.TranslationMethods.updateMethod=function(a,b,c){if(Blockly.TranslationMethods.haveMethod(a)){var d=c;""==c&&(d=Blockly.TranslationMethods.map[a][1]);Blockly.TranslationMethods.map[a]=[b,d]}else Blockly.TranslationMethods.addMethod(a,b,c)};Blockly.TranslationMethods.updateMethods=function(a){for(var b=0;b<a.length;b++)Blockly.TranslationMethods.updateMethod(a[b][1],a[b][0],a[b][2])};Blockly.TranslationMethods.getMethodValue=function(a){return!Blockly.TranslationMethods.haveMethod(a)?"":Blockly.TranslationMethods.map[a][0]};
Blockly.TranslationMethods.getMethodDescription=function(a){return!Blockly.TranslationMethods.haveMethod(a)?"":Blockly.TranslationMethods.map[a][1]};Blockly.TranslationMethods.updateMethodMap=function(a){Blockly.TranslationMethods.updateMethod(a.key,a.value)};Blockly.TranslationMethods.updateMap=function(a){for(var a=JSON.parse(a),b=0,c;c=a[b];b++)Blockly.TranslationMethods.updateMethodMap(c)};Blockly.TranslationParams={};Blockly.TranslationParams.map={};Blockly.TranslationParams.haveParam=function(a){return void 0!=Blockly.TranslationParams.map[a]};Blockly.TranslationParams.addParam=function(a,b){Blockly.TranslationParams.haveParam(a)||(Blockly.TranslationParams.map[a]=b)};Blockly.TranslationParams.addParams=function(a){for(var b=0;b<a.length;b++)Blockly.TranslationParams.addParam(a[b][1],a[b][0])};
Blockly.TranslationParams.updateParam=function(a,b){Blockly.TranslationParams.haveParam(a)?Blockly.TranslationParams.map[a]=b:Blockly.TranslationParams.addParam(a,b)};Blockly.TranslationParams.updateParams=function(a){for(var b=0;b<a.length;b++)Blockly.TranslationParams.updateParam(a[b][1],a[b][0])};Blockly.TranslationParams.getParam=function(a){return!Blockly.TranslationParams.haveParam(a)?"":Blockly.TranslationParams.map[a]};
Blockly.TranslationParams.updateParamMap=function(a){Blockly.TranslationParams.updateParam(a.key,a.value)};Blockly.TranslationParams.updateMap=function(a){for(var a=JSON.parse(a),b=0,c;c=a[b];b++)Blockly.TranslationParams.updateParamMap(c)};/*

 @fileoverview Methods for manipulating App Inventor components - adding, removing,
 renaming, etc.

 @author mckinney@mit.edu (Andrew F. McKinney)
 @author sharon@google.com (Sharon Perl)
*/
Blockly.Component={};Blockly.ComponentTypes={};Blockly.ComponentInstances={};Blockly.Component.add=function(a,b){if(!Blockly.ComponentInstances.haveInstance(a,b)){Blockly.TypeBlock.needsReload.components=!0;var c=Blockly.Component.instanceNameToTypeName(a);Blockly.ComponentInstances.addInstance(a,b,c)}};
Blockly.Component.rename=function(a,b,c){console.log("Got call to Blockly.Component.rename("+a+", "+b+", "+c+")");Blockly.TypeBlock.needsReload.components=!0;if(Blockly.ComponentInstances.haveInstance(a,c)){Blockly.ComponentInstances[b]={};Blockly.ComponentInstances[b].uid=c;Blockly.ComponentInstances[b].typeName=Blockly.ComponentInstances[a].typeName;Blockly.ComponentInstances[a]=null;delete Blockly.ComponentInstances[a];console.log("Revised Blockly.ComponentInstances, Blockly.Language, Blockly.Yail for "+
b);for(var c=Blockly.mainWorkspace.getAllBlocks(),d=0,e;e=c[d];d++)e.category&&"Component"==e.category&&e.rename(a,b);console.log("Revised Blockly.mainWorkspace for "+b)}else console.log("Renaming, No such Component instance "+a+" aborting")};
Blockly.Component.remove=function(a,b,c){console.log("Got call to Blockly.Component.remove("+a+", "+b+", "+c+")");Blockly.TypeBlock.needsReload.components=!0;for(var a=Blockly.mainWorkspace.getAllBlocks(),c=0,d;d=a[c];c++)d.category&&"Component"==d.category&&d.instanceName==b&&d.dispose(!0);console.log("Deleting "+b+" from Blockly.ComponentInstances");delete Blockly.ComponentInstances[b]};
Blockly.Component.buildComponentMap=function(){for(var a={components:{},globals:[]},b=Blockly.mainWorkspace.getTopBlocks(!0),c=0,d;d=b[c];c++)if(d.category)if("procedures_defnoreturn"==d.type||"procedures_defreturn"==d.type||"global_declaration"==d.type)a.globals.push(d);else if("Component"==d.category){var e=d.instanceName;"event"==d.blockType&&(a.components[e]||(a.components[e]=[]),a.components[e].push(d))}return a};Blockly.ComponentTypes.haveType=function(a){return void 0!=Blockly.ComponentTypes[a]};
Blockly.ComponentTypes.populateTypes=function(){for(var a=JSON.parse(window.parent.BlocklyPanel_getComponentsJSONString()),b=0;b<a.length;b++){var c=a[b],d=c.name;Blockly.ComponentTypes[d]={};Blockly.ComponentTypes[d].componentInfo=c;Blockly.ComponentTypes[d].eventDictionary={};Blockly.ComponentTypes[d].methodDictionary={};Blockly.ComponentTypes[d].setPropertyList=[];Blockly.ComponentTypes[d].getPropertyList=[];Blockly.ComponentTypes[d].properties={};for(var e=0;e<c.events.length;e++)Blockly.ComponentTypes[d].eventDictionary[c.events[e].name]=
c.events[e];for(e=0;e<c.methods.length;e++)Blockly.ComponentTypes[d].methodDictionary[c.methods[e].name]=c.methods[e];for(e=0;e<c.blockProperties.length;e++)Blockly.ComponentTypes[d].properties[c.blockProperties[e].name]=c.blockProperties[e],("read-write"==c.blockProperties[e].rw||"read-only"==c.blockProperties[e].rw)&&Blockly.ComponentTypes[d].getPropertyList.push(c.blockProperties[e].name),("read-write"==c.blockProperties[e].rw||"write-only"==c.blockProperties[e].rw)&&Blockly.ComponentTypes[d].setPropertyList.push(c.blockProperties[e].name)}};
Blockly.ComponentInstances.addInstance=function(a,b,c){Blockly.ComponentInstances[a]={};Blockly.ComponentInstances[a].uid=b;Blockly.ComponentInstances[a].typeName=c};Blockly.ComponentInstances.haveInstance=function(a,b){return void 0!=Blockly.ComponentInstances[a]&&Blockly.ComponentInstances[a].uid==b};
Blockly.ComponentInstances.getInstanceNames=function(){var a=[],b;for(b in Blockly.ComponentInstances)"object"==typeof Blockly.ComponentInstances[b]&&null!=Blockly.ComponentInstances[b].uid&&a.push(b);return a};Blockly.Component.instanceNameToTypeName=function(a){return window.parent.BlocklyPanel_getComponentInstanceTypeName(Blockly.BlocklyEditor.formName,a)};
Blockly.Component.getComponentNamesByType=function(a){var b=[],c;for(c in Blockly.ComponentInstances)Blockly.ComponentInstances[c].typeName==a&&b.push([c,c]);return b};goog.dom.xml={};goog.dom.xml.MAX_XML_SIZE_KB=2048;goog.dom.xml.MAX_ELEMENT_DEPTH=256;
goog.dom.xml.createDocument=function(a,b){if(b&&!a)throw Error("Can't create document with namespace and no root tag");if(document.implementation&&document.implementation.createDocument)return document.implementation.createDocument(b||"",a||"",null);if("undefined"!=typeof ActiveXObject){var c=goog.dom.xml.createMsXmlDocument_();if(c)return a&&c.appendChild(c.createNode(goog.dom.NodeType.ELEMENT,a,b||"")),c}throw Error("Your browser does not support creating new documents");};
goog.dom.xml.loadXml=function(a){if("undefined"!=typeof DOMParser)return(new DOMParser).parseFromString(a,"application/xml");if("undefined"!=typeof ActiveXObject){var b=goog.dom.xml.createMsXmlDocument_();b.loadXML(a);return b}throw Error("Your browser does not support loading xml documents");};
goog.dom.xml.serialize=function(a){if("undefined"!=typeof XMLSerializer)return(new XMLSerializer).serializeToString(a);if(a=a.xml)return a;throw Error("Your browser does not support serializing XML documents");};
goog.dom.xml.selectSingleNode=function(a,b){if("undefined"!=typeof a.selectSingleNode){var c=goog.dom.getOwnerDocument(a);"undefined"!=typeof c.setProperty&&c.setProperty("SelectionLanguage","XPath");return a.selectSingleNode(b)}if(document.implementation.hasFeature("XPath","3.0")){var c=goog.dom.getOwnerDocument(a),d=c.createNSResolver(c.documentElement);return c.evaluate(b,a,d,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue}return null};
goog.dom.xml.selectNodes=function(a,b){if("undefined"!=typeof a.selectNodes){var c=goog.dom.getOwnerDocument(a);"undefined"!=typeof c.setProperty&&c.setProperty("SelectionLanguage","XPath");return a.selectNodes(b)}if(document.implementation.hasFeature("XPath","3.0")){for(var c=goog.dom.getOwnerDocument(a),d=c.createNSResolver(c.documentElement),c=c.evaluate(b,a,d,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null),d=[],e=c.snapshotLength,f=0;f<e;f++)d.push(c.snapshotItem(f));return d}return[]};
goog.dom.xml.setAttributes=function(a,b){for(var c in b)b.hasOwnProperty(c)&&a.setAttribute(c,b[c])};goog.dom.xml.createMsXmlDocument_=function(){var a=new ActiveXObject("MSXML2.DOMDocument");if(a){a.resolveExternals=!1;a.validateOnParse=!1;try{a.setProperty("ProhibitDTD",!0),a.setProperty("MaxXMLSize",goog.dom.xml.MAX_XML_SIZE_KB),a.setProperty("MaxElementDepth",goog.dom.xml.MAX_ELEMENT_DEPTH)}catch(b){}}return a};/*

 @fileoverview Visual blocks editor for App Inventor
 Methods to handle converting apps from older versions to current

 @author wolber@usfca.edu (David Wolber)

 [lyn, 2014/10/31] Completely overhauled blocks upgrading architecture.
 All the work is done in Blockly.Version.upgrade.
 As in Liz Looney's AI1 BlocksSaveFile upgraders, all upgrades are based on mismatches
 between component versions or language versions of the screen and those of the current system.
 Unlike Liz's system, in which conditionals based on version numbers are used to express AI1 upgrades,
 all AI2 upgrades are expressed via the dictionary structure in Blockly.Versioning.AllUpgradeMaps,
 which is defined at the end of this file. This is a more declarative approach for expressing upgrades.
*/
Blockly.Versioning={};Blockly.Versioning.loggingFlag=!0;Blockly.Versioning.setLogging=function(a){Blockly.Versioning.loggingFlag=a};Blockly.Versioning.log=function(a){Blockly.Versioning.loggingFlag&&console.log("Blockly.Versioning: "+a)};
Blockly.Versioning.upgrade=function(a,b){function c(a,b,c,d){"Form"==a&&(a="Screen");Blockly.Versioning.log("In Blockly.Versioning.upgrade, upgradeComponentType("+a+","+b+","+c+","+d+")");if(b>c)throw"Unexpected situation in Blockly.Versioning.upgrade: preUpgradeVersion of "+a+" = "+b+" > systemVersion = "+c;if(b<c){Blockly.Versioning.log("upgrading component type "+a+" from version "+b+" to version "+c);var e=Blockly.Versioning.AllUpgradeMaps[a];if(!e)throw"Blockly.Versioning.upgrade: no upgrade map for component type "+
a;for(b+=1;b<=c;b++){var f=e[b];if(!f)throw"Blockly.Versioning.upgrade: no upgrader to upgrade component type "+a+" to version "+b;Blockly.Versioning.log("applying upgrader for upgrading component type "+a+" from version "+(b-1)+" to version "+b);d=Blockly.Versioning.applyUpgrader(f,d)}}return d}var d=JSON.parse(a),e=Blockly.Xml.textToDom(b),f=window.parent.BlocklyPanel_getBlocksLanguageVersion(),g=window.parent.BlocklyPanel_getYaVersion(),h=e.getElementsByTagName("yacodeblocks");if(0===h.length)Blockly.Versioning.v17_blocksOverhaul(e),
g=17;else{if(g==parseInt(h[0].getAttribute("ya-version"),10)){Blockly.Versioning.ensureWorkspace(e);return}g=parseInt(h[0].getAttribute("language-version"),10)}var e=c("Language",g,f,e),d=Blockly.Versioning.makeComponentVersionDict(d),j;for(j in d)f=d[j],g=Blockly.Versioning.getSystemComponentVersion(j),e=c(j,f,g,e);Blockly.Versioning.log("Blockly.Versioning.upgrade: Final conversion to Blockly.mainWorkspace");Blockly.Versioning.ensureWorkspace(e)};
Blockly.Versioning.checkUpgrader=function(a){var b=["noUpgrade","ai1CantDoUpgrade"];if("string"==typeof a){if(-1==b.indexOf(a))throw"Blockly.Versioning.checkUpgrader: upgrader is unrecognized special string: "+a;}else if(!("function"==typeof a||Array.isArray(a)))throw"Blockly.Versioning.checkUpgrader: upgrader is not a function, special string, or array of upgraders -- "+a;};Blockly.Versioning.isWorkspace=function(a){return a instanceof Blockly.Workspace};
Blockly.Versioning.isDom=function(a){try{return a instanceof Element||a instanceof HTMLElement||a instanceof HTMLUnknownElement}catch(b){return!1}};Blockly.Versioning.ensureDom=function(a){if(Blockly.Versioning.isDom(a))return a;if(Blockly.Versioning.isWorkspace(a))return Blockly.Versioning.log("Blockly.Versioning.ensureDom: converting Blockly.mainWorkspace to dom"),Blockly.Xml.workspaceToDom(a);throw"Blockly.Versioning.ensureDom: blocksRep is neither dom nor workspace -- "+a;};
Blockly.Versioning.getBlockChildren=function(a){for(var b=[],a=goog.dom.getChildren(a),c=0,d;d=a[c];c++)b.push(d);return b};
Blockly.Versioning.ensureWorkspace=function(a){if(Blockly.Versioning.isWorkspace(a))return a;if(Blockly.Versioning.isDom(a))return Blockly.Versioning.log("Blockly.Versioning.ensureWorkspace: converting dom to Blockly.mainWorkspace"),Blockly.mainWorkspace.clear(),Blockly.Xml.domToWorkspace(Blockly.mainWorkspace,a),Blockly.mainWorkspace;throw"Blockly.Versioning.ensureWorkspace: blocksRep is neither workspace nor dom -- "+a;};
Blockly.Versioning.applyUpgrader=function(a,b){Blockly.Versioning.checkUpgrader(a);if("ai1CantDoUpgrade"==a)throw"Blockly.Versioning.applyUpgrader: cannot perform an AI Classic upgrade on "+b;return"function"==typeof a?a(b):Array.isArray(a)?(Blockly.Versioning.log("Blockly.Versioning.applyUpgrader: treating list as sequential composition of upgraders"),Blockly.Versioning.composeUpgraders(a)(b)):b};
Blockly.Versioning.composeUpgraders=function(a){return function(b){for(var c=0,d;d=a[c];c++)b=Blockly.Versioning.applyUpgrader(d,b);return b}};Blockly.Versioning.makeComponentVersionDict=function(a){function b(a){for(var e=0,f;f=a[e];e+=1){var g=f.$Type,h=parseInt(f.$Version),j=c[g];if(j){if(j!=h)throw"Blockly.Versioning.makeComponentVersionDict: inconsistent versions for component of type"+g+"; ["+str(h)+", "+j+"]";}else c[g]=h;(f=f.$Components)&&b(f)}}var c={};b([a.Properties]);return c};
Blockly.Versioning.getSystemComponentVersion=function(a){var b=Blockly.ComponentTypes[a].componentInfo.version;if(b)return parseInt(b);throw"Blockly.Versioning.getSystemComponentVersion: No version for component type "+a;};
Blockly.Versioning.v17_blocksOverhaul=function(a){for(var b=0,a=a.getElementsByTagName("block"),c=0,d=a.length;c<d;c++){var e=a[c],f=e.getAttribute("type");if(null==Blockly.Blocks[f])if("procedures_do_then_return"==f)e.setAttribute("type","controls_do_then_return");else if("procedure_lexical_variable_get"==f)e.setAttribute("type","lexical_variable_get");else if("for_lexical_variable_get"==f)e.setAttribute("type","lexical_variable_get");else{var g=f.split("_");2<g.length&&(g=[g.slice(0,-1).join("_"),
g.pop()]);if("lexical"!=g[0])if("any"==g[1])Blockly.Versioning.v17_translateAnyMethod(e);else if(null!=Blockly.ComponentTypes[g[0]]&&("setproperty"==g[1]||"getproperty"==g[1]))Blockly.Versioning.v17_translateComponentSetGetProperty(e);else{var h=g[0],f=Blockly.Component.instanceNameToTypeName(h);f==h&&0===b&&(alert("Your app was created in an earlier version of App Inventor and may be loaded incorrectly. The problem is that it names a component instance the same as the component type, which is longer allowed."),
b=1);g=g[1];"setproperty"==g||"getproperty"==g?Blockly.Versioning.v17_translateSetGetProperty(e):"component"==g?Blockly.Versioning.v17_translateComponentGet(e):null!=Blockly.ComponentTypes[f].eventDictionary[g]?Blockly.Versioning.v17_translateEvent(e):null!=Blockly.ComponentTypes[f].methodDictionary[g]&&Blockly.Versioning.v17_translateMethod(e)}}}};
Blockly.Versioning.v17_translateEvent=function(a){var b=a.getAttribute("type").split("_");2<b.length&&(b=[b.slice(0,-1).join("_"),b.pop()]);var c=b[0],b=b[1],d=Blockly.Component.instanceNameToTypeName(c);a.setAttribute("type","component_event");var e=goog.dom.createElement("mutation");e.setAttribute("instance_name",c);e.setAttribute("event_name",b);e.setAttribute("component_type",d);a.insertBefore(e,a.firstChild)};
Blockly.Versioning.v17_translateMethod=function(a){var b=a.getAttribute("type").split("_");2<b.length&&(b=[b.slice(0,-1).join("_"),b.pop()]);var c=b[0],b=b[1],d=Blockly.Component.instanceNameToTypeName(c);a.setAttribute("type","component_method");var e=goog.dom.createElement("mutation");e.setAttribute("instance_name",c);e.setAttribute("method_name",b);e.setAttribute("component_type",d);e.setAttribute("is_generic","false");a.insertBefore(e,a.firstChild)};
Blockly.Versioning.v17_translateAnyMethod=function(a){var b=a.getAttribute("type").split("_");if(3<b.length)var c=b.slice(-2),b=[b.slice(0,-2).join("_"),c.pop(),c.pop()];c=b[2];b=b[3];a.setAttribute("type","component_method");var d=goog.dom.createElement("mutation");d.setAttribute("method_name",b);d.setAttribute("component_type",c);d.setAttribute("is_generic","true");a.insertBefore(d,a.firstChild)};
Blockly.Versioning.v17_translateComponentGet=function(a){var b=a.getAttribute("type").split("_");2<b.length&&(b=[b.slice(0,-1).join("_"),b.pop()]);var b=b[0],c=Blockly.Component.instanceNameToTypeName(b);a.setAttribute("type","component_component_block");var d=goog.dom.createElement("mutation");d.setAttribute("instance_name",b);d.setAttribute("component_type",c);a.insertBefore(d,a.firstChild)};
Blockly.Versioning.v17_translateSetGetProperty=function(a){var b=a.getAttribute("type").split("_");2<b.length&&(b=[b.slice(0,-1).join("_"),b.pop()]);for(var c=b[0],b=b[1],d=Blockly.Component.instanceNameToTypeName(c),e=a.getElementsByTagName("title"),f="unknown",g=0,h=e.length;g<h;g++)if("PROP"==e[g].getAttribute("name")){f=e[g].textContent;break}a.setAttribute("type","component_set_get");a=a.getElementsByTagName("mutation")[0];a.setAttribute("instance_name",c);a.setAttribute("property_name",f);"setproperty"==
b?a.setAttribute("set_or_get","set"):a.setAttribute("set_or_get","get");a.setAttribute("component_type",d);a.setAttribute("is_generic","false");null!=a.getAttribute("yailtype")&&a.removeAttribute("yailtype")};
Blockly.Versioning.v17_translateComponentSetGetProperty=function(a){var b=a.getAttribute("type").split("_");2<b.length&&(b=[b.slice(0,-1).join("_"),b.pop()]);for(var c=b[1],b=b[0],d=a.getElementsByTagName("title"),e="unknown",f=0,g=d.length;f<g;f++)if("PROP"==d[f].getAttribute("name")){e=d[f].textContent;break}a.setAttribute("type","component_set_get");a=a.getElementsByTagName("mutation")[0];a.setAttribute("property_name",e);"setproperty"==c?a.setAttribute("set_or_get","set"):a.setAttribute("set_or_get",
"get");a.setAttribute("component_type",b);a.setAttribute("is_generic","true");null!=a.getAttribute("yailtype")&&a.removeAttribute("yailtype")};
Blockly.Versioning.changeEventParameterName=function(a,b,c,d){return function(e){for(var e=Blockly.Versioning.ensureWorkspace(e),f=e.getAllBlocks(),g=0;g<f.length;g++){var h=f[g];if("event"===h.blockType&&h.eventName===b&&h.typeName===a){var j=Blockly.LexicalVariable.eventParameterDict(h)[c];if(j){for(var k=h.getDescendants(),m=0,l;l=k[m];m++)l.eventparam&&l.eventparam==c&&(l.eventparam=d);k=window.parent.BlocklyPanel_getLocalizedParameterName(d);h=h.getChildren();for(m=0;l=h[m];m++){var n=new Blockly.Substitution([j],
[k]);Blockly.LexicalVariable.renameFree(l,n)}}}}return e}};
Blockly.Versioning.addDefaultMethodArgument=function(a,b,c,d){return function(e){for(var e=Blockly.Versioning.ensureDom(e),f=Blockly.Versioning.findAllMethodCalls(e,a,b),g=0,h;h=f[g];g++){for(var j=goog.dom.getChildren(h),k=null,m=0,l;l=j[m];m++)if("VALUE"==l.tagName){var n=l.getAttribute("name");if(0==n.indexOf("ARG"))if(n=parseInt(n.split("ARG")[1]),n==c)console.log("Already a child block at index  "+c+" in Blockly.Versioning.addDefaultMethodArgument("+a+", "+b,NaN+c,NaN+d+")");else if(n>c){k=l;
break}}j=goog.dom.createElement("value");j.setAttribute("name","ARG"+c);m=Blockly.Versioning.xmlBlockTextToDom(d);j.insertBefore(m,null);h.insertBefore(j,k)}return e}};Blockly.Versioning.changeMethodName=function(a,b,c){return function(d){for(var d=Blockly.Versioning.ensureDom(d),e=Blockly.Versioning.findAllMethodCalls(d,a,b),f=0,g;g=e[f];f++)Blockly.Versioning.firstChildWithTagName(g,"mutation").setAttribute("method_name",c);return d}};
Blockly.Versioning.changePropertyName=function(a,b,c){return function(d){for(var d=Blockly.Versioning.ensureDom(d),e=Blockly.Versioning.findAllPropertyBlocks(d,a,b),f=0,g;g=e[f];f++){Blockly.Versioning.firstChildWithTagName(g,"mutation").setAttribute("property_name",c);g=goog.dom.getChildren(g);for(var h=0,j;j=g[h];h++)"FIELD"==j.tagName.toUpperCase()&&("PROP"==j.getAttribute("name")&&j.textContent==b)&&(j.textContent=c)}return d}};
Blockly.Versioning.findAllMethodCalls=function(a,b,c){for(var a=a.getElementsByTagName("block"),d=[],e=0,f;f=a[e];e++)if("component_method"==f.getAttribute("type")){var g=Blockly.Versioning.firstChildWithTagName(f,"mutation");if(g)g.getAttribute("component_type")==b&&g.getAttribute("method_name")==c&&d.push(f);else throw"Did not find expected mutation child in Blockly.Versioning.findAllMethodCalls with componentType = "+b+"and methodName = "+c;}return d};
Blockly.Versioning.findAllPropertyBlocks=function(a,b,c){for(var a=a.getElementsByTagName("block"),d=[],e=0,f;f=a[e];e++)if("component_set_get"==f.getAttribute("type")){var g=Blockly.Versioning.firstChildWithTagName(f,"mutation");if(g)g.getAttribute("component_type")==b&&g.getAttribute("property_name")==c&&d.push(f);else throw"Did not find expected mutation child in Blockly.Versioning.findAllPropertyBlocks with componentType = "+b+"and propertyName = "+c;}return d};
Blockly.Versioning.firstChildWithTagName=function(a,b){for(var c=b.toUpperCase(),d=goog.dom.getChildren(a),e=0,f;f=d[e];e++)if(f.tagName.toUpperCase()==c)return f;return null};Blockly.Versioning.xmlBlockTextToDom=function(a){a=Blockly.Xml.textToDom("<xml>"+a+"</xml>");a=goog.dom.getChildren(a);if(1!=a.length)throw"Unexpected number of childred in Blockly.Versioning.xmlBlockTextToDom: "+a.length;return a[0]};
Blockly.Versioning.AllUpgradeMaps={AccelerometerSensor:{2:"noUpgrade",3:"noUpgrade"},ActivityStarter:{2:"noUpgrade",3:"ai1CantDoUpgrade",4:"noUpgrade",5:"noUpgrade",6:"noUpgrade"},Ball:{2:"noUpgrade",3:"noUpgrade",4:"noUpgrade",5:"ai1CantDoUpgrade"},BarcodeScanner:{2:"noUpgrade"},BluetoothClient:{2:"noUpgrade",3:"ai1CantDoUpgrade",4:"noUpgrade",5:"noUpgrade"},BluetoothServer:{2:"noUpgrade",3:"ai1CantDoUpgrade",4:"noUpgrade",5:"noUpgrade"},Button:{2:"ai1CantDoUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade",
6:"noUpgrade"},Camcorder:{1:"noUpgrade"},Camera:{2:"noUpgrade"},Canvas:{2:"noUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade",6:"noUpgrade",7:"ai1CantDoUpgrade",8:[Blockly.Versioning.changeEventParameterName("Canvas","Dragged","draggedSprite","draggedAnySprite"),Blockly.Versioning.changeEventParameterName("Canvas","Touched","touchedSprite","touchedAnySprite")],9:Blockly.Versioning.addDefaultMethodArgument("Canvas","DrawCircle",3,'<block type="logic_boolean">  <field name="BOOL">TRUE</field></block>'),
10:"noUpgrade"},CheckBox:{2:"noUpgrade"},Clock:{1:"noUpgrade",2:[Blockly.Versioning.addDefaultMethodArgument("Clock","FormatDateTime",1,'<block type="text">  <field name="TEXT">MMM d, yyyy HH:mm:ss a</field></block>'),Blockly.Versioning.addDefaultMethodArgument("Clock","FormatDate",1,'<block type="text">  <field name="TEXT">MMM d, yyyy</field></block>')]},ContactPicker:{2:"ai1CantDoUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade",6:"noUpgrade"},DatePicker:{2:"noUpgrade",3:"noUpgrade"},EmailPicker:{2:"ai1CantDoUpgrade",
3:"noUpgrade"},File:{2:"noUpgrade"},FusiontablesControl:{2:"noUpgrade",3:"noUpgrade"},GameClient:{1:"noUpgrade"},HorizontalArrangement:{2:"noUpgrade",3:"noUpgrade"},Image:{1:"noUpgrade"},ImagePicker:{2:"ai1CantDoUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade"},ImageSprite:{2:"noUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade",6:"ai1CantDoUpgrade"},Label:{2:"ai1CantDoUpgrade",3:"noUpgrade"},Language:{2:"noUpgrade",3:"noUpgrade",4:"noUpgrade",5:"ai1CantDoUpgrade",6:"ai1CantDoUpgrade",7:"ai1CantDoUpgrade",
8:"ai1CantDoUpgrade",9:"ai1CantDoUpgrade",10:"ai1CantDoUpgrade",11:"noUpgrade",12:"ai1CantDoUpgrade",13:"noUpgrade",14:"noUpgrade",15:"noUpgrade",16:"noUpgrade",17:"ai1CantDoUpgrade",18:"noUpgrade",19:"noUpgrade"},ListPicker:{2:"ai1CantDoUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade",6:"noUpgrade",7:"noUpgrade",8:"noUpgrade",9:"noUpgrade"},ListView:{2:"noUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade"},LocationSensor:{2:"noUpgrade"},NearField:{1:"noUpgrade"},Notifier:{2:"ai1CantDoUpgrade",
3:"noUpgrade",4:"noUpgrade"},NxtColorSensor:{1:"noUpgrade"},NxtDirectCommands:{1:"noUpgrade"},NxtDrive:{1:"noUpgrade"},NxtLightSensor:{1:"noUpgrade"},NxtSoundSensor:{1:"noUpgrade"},NxtTouchSensor:{1:"noUpgrade"},NxtUltrasonicSensor:{1:"noUpgrade"},OrientationSensor:{2:"ai1CantDoUpgrade"},PasswordTextBox:{2:"ai1CantDoUpgrade",3:"noUpgrade"},Pedometer:{1:"noUpgrade"},PhoneCall:{2:"noUpgrade"},PhoneNumberPicker:{2:"ai1CantDoUpgrade",3:"noUpgrade",4:"noUpgrade"},Player:{2:"noUpgrade",3:"ai1CantDoUpgrade",
4:"noUpgrade",5:"ai1CantDoUpgrade",6:"noUpgrade"},ProximitySensor:{1:"noUpgrade"},Screen:{2:"noUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade",6:"noUpgrade",7:"noUpgrade",8:"noUpgrade",9:"noUpgrade",10:"noUpgrade",11:"noUpgrade",12:"noUpgrade",13:"noUpgrade",14:"noUpgrade",15:"noUpgrade",16:"noUpgrade",17:"noUpgrade",18:"noUpgrade"},Sharing:{1:"noUpgrade"},Slider:{1:"noUpgrade",2:"noUpgrade"},Sound:{2:"noUpgrade",3:"ai1CantDoUpgrade"},SoundRecorder:{1:"noUpgrade",2:"noUpgrade"},SpeechRecognizer:{1:"noUpgrade"},
Spinner:{1:"noUpgrade"},TableArrangement:{1:"noUpgrade"},TextBox:{2:"noUpgrade",3:"ai1CantDoUpgrade",4:"noUpgrade",5:"noUpgrade"},Texting:{2:"noUpgrade",3:"ai1CantDoUpgrade"},TextToSpeech:{2:"noUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade"},TimePicker:{2:"noUpgrade",3:"noUpgrade"},TinyDB:{1:"noUpgrade"},TinyWebDB:{2:"ai1CantDoUpgrade"},Twitter:{2:"ai1CantDoUpgrade",3:"ai1CantDoUpgrade",4:"noUpgrade"},VerticalArrangement:{2:"noUpgrade",3:"noUpgrade"},VideoPlayer:{2:"noUpgrade",3:"ai1CantDoUpgrade",
4:"noUpgrade",5:"noUpgrade"},Voting:{1:"noUpgrade"},Web:{2:"ai1CantDoUpgrade",3:"ai1CantDoUpgrade",4:"noUpgrade"},WebViewer:{2:"noUpgrade",3:"noUpgrade",4:"noUpgrade",5:"noUpgrade",6:"noUpgrade"},YandexTranslate:{1:"noUpgrade"}};/*

 @fileoverview Visual blocks editor for App Inventor
 Methods to handle serialization of the blocks workspace

 @author sharon@google.com (Sharon Perl)

 History:
 [lyn, 2014/10/31] Completely overhauled blocks upgrading architecture.
 All the work is done in Blockly.Version.upgrade.
*/
Blockly.SaveFile={};
Blockly.SaveFile.load=function(a,b){Blockly.Instrument.initializeStats("Blockly.SaveFile.load");Blockly.Instrument.timer(function(){if(0!=b.length)try{Blockly.Block.isRenderingOn=!1,Blockly.Versioning.upgrade(a,b)}finally{Blockly.Block.isRenderingOn=!0}},function(a,b){Blockly.Instrument.stats.totalTime=b;Blockly.Instrument.stats.blockCount=Blockly.Instrument.stats.domToBlockInnerCalls;Blockly.Instrument.stats.topBlockCount=Blockly.Instrument.stats.domToBlockCalls;Blockly.Instrument.displayStats("Blockly.SaveFile.load");Blockly.mainWorkspace.render()})};
Blockly.SaveFile.get=function(){var a=Blockly.Xml.workspaceToDom(Blockly.mainWorkspace),b=goog.dom.createElement("yacodeblocks"),c=window.parent.BlocklyPanel_getYaVersion(),d=window.parent.BlocklyPanel_getBlocksLanguageVersion();b.setAttribute("ya-version",c);b.setAttribute("language-version",d);a.appendChild(b);return Blockly.Xml.domToPrettyText(a)};/*

 @fileoverview Container block for all mutators for Blockly, modified for MIT App Inventor.
 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.Blocks.mutators={};Blockly.Blocks.mutator_container={init:function(){this.setColour(210);this.appendDummyInput().appendField("","CONTAINER_TEXT");this.appendStatementInput("STACK");this.contextMenu=!1}};Blockly.mutationToDom=function(){var a=document.createElement("mutation");a.setAttribute("items",this.itemCount_);return a};
Blockly.domToMutation=function(a){if(null!=this.valuesToSave)for(var b in this.valuesToSave)this.valuesToSave[b]=this.getFieldValue(b);for(b=0;b<this.itemCount_;b++)this.removeInput(this.repeatingInputName+b);this.itemCount_=window.parseInt(a.getAttribute("items"),10);for(b=0;b<this.itemCount_;b++)this.addInput(b);0==this.itemCount_&&this.addEmptyInput()};
Blockly.decompose=function(a,b,c){var d=new Blockly.Block.obtain(a,"mutator_container");d.setColour(c.getColour());null!=c.updateContainerBlock&&c.updateContainerBlock(d);d.initSvg();for(var e=d.getInput("STACK").connection,f=0;f<c.itemCount_;f++){var g=new Blockly.Block.obtain(a,b);g.initSvg();e.connect(g.previousConnection);e=g.nextConnection}return d};
Blockly.compose=function(a){if(null!=this.valuesToSave)for(var b in this.valuesToSave)this.valuesToSave[b]=this.getFieldValue(b);if(0==this.itemCount_)null!=this.emptyInputName&&this.removeInput(this.emptyInputName);else for(b=this.itemCount_-1;0<=b;b--)this.removeInput(this.repeatingInputName+b);this.itemCount_=0;for(a=a.getInputTargetBlock("STACK");a;)b=this.addInput(this.itemCount_),a.valueConnection_&&b.connection.connect(a.valueConnection_),this.itemCount_++,a=a.nextConnection&&a.nextConnection.targetBlock();
0==this.itemCount_&&this.addEmptyInput()};Blockly.saveConnections=function(a){for(var a=a.getInputTargetBlock("STACK"),b=0;a;){var c=this.getInput(this.repeatingInputName+b);a.valueConnection_=c&&c.connection.targetConnection;b++;a=a.nextConnection&&a.nextConnection.targetBlock()}};/*

 @fileoverview Drop-down chooser of variables in the current lexical scope for App Inventor
 @author fturbak@wellesley.com (Lyn Turbak)
*/
Blockly.FieldLexicalVariable=function(a){Blockly.FieldDropdown.call(this,Blockly.FieldLexicalVariable.dropdownCreate,Blockly.FieldLexicalVariable.dropdownChange);a?this.setText(a):this.setText(Blockly.Variables.generateUniqueName())};goog.inherits(Blockly.FieldLexicalVariable,Blockly.FieldDropdown);Blockly.FieldLexicalVariable.prototype.getValue=function(){return this.getText()};
Blockly.FieldLexicalVariable.prototype.setValue=function(a){this.value_=a;this.setText(a);this.block_&&this.block_.eventparam&&(this.block_.eventparam=void 0)};Blockly.FieldLexicalVariable.prototype.getBlock=function(){return this.block_};Blockly.FieldLexicalVariable.prototype.setBlock=function(a){this.block_=a;this.setCachedParent(a.getParent())};Blockly.FieldLexicalVariable.prototype.getCachedParent=function(){return this.cachedParent_};
Blockly.FieldLexicalVariable.prototype.setCachedParent=function(a){this.cachedParent_=a};
Blockly.FieldLexicalVariable.getGlobalNames=function(a){if(Blockly.Instrument.useLynCacheGlobalNames&&Blockly.WarningHandler.cacheGlobalNames)return Blockly.WarningHandler.cachedGlobalNames;var b=[];if(Blockly.mainWorkspace)for(var c=[],c=Blockly.Instrument.useLynGetGlobalNamesFix?Blockly.mainWorkspace.getTopBlocks():Blockly.mainWorkspace.getAllBlocks(),d=0;d<c.length;d++){var e=c[d];"global_declaration"===e.type&&e!=a&&b.push(e.getFieldValue("NAME"))}return b};
Blockly.FieldLexicalVariable.prototype.getNamesInScope=function(){return Blockly.FieldLexicalVariable.getNamesInScope(this.block_)};Blockly.FieldLexicalVariable.getNamesInScope=function(a){var b=Blockly.FieldLexicalVariable.getGlobalNames(),b=Blockly.LexicalVariable.sortAndRemoveDuplicates(b),a=Blockly.FieldLexicalVariable.getLexicalNamesInScope(a);return b.map(Blockly.prefixGlobalMenuName).concat(a)};
Blockly.FieldLexicalVariable.getLexicalNamesInScope=function(a){function b(a,b,c){b.push(a);j[a]||(j[a]=c)}var c=[],d=[],e=[],f=[],g=[],h=[],j={},k;if(h=a)if(a=h.getParent())for(;a;){if("procedures_defnoreturn"===a.type||"procedures_defreturn"===a.type){h=a.declaredNames();for(k=0;k<h.length;k++)b(h[k],c,Blockly.procedureParameterPrefix)}else if("Component"===a.category&&a.getEventTypeObject&&a.declaredNames){h=a.declaredNames();for(k=0;k<h.length;k++)b(h[k],d,Blockly.handlerParameterPrefix)}else if("controls_forEach"===
a.type&&a.getInputTargetBlock("DO")==h)h=a.getFieldValue("VAR"),b(h,e,Blockly.loopParameterPrefix);else if("controls_forRange"===a.type&&a.getInputTargetBlock("DO")==h)h=a.getFieldValue("VAR"),b(h,f,Blockly.loopRangeParameterPrefix);else if("local_declaration_expression"===a.type&&a.getInputTargetBlock("RETURN")==h||"local_declaration_statement"===a.type&&a.getInputTargetBlock("STACK")==h){h=a.declaredNames();for(k=0;k<h.length;k++)b(h[k],g,Blockly.localNamePrefix)}h=a;a=a.getParent()}Blockly.usePrefixInYail?
(h=c.map(Blockly.possiblyPrefixMenuNameWith(Blockly.procedureParameterPrefix)).concat(d.map(Blockly.possiblyPrefixMenuNameWith(Blockly.handlerParameterPrefix))).concat(e.map(Blockly.possiblyPrefixMenuNameWith(Blockly.loopParameterPrefix))).concat(f.map(Blockly.possiblyPrefixMenuNameWith(Blockly.loopRangeParameterPrefix))).concat(g.map(Blockly.possiblyPrefixMenuNameWith(Blockly.localNamePrefix))),h=Blockly.LexicalVariable.sortAndRemoveDuplicates(h)):(h=c.concat(d).concat(e).concat(f).concat(g),h=Blockly.LexicalVariable.sortAndRemoveDuplicates(h),
h=h.map(function(a){return Blockly.possiblyPrefixMenuNameWith(j[a])(a)}));return h};Blockly.FieldLexicalVariable.dropdownCreate=function(){var a=this.getNamesInScope(),b=[];0==a.length&&(a=[" "]);for(var c=0;c<a.length;c++)b[c]=[a[c],a[c]];return b};Blockly.FieldLexicalVariable.dropdownChange=function(a){a&&(this.setText(a),Blockly.WarningHandler.checkErrors.call(this.sourceBlock_))};
Blockly.FieldLexicalVariable.nameNotIn=function(a,b){for(var c=Blockly.FieldLexicalVariable.prefixSuffix(a),d=c[0],c=c[1],e=!1,f=!1,g=[],h=0;h<b.length;h++){var j=Blockly.FieldLexicalVariable.prefixSuffix(b[h]),k=j[1];j[0]===d&&(k===c&&(f=!0),""===k?e=!0:g.push(k))}if(f){if(e){c=g.map(function(a){return parseInt(a,10)});c.sort(function(a,b){return a-b});e=2;for(f=0;f<c.length&&!(e<c[f]);)e==c[f]&&e++,f++;return d+e}return d}return a};
Blockly.FieldLexicalVariable.prefixSuffix=function(a){var b=a.match(/^(.*?)(\d+)$/);return b?[b[1],b[2]]:[a,""]};Blockly.LexicalVariable={};
Blockly.LexicalVariable.renameGlobal=function(a){var b=this.text_,a=Blockly.LexicalVariable.makeLegalIdentifier(a),c=Blockly.FieldLexicalVariable.getGlobalNames(this.sourceBlock_),a=Blockly.FieldLexicalVariable.nameNotIn(a,c);if(a!==b&&this.sourceBlock_.rendered&&Blockly.mainWorkspace)for(var c=Blockly.mainWorkspace.getAllBlocks(),d=0;d<c.length;d++){var e=c[d],f=e.renameLexicalVar;f&&f.call(e,Blockly.globalNamePrefix+Blockly.menuSeparator+b,Blockly.globalNamePrefix+Blockly.menuSeparator+a)}return a};
Blockly.LexicalVariable.renameParam=function(a){var b=Blockly.FieldTextInput.htmlInput_;if(b&&b.defaultValue==a)return a;b=this.text_;a=Blockly.LexicalVariable.makeLegalIdentifier(a);return Blockly.LexicalVariable.renameParamFromTo(this.sourceBlock_,b,a,!1)};
Blockly.LexicalVariable.renameParamFromTo=function(a,b,c,d){return a.type&&-1!=a.type.indexOf("mutator")?Blockly.LexicalVariable.renameParamWithoutRenamingCapturables(a,b,c,[]):d?(Blockly.LexicalVariable.renameParamRenamingCapturables(a,b,c),c):Blockly.LexicalVariable.renameParamWithoutRenamingCapturables(a,b,c,[])};
Blockly.LexicalVariable.renameParamRenamingCapturables=function(a,b,c){if(c!==b){var d=a.declaredNames?a.declaredNames():[];if(-1==d.indexOf(b))throw"Blockly.LexicalVariable.renamingCapturables: oldName "+b+" is not in declarations {"+d.join(",")+"}";var e=Blockly.FieldLexicalVariable.getNamesInScope(a),d=d.concat(e);if(-1!=d.indexOf(c))throw"Blockly.LexicalVariable.renameParamRenamingCapturables: newName "+c+" is in existing declarations {"+d.join(",")+"}";if(a.renameBound)b=Blockly.Substitution.simpleSubstitution(b,
c),c=new Blockly.Substitution,a.renameBound(b,c);else throw"Blockly.LexicalVariable.renameParamRenamingCapturables: block "+a.type+" is not a declaration block.";}};Blockly.LexicalVariable.renameFree=function(a,b){a&&(a.renameFree?a.renameFree(b):a.getChildren().map(function(a){Blockly.LexicalVariable.renameFree(a,b)}))};
Blockly.LexicalVariable.freeVariables=function(a){var b=[];a?a.freeVariables?b=a.freeVariables():(a=a.getChildren().map(function(a){return Blockly.LexicalVariable.freeVariables(a)}),b=Blockly.NameSet.unionAll(a)):b=new Blockly.NameSet;return b};
Blockly.LexicalVariable.renameParamWithoutRenamingCapturables=function(a,b,c,d){if(b===c)return b;a.declaredNames&&a.declaredNames();var e="";if(Blockly.showPrefixToUser)if("procedures_mutatorarg"==a.type||"procedures_defnoreturn"==a.type||"procedures_defreturn"==a.type)e=Blockly.procedureParameterPrefix;else if("controls_forEach"==a.type)e=Blockly.loopParameterPrefix;else if("controls_forRange"==a.type)e=Blockly.loopRangeParameterPrefix;else if("local_declaration_statement"==a.type||"local_declaration_expression"==
a.type||"local_mutatorarg"==a.type)e=Blockly.localNamePrefix;var f=Blockly.LexicalVariable.renameParamWithoutRenamingCapturablesInfo(a,b,e),g=f[0],h=f[1],f=[];a.declaredNames&&(f=a.declaredNames(),a=f.indexOf(b),-1!=a&&f.splice(a,1),-1!=d.indexOf(c)&&(d=f.indexOf(c),-1!=d&&f.splice(d,1)));d=Blockly.LexicalVariable.sortAndRemoveDuplicates(h.concat(f));c=Blockly.FieldLexicalVariable.nameNotIn(c,d);if(c!==b&&-1==f.indexOf(b))for(f=0;f<g.length;f++)d=g[f],(h=d.renameLexicalVar)&&h.call(d,Blockly.possiblyPrefixMenuNameWith(e)(b),
Blockly.possiblyPrefixMenuNameWith(e)(c));return c};Blockly.LexicalVariable.renameParamWithoutRenamingCapturablesInfo=function(a,b,c){var d=[];a.blocksInScope&&(d=a.blocksInScope());for(var a=d.map(function(a){return Blockly.LexicalVariable.referenceResult(a,b,c,[])}),d=[],e=[],f=0;f<a.length;f++)d=d.concat(a[f][0]),e=e.concat(a[f][1]);e=Blockly.LexicalVariable.sortAndRemoveDuplicates(e);return[d,e]};
Blockly.LexicalVariable.checkIdentifier=function(a){a=a.trim().replace(/[\s\xa0]+/g,"_");return{isLegal:0==a.search(/^[^-0-9!&%^/>=<`'"#:;,\\\^\*\+\.\(\)\|\{\}\[\]\ ][^-!&%^/>=<'"#:;,\\\^\*\+\.\(\)\|\{\}\[\]\ ]*$/),transformed:a}};Blockly.LexicalVariable.makeLegalIdentifier=function(a){a=Blockly.LexicalVariable.checkIdentifier(a);return a.isLegal?a.transformed:""===a.transformed?"_":"name"};
Blockly.LexicalVariable.referenceResult=function(a,b,c,d){if(!a)return[[],[]];var e=[];if("controls_forEach"===a.type){var f=a.getFieldValue("VAR");Blockly.usePrefixInYail&&(f=Blockly.possiblyPrefixMenuNameWith(Blockly.loopParameterPrefix)(f));var f=d.concat([f]),e=Blockly.LexicalVariable.referenceResult(a.getInputTargetBlock("LIST"),b,c,d),f=Blockly.LexicalVariable.referenceResult(a.getInputTargetBlock("DO"),b,c,f),g=Blockly.LexicalVariable.referenceResult(Blockly.LexicalVariable.getNextTargetBlock(a),
b,c,d),e=[e,f,g]}else if("controls_forRange"===a.type){f=a.getFieldValue("VAR");Blockly.usePrefixInYail&&(f=Blockly.possiblyPrefixMenuNameWith(Blockly.loopRangeParameterPrefix)(f));var f=d.concat([f]),e=Blockly.LexicalVariable.referenceResult(a.getInputTargetBlock("START"),b,c,d),h=Blockly.LexicalVariable.referenceResult(a.getInputTargetBlock("END"),b,c,d),j=Blockly.LexicalVariable.referenceResult(a.getInputTargetBlock("STEP"),b,c,d),f=Blockly.LexicalVariable.referenceResult(a.getInputTargetBlock("DO"),
b,c,f),g=Blockly.LexicalVariable.referenceResult(Blockly.LexicalVariable.getNextTargetBlock(a),b,c,d),e=[e,h,j,f,g]}else if("local_declaration_statement"===a.type||"local_declaration_expression"===a.type){f=[];for(e=0;a.getInput("DECL"+e);e++)g=a.getFieldValue("VAR"+e),Blockly.usePrefixInYail&&(g=Blockly.possiblyPrefixMenuNameWith(Blockly.localNamePrefix)(g)),f.push(g);f=d.concat(f);g=[];for(e=0;a.getInput("DECL"+e);e++)(h=a.getInputTargetBlock("DECL"+e))&&g.push(h);e=g.map(function(a){return Blockly.LexicalVariable.referenceResult(a,
b,c,d)});"local_declaration_statement"===a.type?(f=Blockly.LexicalVariable.referenceResult(a.getInputTargetBlock("STACK"),b,c,f),g=Blockly.LexicalVariable.referenceResult(Blockly.LexicalVariable.getNextTargetBlock(a),b,c,d),e=e.concat([f,g])):(f=Blockly.LexicalVariable.referenceResult(a.getInputTargetBlock("RETURN"),b,c,f),e=e.concat([f]))}else e=a.getChildren().map(function(a){return Blockly.LexicalVariable.referenceResult(a,b,c,d)});f=[];g=[];for(h=0;h<e.length;h++)f=f.concat(e[h][0]),g=g.concat(e[h][1]);
if("lexical_variable_get"===a.type||"lexical_variable_set"===a.type)if(h=a.getFieldValue("VAR"),j=Blockly.unprefixName(h),e=j[0],j=j[1],h=Blockly.usePrefixInYail&&-1==d.indexOf(h)||!Blockly.usePrefixInYail&&-1==d.indexOf(j),e!==Blockly.globalNamePrefix)if(j===b&&h)if(f.push(a),Blockly.usePrefixInYail)for(e=0;e<d.length;e++)a=Blockly.unprefixName(d[e]),c===a[0]&&g.push(a[1]);else g=g.concat(d);else h&&(!Blockly.usePrefixInYail||c===e)&&g.push(j);return[f,g]};
Blockly.LexicalVariable.sortAndRemoveDuplicates=function(a){var b=a.sort(),c=[];if(1<=a.length){a=b[0];c.push(a);for(var d=1;d<b.length;d++)b[d]!==a&&(a=b[d],c.push(a))}return c};Blockly.LexicalVariable.getNextTargetBlock=function(a){return a&&a.nextConnection&&a.nextConnection.targetBlock()?a.nextConnection.targetBlock():null};Blockly.LexicalVariable.stringListsEqual=function(a,b){var c=a.length;if(c!==b.length)return!1;for(var d=0;d<c;d++)if(a[d]!==b[d])return!1;return!0};
Blockly.LexicalVariable.eventParamMutationToDom=function(a){a.eventparam||Blockly.LexicalVariable.getEventParam(a);if(!a.eventparam)return null;var b=document.createElement("mutation"),c=document.createElement("eventparam");c.setAttribute("name",a.eventparam);b.appendChild(c);return b};
Blockly.LexicalVariable.getEventParam=function(a){if(void 0!==a.eventparam)return a.eventparam;a.eventparam=null;var b=Blockly.unprefixName(a.getFieldValue("VAR"));if(b[0]!==Blockly.globalNamePrefix){for(var b=b[1],c=a,d=a.getParent();d;){if("component_event"===d.type){c=d.getParameters().map(function(a){return a.name});b=c.map(function(a){return window.parent.BlocklyPanel_getLocalizedParameterName(a)}).indexOf(b);-1!=b&&(a.eventparam=c[b]);break}else if("local_declaration_expression"===d.type&&d.getInputTargetBlock("RETURN")==
c||"local_declaration_statement"===d.type&&d.getInputTargetBlock("STACK")==c){if(-1!=d.declaredNames().indexOf(b))break}else if(("controls_forEach"===d.type||"controls_forRange"===d.type)&&d.getInputTargetBlock("DO")==c&&d.getFieldValue("VAR")==b)break;c=d;d=d.getParent()}return null}};Blockly.LexicalVariable.eventParamDomToMutation=function(a,b){var c=goog.dom.getChildren(b);1==c.length&&(c=c[0],"eventparam"==c.nodeName.toLowerCase()&&(c=c.getAttribute("name"),a.eventparam=c))};
Blockly.LexicalVariable.eventParameterDict=function(a){for(var b={},a=a.getDescendants(),c=0,d;d=a[c];c++)d.eventparam&&(b[d.eventparam]=d.getFieldValue("VAR"));return b};/*

 @fileoverview Visual blocks editor for App Inventor
 Methods to handle serialization of the blocks workspace

 @author sharon@google.com (Sharon Perl)
*/
Blockly.FieldProcedure={};Blockly.AIProcedure={};Blockly.FieldProcedure.defaultValue=["","none"];Blockly.FieldProcedure.onChange=function(a){var b=this.block.workspace;if(this.block.editable_){if(""==a||a!=this.getValue())for(var c=0;null!=this.block.getInput("ARG"+c);c++)this.block.removeInput("ARG"+c);this.setValue(a);(a=Blockly.Procedures.getDefinition(a,b))&&this.block.setProcedureParameters(a.arguments_,a.paramIds_,!0)}};
Blockly.AIProcedure.getProcedureNames=function(a){for(var b=Blockly.mainWorkspace.getTopBlocks(),c=[Blockly.FieldProcedure.defaultValue],d=0;d<b.length;d++){var e=b[d].getFieldValue("NAME");"procedures_defnoreturn"==b[d].type&&!a?c.push([e,e]):"procedures_defreturn"==b[d].type&&a&&c.push([e,e])}1<c.length&&c.splice(0,1);return c};
Blockly.AIProcedure.getProcedureDeclarationBlocks=function(a){for(var b=Blockly.mainWorkspace.getTopBlocks(),c=[],d=0;d<b.length;d++)"procedures_defnoreturn"==b[d].type&&!a?c.push(b[d]):"procedures_defreturn"==b[d].type&&a&&c.push(b[d]);return c};Blockly.AIProcedure.getAllProcedureDeclarationBlocksExcept=function(a){for(var b=Blockly.mainWorkspace.getTopBlocks(),c=[],d=0;d<b.length;d++)("procedures_defnoreturn"===b[d].type||"procedures_defreturn"===b[d].type)&&b[d]!==a&&c.push(b[d]);return c};
Blockly.AIProcedure.getAllProcedureDeclarationNames=function(){return Blockly.AIProcedure.getAllProcedureDeclarationBlocks().map(function(a){return a.getFieldValue("NAME")})};Blockly.AIProcedure.removeProcedureValues=function(a,b){if(b&&b===Blockly.mainWorkspace)for(var c=b.getAllBlocks(),d=0;d<c.length;d++){var e=c[d];("procedures_callreturn"==e.type||"procedures_callnoreturn"==e.type)&&e.getFieldValue("PROCNAME")==a&&e.removeProcedureValue()}};
Blockly.AIProcedure.renameProcedure=function(a){for(var b=this.text_,a=Blockly.LexicalVariable.makeLegalIdentifier(a),c=Blockly.AIProcedure.getAllProcedureDeclarationBlocksExcept(this.sourceBlock_).map(function(a){return a.getFieldValue("NAME")}),a=Blockly.FieldLexicalVariable.nameNotIn(a,c),c=this.sourceBlock_.workspace.getAllBlocks(),d=0;d<c.length;d++){var e=c[d].renameProcedure;e&&e.call(c[d],b,a)}return a};/*

 @fileoverview Visual blocks editor for App Inventor
 FieldTextBlockInput is a subclass of FieldTextInput

 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.FieldTextBlockInput=function(a,b){Blockly.FieldTextInput.call(this,a);this.changeHandler_=b};goog.inherits(Blockly.FieldTextBlockInput,Blockly.FieldTextInput);Blockly.FieldTextBlockInput.prototype.setText=function(a){if(this.changeHandler_){var b=this.changeHandler_(a);null!==b&&void 0!==b&&(a=b)}this.sourceBlock_&&this.sourceBlock_.outputConnection&&this.sourceBlock_.outputConnection.setCheck(this.sourceBlock_.outputConnection.check_);Blockly.Field.prototype.setText.call(this,a)};/*

 @fileoverview Visual blocks editor for App Inventor
 Methods to handle warnings in the block editor.

 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.WarningIndicator=function(a){this.workspace_=a};Blockly.WarningIndicator.prototype.INDICATOR_HEIGHT_=40;Blockly.WarningIndicator.prototype.MARGIN_BOTTOM_=35;Blockly.WarningIndicator.prototype.MARGIN_SIDE_=35;Blockly.WarningIndicator.prototype.svgGroup_=null;Blockly.WarningIndicator.prototype.left_=0;Blockly.WarningIndicator.prototype.top_=0;
Blockly.WarningIndicator.prototype.createDom=function(){this.svgGroup_=Blockly.createSvgElement("g",{},null);this.warningCount_=Blockly.createSvgElement("text",{fill:"black",transform:"translate(20,14)"},this.svgGroup_);this.warningCount_.textContent="0";this.iconGroup_=Blockly.createSvgElement("g",{"class":"blocklyIconGroup",fill:"yellow",translate:"transform(0,0)"},this.svgGroup_);Blockly.createSvgElement("path",{"class":"blocklyWarningIconShield",d:"M 2,15 Q -1,15 0.5,12 L 6.5,1.7 Q 8,-1 9.5,1.7 L 15.5,12 Q 17,15 14,15 z"},
this.iconGroup_);this.iconMark_=Blockly.createSvgElement("text",{"class":"blocklyWarningIconMark",fill:"black",x:Blockly.ErrorIcon.ICON_RADIUS-3,y:2*Blockly.ErrorIcon.ICON_RADIUS-3},this.iconGroup_);this.iconMark_.appendChild(document.createTextNode("!"));this.errorCount_=Blockly.createSvgElement("text",{fill:"black",transform:"translate(75,14)"},this.svgGroup_);this.errorCount_.textContent="0";this.iconErrorGroup_=Blockly.createSvgElement("g",{"class":"blocklyIconGroup",fill:"red",transform:"translate(55,0)"},
this.svgGroup_);Blockly.createSvgElement("path",{"class":"blocklyErrorIconShield",d:"M 2,15 Q -1,15 0.5,12 L 6.5,1.7 Q 8,-1 9.5,1.7 L 15.5,12 Q 17,15 14,15 z",x:20},this.iconErrorGroup_);this.iconErrorMark_=Blockly.createSvgElement("text",{"class":"blocklyIconMark",x:Blockly.ErrorIcon.ICON_RADIUS,y:2*Blockly.ErrorIcon.ICON_RADIUS-3},this.iconErrorGroup_);this.iconErrorMark_.appendChild(document.createTextNode("!"));this.warningToggle_=Blockly.createSvgElement("rect",{fill:"#eeeeee",width:"120",height:"20",
x:"-15",y:"20",style:"stroke:black;stroke-width:1;cursor:pointer;"},this.svgGroup_);this.warningToggleText_=Blockly.createSvgElement("text",{fill:"black",transform:"translate(45,35)","text-anchor":"middle",style:"font-size:10pt;cursor:pointer;"},this.svgGroup_);this.warningToggleText_.textContent=Blockly.Msg.SHOW_WARNINGS;return this.svgGroup_};
Blockly.WarningIndicator.prototype.init=function(){this.position_();Blockly.bindEvent_(window,"resize",this,this.position_);Blockly.bindEvent_(this.warningToggle_,"mouseup",this,Blockly.WarningIndicator.prototype.onclickWarningToggle);Blockly.bindEvent_(this.warningToggleText_,"mouseup",this,Blockly.WarningIndicator.prototype.onclickWarningToggle)};
Blockly.WarningIndicator.prototype.dispose=function(){this.svgGroup_&&(goog.dom.removeNode(this.svgGroup_),this.svgGroup_=null);this.warningToggleText_=this.warningToggle_=this.iconErrorMark_=this.iconErrorGroup_=this.errorCount_=this.iconMark_=this.iconGroup_=this.warningCount_=this.getMetrics_=null};
Blockly.WarningIndicator.prototype.position_=function(){var a=this.workspace_.getMetrics();a&&(this.left_=Blockly.RTL?this.MARGIN_SIDE_:a.absoluteLeft+this.MARGIN_SIDE_,this.top_=a.viewHeight+a.absoluteTop-this.INDICATOR_HEIGHT_-this.MARGIN_BOTTOM_,this.svgGroup_.setAttribute("transform","translate("+this.left_+","+this.top_+")"))};
Blockly.WarningIndicator.prototype.updateWarningAndErrorCount=function(){this.errorCount_.textContent=Blockly.WarningHandler.errorCount;this.warningCount_.textContent=Blockly.WarningHandler.warningCount};Blockly.WarningIndicator.prototype.updateWarningToggleText=function(){this.warningToggleText_.textContent=Blockly.WarningHandler.showWarningsToggle?Blockly.Msg.HIDE_WARNINGS:Blockly.Msg.SHOW_WARNINGS};Blockly.WarningIndicator.prototype.onclickWarningToggle=function(){window.parent.BlocklyPanel_callToggleWarning()};/*

 @fileoverview Flydown is an abstract class for a flyout-like dropdown containing blocks.
   Unlike a regular flyout, for simplicity it does not support scrolling.
   Any non-abstract subclass must provide a flydownBlocksXML_ () method that returns an
   XML element whose children are blocks that should appear in the flyout.
 @author fturbak@wellesley.edu (Lyn Turbak)
*/
Blockly.Flydown=function(){Blockly.Flydown.superClass_.constructor.call(this)};goog.inherits(Blockly.Flydown,Blockly.Flyout);Blockly.Flydown.prototype.previousCSSClassName_="";Blockly.Flydown.prototype.VERTICAL_SEPARATION_FACTOR=1;Blockly.Flydown.prototype.createDom=function(a){this.previousCSSClassName_=a;this.svgGroup_=Blockly.createSvgElement("g",{"class":a},null);this.svgBackground_=Blockly.createSvgElement("path",{},this.svgGroup_);this.svgGroup_.appendChild(this.workspace_.createDom());return this.svgGroup_};
Blockly.Flydown.prototype.setCSSClass=function(a){a!==this.previousCSSClassName_&&(Blockly.removeClass_(this.svgGroup_,this.previousCSSClassName_),Blockly.addClass_(this.svgGroup_,a),this.previousCSSClassName_=a)};Blockly.Flydown.prototype.init=function(a){Blockly.Flyout.prototype.init.call(this,a,!1)};Blockly.Flydown.prototype.position_=function(){};
Blockly.Flydown.prototype.showAt=function(a,b,c){this.show(a);var a=this.CORNER_RADIUS,d=this.width_-2*a,e=this.height_-2*a,f=["M 0,"+a];f.push("a",a,a,0,0,1,a,-a);f.push("h",d);f.push("a",a,a,0,0,1,a,a);f.push("v",e);f.push("a",a,a,0,0,1,-a,a);f.push("h",-d);f.push("a",a,a,0,0,1,-a,-a);f.push("z");this.svgBackground_.setAttribute("d",f.join(" "));this.svgGroup_.setAttribute("transform","translate("+b+", "+c+")")};
Blockly.Flydown.prototype.reflow=function(){for(var a=0,b=0,c=this.CORNER_RADIUS,d=this.workspace_.getTopBlocks(!1),e=0,f;f=d[e];e++){f.getSvgRoot();var g=f.getHeightWidth(),a=Math.max(a,g.width),b=b+g.height}a+=2*c+Blockly.BlockSvg.TAB_WIDTH;b+=2*c+c*this.VERTICAL_SEPARATION_FACTOR*(d.length-1);if(this.width_!=a){for(e=0;f=d[e];e++){var g=f.getHeightWidth(),h=f.getRelativeToSurfaceXY();if(Blockly.RTL){var j=a-c-Blockly.BlockSvg.TAB_WIDTH-h.x;f.moveBy(j,0);h.x+=j}f.FlyoutRect_&&(f.FlyoutRect_.setAttribute("width",
g.width),f.FlyoutRect_.setAttribute("height",g.height),f.FlyoutRect_.setAttribute("x",Blockly.RTL?h.x-g.width:h.x),f.FlyoutRect_.setAttribute("y",h.y))}this.width_=a;this.height_=b}};/*

 @fileoverview Field in which mouseover displays flyout-like menu of blocks
 and mouse click edits the field name.
 Flydowns are used in App Inventor for displaying get/set blocks for parameter names
 and callers for procedure declarations.
 @author fturbak@wellesley.edu (Lyn Turbak)
*/
Blockly.FieldFlydown=function(a,b,c,d){Blockly.FieldFlydown.superClass_.constructor.call(this,a,d);this.EDITABLE=b;this.displayLocation=c;Blockly.removeClass_(this.fieldGroup_,"blocklyEditableText");Blockly.removeClass_(this.fieldGroup_,"blocklyNoNEditableText");Blockly.addClass_(this.fieldGroup_,this.fieldCSSClassName);Blockly.mainWorkspace.FieldFlydown||(a=new Blockly.Flydown,Blockly.mainWorkspace.FieldFlydown=a,b=a.createDom(this.flyoutCSSClassName),Blockly.svg.appendChild(b),a.init(Blockly.mainWorkspace,
!1),a.autoClose=!0)};goog.inherits(Blockly.FieldFlydown,Blockly.FieldTextInput);Blockly.FieldFlydown.timeout=500;Blockly.FieldFlydown.showPid_=0;Blockly.FieldFlydown.openFieldFlydown_=null;Blockly.FieldFlydown.DISPLAY_BELOW="BELOW";Blockly.FieldFlydown.DISPLAY_RIGHT="RIGHT";Blockly.FieldFlydown.DISPLAY_LOCATION=Blockly.FieldFlydown.DISPLAY_BELOW;Blockly.FieldFlydown.prototype.fieldCSSClassName="blocklyFieldFlydownField";Blockly.FieldFlydown.prototype.flyoutCSSClassName="blocklyFieldFlydownFlydown";
Blockly.FieldFlydown.prototype.showEditor_=function(){this.EDITABLE&&Blockly.FieldFlydown.superClass_.showEditor_.call(this)};Blockly.FieldFlydown.prototype.init=function(a){Blockly.FieldFlydown.superClass_.init.call(this,a);this.mouseOverWrapper_=Blockly.bindEvent_(this.fieldGroup_,"mouseover",this,this.onMouseOver_);this.mouseOutWrapper_=Blockly.bindEvent_(this.fieldGroup_,"mouseout",this,this.onMouseOut_)};
Blockly.FieldFlydown.prototype.onMouseOver_=function(a){this.sourceBlock_.isInFlyout||(Blockly.FieldFlydown.showPid_=window.setTimeout(this.showFlydownMaker_(),Blockly.FieldFlydown.timeout));a.stopPropagation()};Blockly.FieldFlydown.prototype.onMouseOut_=function(a){window.clearTimeout(Blockly.FieldFlydown.showPid_);a.stopPropagation()};
Blockly.FieldFlydown.prototype.showFlydownMaker_=function(){var a=this;return function(){0!=Blockly.FieldFlydown.showPid_&&(a.showFlydown_(),Blockly.FieldFlydown.showPid_=0)}};
Blockly.FieldFlydown.prototype.showFlydown_=function(){Blockly.hideChaff();Blockly.FieldFlydown.openFieldFlydown_=this;Blockly.mainWorkspace.FieldFlydown.setCSSClass(this.flyoutCSSClassName);var a=this.flydownBlocksXML_(),a=Blockly.Xml.textToDom(a),a=goog.dom.getChildren(a),b=Blockly.getSvgXY_(this.borderRect_),c=this.borderRect_.getBBox(),d=b.x,b=b.y;this.displayLocation===Blockly.FieldFlydown.DISPLAY_BELOW?b+=c.height:d+=c.width;Blockly.mainWorkspace.FieldFlydown.showAt(a,d,b)};
Blockly.FieldFlydown.hide=function(){window.clearTimeout(Blockly.FieldFlydown.showPid_);var a=Blockly.mainWorkspace.FieldFlydown;a&&a.hide();Blockly.FieldDropdown.openFieldFlydown_=null};Blockly.FieldFlydown.prototype.dispose=function(){Blockly.FieldFlydown.openFieldFlydown_==this&&Blockly.FieldFlydown.hide();Blockly.FieldTextInput.prototype.dispose.call(this)};/*

 @fileoverview Editable parameter field with flydown menu of a getter and setter block.
 @author fturbak@wellesley.edu (Lyn Turbak)
*/
Blockly.FieldParameterFlydown=function(a,b,c,d){Blockly.FieldParameterFlydown.superClass_.constructor.call(this,a,b,c,function(a){Blockly.FieldParameterFlydown.changeHandlerEnabled&&(a=Blockly.LexicalVariable.renameParam.call(this,a),d&&d.call(this,a));return a})};goog.inherits(Blockly.FieldParameterFlydown,Blockly.FieldFlydown);Blockly.FieldParameterFlydown.prototype.fieldCSSClassName="blocklyFieldParameter";Blockly.FieldParameterFlydown.prototype.flyoutCSSClassName="blocklyFieldParameterFlydown";
Blockly.FieldParameterFlydown.changeHandlerEnabled=!0;Blockly.FieldParameterFlydown.withChangeHanderDisabled=function(a){var b=Blockly.FieldParameterFlydown.changeHandlerEnabled;Blockly.FieldParameterFlydown.changeHandlerEnabled=!1;try{a()}finally{Blockly.FieldParameterFlydown.changeHandlerEnabled=b}};Blockly.FieldParameterFlydown.prototype.setText=function(a){this.alreadySettingText||(this.alreadySettingText=!0,Blockly.FieldTextInput.prototype.setText.call(this,a),this.alreadySettingText=!1)};
Blockly.FieldParameterFlydown.prototype.flydownBlocksXML_=function(){var a=this.getText();return'<xml><block type="lexical_variable_get"><title name="VAR">'+a+'</title></block><block type="lexical_variable_set"><title name="VAR">'+a+"</title></block></xml>"};
Blockly.FieldParameterFlydown.addHorizontalVerticalOption=function(a,b){var c=0;a.getParameters&&(c=a.getParameters().length);if(Blockly.collapse&&!this.collapsed&&0<c){for(var d={enabled:!0,text:a.horizontalParameters?Blockly.MSG_VERTICAL_PARAMETERS:Blockly.MSG_HORIZONTAL_PARAMETERS,callback:function(){a.setParameterOrientation(!a.horizontalParameters)}},e=0,c=null;(c=b[e])&&c.text!==Blockly.MSG_COLLAPSE_BLOCK;e++);e<b.length&&b.splice(e,0,d);d=-1;e=0;for(c=null;c=b[e];e++)if(c.text===Blockly.MSG_INLINE_INPUTS){d=
e;break}0<=d&&b.splice(d,1)}};/*

 @fileoverview Clickable field with flydown menu of global getter and setter blocks.
 @author fturbak@wellesley.edu (Lyn Turbak)
*/
Blockly.FieldGlobalFlydown=function(a,b){Blockly.FieldGlobalFlydown.superClass_.constructor.call(this,a,!0,b,Blockly.LexicalVariable.renameGlobal)};goog.inherits(Blockly.FieldGlobalFlydown,Blockly.FieldFlydown);Blockly.FieldGlobalFlydown.prototype.fieldCSSClassName="blocklyFieldParameter";Blockly.FieldGlobalFlydown.prototype.flyoutCSSClassName="blocklyFieldParameterFlydown";
Blockly.FieldGlobalFlydown.prototype.flydownBlocksXML_=function(){var a=Blockly.globalNamePrefix+" "+this.getText();return'<xml><block type="lexical_variable_get"><title name="VAR">'+a+'</title></block><block type="lexical_variable_set"><title name="VAR">'+a+"</title></block></xml>"};/*

 @fileoverview Editable procedure name field with flydown containing procedure caller block.
 @author fturbak@wellesley.edu (Lyn Turbak)
*/
Blockly.FieldProcedureFlydown=function(a,b){Blockly.FieldProcedureFlydown.superClass_.constructor.call(this,a,!0,b)};goog.inherits(Blockly.FieldProcedureFlydown,Blockly.FieldFlydown);Blockly.FieldProcedureFlydown.prototype.fieldCSSClassName="blocklyFieldProcedure";Blockly.FieldProcedureFlydown.prototype.flyoutCSSClassName="blocklyFieldProcedureFlydown";
Blockly.FieldProcedureFlydown.prototype.createBlocks_=function(){var a=this.getText(),b=new Blockly.Block.obtain(Blockly.mainWorkspace,"variables_get");b.setFieldValue(a,"VAR");var c=new Blockly.Block.obtain(Blockly.mainWorkspace,"variables_set");c.setFieldValue(a,"VAR");return[b,c]};Blockly.NameSet=function(a){a||(a=[]);this.elements={};for(var b=0,c;c=a[b];b++)this.elements[c]=!0};Blockly.NameSet.prototype.isMember=function(a){return!!this.elements[a]};Blockly.NameSet.prototype.isEmpty=function(){for(var a in this.elements)return!1;return!0};Blockly.NameSet.prototype.size=function(){var a=0,b;for(b in this.elements)a++;return a};Blockly.NameSet.prototype.toList=function(){var a=[],b;for(b in this.elements)a.push(b);return a.sort()};
Blockly.NameSet.prototype.toString=function(){return"Blockly.NameSet{"+this.toList().join(",")+"}"};Blockly.NameSet.prototype.copy=function(){var a=new Blockly.NameSet,b;for(b in this.elements)a.insert(b);return a};Blockly.NameSet.prototype.mirror=function(a){for(var b in this.elements)delete this.elements[b];for(b in a.elements)this.elements[b]=!0};Blockly.NameSet.prototype.insert=function(a){this.elements[a]=!0};Blockly.NameSet.prototype.deleteName=function(a){delete this.elements[a]};
Blockly.NameSet.prototype.unite=function(a){for(var b in a.elements)this.elements[b]=!0};Blockly.NameSet.prototype.intersect=function(a){for(var b in this.elements)a.elements[b]||delete this.elements[b]};Blockly.NameSet.prototype.subtract=function(a){for(var b in this.elements)a.elements[b]&&delete this.elements[b]};Blockly.NameSet.prototype.rename=function(a){this.mirror(this.renamed(a))};Blockly.NameSet.prototype.insertion=function(a){var b=this.copy();b.insert(a);return b};
Blockly.NameSet.prototype.deletion=function(a){var b=this.copy();b.deleteName(a);return b};Blockly.NameSet.prototype.union=function(a){var b=this.copy();b.unite(a);return b};Blockly.NameSet.prototype.intersection=function(a){var b=this.copy();b.intersect(a);return b};Blockly.NameSet.prototype.difference=function(a){var b=this.copy();b.subtract(a);return b};Blockly.NameSet.prototype.renamed=function(a){var b=new Blockly.NameSet,c;for(c in this.elements){var d=a.apply(c);d?b.insert(d):b.insert(c)}return b};
Blockly.NameSet.unionAll=function(a){for(var b=new Blockly.NameSet,c=0,d;d=a[c];c++)b.unite(d);return b};Blockly.NameSet.intersectAll=function(a){if(0==a.length)return new Blockly.NameSet;for(var b=a[0],c=1,d;d=a[c];c++)b.intersect(d);return b};Blockly.Substitution=function(a,b){this.bindings={};if(Blockly.Substitution.isAllStringsArray(b)&&Blockly.Substitution.isAllStringsArray(a)&&a.length===b.length)for(var c=0;c<a.length;c++)this.bindings[a[c]]=b[c];else if(!b&&Blockly.Substitution.isBindingsObject(a))for(c in this.bindings={},a)this.bindings[c]=a[c]};Blockly.Substitution.isAllStringsArray=function(a){if("object"!==typeof a||!a.length)return!1;for(var b=0;b<a.length;b++)if("string"!==typeof a[b])return!1;return!0};
Blockly.Substitution.isBindingsObject=function(a){if("object"!=typeof a)return!1;for(var b in a)if("string"!==typeof b||!typeof("string"===a[b]))return!1;return!0};Blockly.Substitution.simpleSubstitution=function(a,b){var c={};c[a]=b;return new Blockly.Substitution(c)};Blockly.Substitution.prototype.apply=function(a){var b=this.bindings[a];return b?b:a};Blockly.Substitution.prototype.map=function(a){thisSubst=this;return a.map(function(a){return thisSubst.apply(a)})};
Blockly.Substitution.prototype.toString=function(){var a=[],b;for(b in this.bindings)a.push(b+":"+this.bindings[b]);return"Blockly.Substitution{"+a.sort().join(",")+"}"};Blockly.Substitution.prototype.copy=function(){var a=new Blockly.Substitution,b;for(b in this.bindings)a.bindings[b]=this.bindings[b];return a};Blockly.Substitution.prototype.restrictDomain=function(a){for(var b=new Blockly.Substitution,c=0;c<a.length;c++){var d=this.bindings[a[c]];d&&(b.bindings[a[c]]=d)}return b};
Blockly.Substitution.prototype.remove=function(a){var b=new Blockly.Substitution,c;for(c in this.bindings)-1==a.indexOf(c)&&(b.bindings[c]=this.bindings[c]);return b};Blockly.Substitution.prototype.extend=function(a){var b=this.copy(),c;for(c in a.bindings)b.bindings[c]=a.bindings[c];return b};Blockly.Substitution.prototype.domain=function(){var a=[],b;for(b in this.bindings)a.push(b);return a.sort()};
Blockly.Substitution.prototype.getBindings=function(){var a={},b;for(b in this.bindings)a[b]=this.bindings[b];return a};/*

 @fileoverview Visual blocks editor for App Inventor
 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.language_switch={switchLanguage:function(a){if(Blockly.mainWorkspace){var b=Blockly.Xml.workspaceToDom(Blockly.mainWorkspace);Blockly.mainWorkspace.clear()}switch(a){case "ko_KR":Blockly.Msg.ko_kr.switch_language_to_korean.init();break;case "es_ES":Blockly.Msg.es_es.switch_language_to_spanish_es.init();break;case "zh_TW":Blockly.Msg.zh_tw.switch_language_to_chinese_tw.init();break;case "zh_CN":Blockly.Msg.zh_cn.switch_language_to_chinese_cn.init();break;case "fr_FR":Blockly.Msg.fr_fr.switch_language_to_french.init();
break;case "it_IT":Blockly.Msg.it_it.switch_language_to_italian.init();break;case "ru":Blockly.Msg.ru.switch_language_to_russian.init();break;case "en_US":Blockly.Msg.en.switch_language_to_english.init();break;default:Blockly.Msg.en.switch_language_to_english.init();break;case "sv":Blockly.Msg.sv.switch_language_to_swedish.init()}Blockly.mainWorkspace&&Blockly.Xml.domToWorkspace(Blockly.mainWorkspace,b)}};var language=window.parent.__gwt_Locale;Blockly.language_switch.switchLanguage(language);Blockly.Blocks.Utilities={};Blockly.Blocks.Utilities.InstantInTime=function(){return"InstantInTime"};
Blockly.Blocks.Utilities.YailTypeToBlocklyTypeMap={number:{input:"Number",output:["Number","String"]},text:{input:"String",output:["Number","String"]},"boolean":{input:"Boolean",output:["Boolean","String"]},list:{input:"Array",output:["Array","String"]},component:{input:"COMPONENT",output:"COMPONENT"},InstantInTime:{input:Blockly.Blocks.Utilities.InstantInTime,output:Blockly.Blocks.Utilities.InstantInTime},any:{input:null,output:null}};Blockly.Blocks.Utilities.OUTPUT=1;
Blockly.Blocks.Utilities.INPUT=0;Blockly.Blocks.Utilities.YailTypeToBlocklyType=function(a,b){var c=Blockly.Blocks.Utilities.YailTypeToBlocklyTypeMap[a][b==Blockly.Blocks.Utilities.OUTPUT?"output":"input"];if(null!==c||"any"==a)return c;throw Error("Unknown Yail type: "+a+" -- YailTypeToBlocklyType");};Blockly.Blocks.Utilities.setTooltip=function(a,b){a.setTooltip(Blockly.Blocks.Utilities.wrapSentence(b,60))};
Blockly.Blocks.Utilities.wrapSentence=function(a,b){a=a.trim();if(a.length<b)return a;var c=a.lastIndexOf(" ",b);return-1==c?a.substring(0,b).trim()+Blockly.Blocks.Utilities.wrapSentence(a.substring(b),b):a.substring(0,c).trim()+"\n"+Blockly.Blocks.Utilities.wrapSentence(a.substring(c),b)};Blockly.Blocks.Utilities.times_symbol="×";Blockly.Blocks.control={};
Blockly.Blocks.controls_if={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_IF_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendValueInput("IF0").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_IF_MSG_IF);this.appendStatementInput("DO0").appendField(Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["controls_if_elseif","controls_if_else"]));
var a=this;this.setTooltip(function(){return!a.elseifCount_&&!a.elseCount_?Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1:!a.elseifCount_&&a.elseCount_?Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2:a.elseifCount_&&!a.elseCount_?Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3:a.elseifCount_&&a.elseCount_?Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4:""});this.elseCount_=this.elseifCount_=0;this.warnings=[{name:"checkEmptySockets",sockets:[{baseName:"IF"},{baseName:"DO"}]}]},mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;
var a=document.createElement("mutation");this.elseifCount_&&a.setAttribute("elseif",this.elseifCount_);this.elseCount_&&a.setAttribute("else",1);return a},domToMutation:function(a){this.elseifCount_=null===a.getAttribute("elseif")?0:window.parseInt(a.getAttribute("elseif"),10);this.elseCount_=window.parseInt(a.getAttribute("else"),10);for(a=1;a<=this.elseifCount_;a++)this.appendValueInput("IF"+a).setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF),
this.appendStatementInput("DO"+a).appendField(Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN);this.elseCount_&&this.appendStatementInput("ELSE").appendField(Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE)},decompose:function(a){var b=new Blockly.Block.obtain(a,"controls_if_if");b.initSvg();for(var c=b.getInput("STACK").connection,d=1;d<=this.elseifCount_;d++){var e=new Blockly.Block.obtain(a,"controls_if_elseif");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}this.elseCount_&&(a=new Blockly.Block.obtain(a,
"controls_if_else"),a.initSvg(),c.connect(a.previousConnection));return b},compose:function(a){this.elseCount_&&this.removeInput("ELSE");this.elseCount_=0;for(var b=this.elseifCount_;0<b;b--)this.removeInput("IF"+b),this.removeInput("DO"+b);this.elseifCount_=0;for(a=a.getInputTargetBlock("STACK");a;){switch(a.type){case "controls_if_elseif":this.elseifCount_++;var b=this.appendValueInput("IF"+this.elseifCount_).setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF),
c=this.appendStatementInput("DO"+this.elseifCount_);c.appendField(Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN);a.valueConnection_&&b.connection.connect(a.valueConnection_);a.statementConnection_&&c.connection.connect(a.statementConnection_);break;case "controls_if_else":this.elseCount_++;b=this.appendStatementInput("ELSE");b.appendField(Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE);a.statementConnection_&&b.connection.connect(a.statementConnection_);break;default:throw"Unknown block type.";}a=a.nextConnection&&
a.nextConnection.targetBlock()}},saveConnections:function(a){for(var b=a.getInputTargetBlock("STACK"),c=1;b;){switch(b.type){case "controls_if_elseif":var d=this.getInput("IF"+c),a=this.getInput("DO"+c);b.valueConnection_=d&&d.connection.targetConnection;b.statementConnection_=a&&a.connection.targetConnection;c++;break;case "controls_if_else":a=this.getInput("ELSE");b.statementConnection_=a&&a.connection.targetConnection;break;default:throw"Unknown block type.";}b=b.nextConnection&&b.nextConnection.targetBlock()}},
typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF}]};Blockly.Blocks.controls_if_if={init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF);this.appendStatementInput("STACK");this.setTooltip(Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.controls_if_elseif={init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.controls_if_else={init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE);this.setPreviousStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.controls_forRange={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendValueInput("START").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM).appendField(new Blockly.FieldParameterFlydown(Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR,!0,Blockly.FieldFlydown.DISPLAY_BELOW),"VAR").appendField(Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START).setAlign(Blockly.ALIGN_RIGHT);
this.appendValueInput("END").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END).setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("STEP").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP).setAlign(Blockly.ALIGN_RIGHT);this.appendStatementInput("DO").appendField(Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO).setAlign(Blockly.ALIGN_RIGHT);
this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP)},getVars:function(){return[this.getFieldValue("VAR")]},blocksInScope:function(){var a=this.getInputTargetBlock("DO");return a?[a]:[]},declaredNames:function(){return[this.getFieldValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setFieldValue(b,"VAR")},renameBound:function(a,b){Blockly.LexicalVariable.renameFree(this.getInputTargetBlock("START"),
b);Blockly.LexicalVariable.renameFree(this.getInputTargetBlock("END"),b);Blockly.LexicalVariable.renameFree(this.getInputTargetBlock("STEP"),b);var c=this.getFieldValue("VAR"),d=a.apply(c);d!==c?(this.renameVar(c,d),c=Blockly.Substitution.simpleSubstitution(c,d),c=b.extend(c)):c=b.remove([c]);Blockly.LexicalVariable.renameFree(this.getInputTargetBlock("DO"),c);this.nextConnection&&(c=this.nextConnection.targetBlock(),Blockly.LexicalVariable.renameFree(c,b))},renameFree:function(a){var b=this.getFieldValue("VAR"),
c=Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock("DO"));c.deleteName(b);c=c.renamed(a);c.isMember(b)?(c=Blockly.FieldLexicalVariable.nameNotIn(b,c.toList()),b=Blockly.Substitution.simpleSubstitution(b,c),this.renameBound(b,a)):this.renameBound(new Blockly.Substitution,a)},freeVariables:function(){var a=Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock("DO"));a.deleteName(this.getFieldValue("VAR"));a.unite(Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock("START")));
a.unite(Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock("END")));a.unite(Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock("STEP")));if(this.nextConnection){var b=this.nextConnection.targetBlock();a.unite(Blockly.LexicalVariable.freeVariables(b))}return a},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM}]};
Blockly.Blocks.controls_forEach={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendValueInput("LIST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM).appendField(new Blockly.FieldParameterFlydown(Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR,!0,Blockly.FieldFlydown.DISPLAY_BELOW),"VAR").appendField(Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST).setAlign(Blockly.ALIGN_RIGHT);
this.appendStatementInput("DO").appendField(Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP)},getVars:function(){return[this.getFieldValue("VAR")]},blocksInScope:function(){var a=this.getInputTargetBlock("DO");return a?[a]:[]},declaredNames:function(){return[this.getFieldValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setFieldValue(b,"VAR")},
renameBound:function(a,b){Blockly.LexicalVariable.renameFree(this.getInputTargetBlock("LIST"),b);var c=this.getFieldValue("VAR"),d=a.apply(c);d!==c?(this.renameVar(c,d),c=Blockly.Substitution.simpleSubstitution(c,d),c=b.extend(c)):c=b.remove([c]);Blockly.LexicalVariable.renameFree(this.getInputTargetBlock("DO"),c);this.nextConnection&&(c=this.nextConnection.targetBlock(),Blockly.LexicalVariable.renameFree(c,b))},renameFree:function(a){var b=this.getFieldValue("VAR"),c=Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock("DO"));
c.deleteName(b);c=c.renamed(a);c.isMember(b)?(c=Blockly.FieldLexicalVariable.nameNotIn(b,c.toList()),b=Blockly.Substitution.simpleSubstitution(b,c),this.renameBound(b,a)):this.renameBound(new Blockly.Substitution,a)},freeVariables:function(){var a=Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock("DO"));a.deleteName(this.getFieldValue("VAR"));a.unite(Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock("LIST")));if(this.nextConnection){var b=this.nextConnection.targetBlock();
a.unite(Blockly.LexicalVariable.freeVariables(b))}return a},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM}]};
Blockly.Blocks.controls_while={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendValueInput("TEST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_WHILE_TITLE).appendField(Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST).setAlign(Blockly.ALIGN_RIGHT);this.appendStatementInput("DO").appendField(Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO).setAlign(Blockly.ALIGN_RIGHT);
this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_WHILE_TITLE}]};
Blockly.Blocks.controls_choose={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.setOutput(!0,null);this.appendValueInput("TEST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE).appendField(Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST).setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("THENRETURN").appendField(Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN).setAlign(Blockly.ALIGN_RIGHT);
this.appendValueInput("ELSERETURN").appendField(Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN).setAlign(Blockly.ALIGN_RIGHT);this.setTooltip(Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE+" "+Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN+" "+Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN}]};
Blockly.Blocks.controls_do_then_return={category:"Control",helpUrl:Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendStatementInput("STM").appendField(Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO);this.appendValueInput("VALUE").appendField(Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN).setAlign(Blockly.ALIGN_RIGHT);this.setOutput(!0,null);this.setTooltip(Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE}]};
Blockly.Blocks.controls_eval_but_ignore={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendValueInput("VALUE").appendField(Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE}]};
Blockly.Blocks.controls_openAnotherScreen={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendValueInput("SCREEN").appendField(Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE).appendField(Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME).setAlign(Blockly.ALIGN_RIGHT).setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT));this.setPreviousStatement(!0);
this.setTooltip(Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE}]};
Blockly.Blocks.controls_openAnotherScreenWithStartValue={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendValueInput("SCREENNAME").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE).appendField(Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME).setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("STARTVALUE").appendField(Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE).setAlign(Blockly.ALIGN_RIGHT);
this.setPreviousStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE}]};
Blockly.Blocks.controls_getStartValue={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.setOutput(!0,null);this.appendDummyInput().appendField(Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE);this.setTooltip(Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE}]};
Blockly.Blocks.controls_closeScreen={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE);this.setPreviousStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE}]};
Blockly.Blocks.controls_closeScreenWithValue={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendValueInput("SCREEN").appendField(Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE).appendField(Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT).setAlign(Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE}]};Blockly.Blocks.controls_closeApplication={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE);this.setPreviousStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE}]};
Blockly.Blocks.controls_getPlainStartText={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.OUTPUT));this.appendDummyInput().appendField(Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE);this.setTooltip(Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE}]};
Blockly.Blocks.controls_closeScreenWithPlainText={category:"Control",helpUrl:Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL,init:function(){this.setColour(Blockly.CONTROL_CATEGORY_HUE);this.appendValueInput("TEXT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE).appendField(Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT).setAlign(Blockly.ALIGN_RIGHT);
this.setPreviousStatement(!0);this.setTooltip(Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE}]};/*

 @fileoverview Logic blocks for Blockly, modified for MIT App Inventor.
 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.Blocks.logic={};
Blockly.Blocks.logic_boolean={category:"Logic",init:function(){this.setColour(Blockly.LOGIC_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendDummyInput().appendField(new Blockly.FieldDropdown(this.OPERATORS),"BOOL");var a=this;this.setTooltip(function(){var b=a.getFieldValue("BOOL");return Blockly.Blocks.logic_boolean.TOOLTIPS()[b]})},helpUrl:function(){var a=this.getFieldValue("BOOL");return Blockly.Blocks.logic_boolean.HELPURLS()[a]},typeblock:[{translatedName:Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE,
dropDown:{titleName:"BOOL",value:"TRUE"}},{translatedName:Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE,dropDown:{titleName:"BOOL",value:"FALSE"}}]};Blockly.Blocks.logic_boolean={};Blockly.Blocks.logic_boolean.OPERATORS=function(){return[[Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE,"TRUE"],[Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE,"FALSE"]]};Blockly.Blocks.logic_boolean.TOOLTIPS=function(){return{TRUE:Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE,FALSE:Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE}};
Blockly.Blocks.logic_boolean.HELPURLS=function(){return{TRUE:Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL,FALSE:Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL}};
Blockly.Blocks.logic_false={category:"Logic",init:function(){this.setColour(Blockly.LOGIC_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendDummyInput().appendField(new Blockly.FieldDropdown(Blockly.Blocks.logic_boolean.OPERATORS),"BOOL");this.setFieldValue("FALSE","BOOL");var a=this;this.setTooltip(function(){var b=a.getFieldValue("BOOL");return Blockly.Blocks.logic_boolean.TOOLTIPS()[b]})},helpUrl:function(){var a=
this.getFieldValue("BOOL");return Blockly.Blocks.logic_boolean.HELPURLS()[a]}};
Blockly.Blocks.logic_negate={category:"Logic",helpUrl:Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL,init:function(){this.setColour(Blockly.LOGIC_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("BOOL").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT);this.setTooltip(Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT}]};
Blockly.Blocks.logic_compare={category:"Logic",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.logic_compare.HELPURLS()[a]},init:function(){this.setColour(Blockly.LOGIC_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("A");this.appendValueInput("B").appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP");this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");
return Blockly.Blocks.logic_compare.TOOLTIPS()[b]})},typeblock:[{translatedName:Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME}]};Blockly.Blocks.logic_compare.TOOLTIPS=function(){return{EQ:Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ,NEQ:Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ}};Blockly.Blocks.logic_compare.HELPURLS=function(){return{EQ:Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ,NEQ:Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ}};
Blockly.Blocks.logic_compare.OPERATORS=function(){return[[Blockly.Msg.LANG_LOGIC_COMPARE_EQ,"EQ"],[Blockly.Msg.LANG_LOGIC_COMPARE_NEQ,"NEQ"]]};
Blockly.Blocks.logic_operation={category:"Logic",init:function(){this.setColour(Blockly.LOGIC_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("A").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT));this.appendValueInput("B").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(this.OPERATORS),
"OP");this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.logic_operation.TOOLTIPS()[b]})},helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.logic_operation.HELPURLS()[a]},typeblock:[{translatedName:Blockly.Msg.LANG_LOGIC_OPERATION_AND,dropDown:{titleName:"OP",value:"AND"}},{translatedName:Blockly.Msg.LANG_LOGIC_OPERATION_OR,dropDown:{titleName:"OP",value:"OR"}}]};
Blockly.Blocks.logic_operation.OPERATORS=function(){return[[Blockly.Msg.LANG_LOGIC_OPERATION_AND,"AND"],[Blockly.Msg.LANG_LOGIC_OPERATION_OR,"OR"]]};Blockly.Blocks.logic_operation.HELPURLS=function(){return{AND:Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND,OR:Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR}};Blockly.Blocks.logic_operation.TOOLTIPS=function(){return{AND:Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND,OR:Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR}};
Blockly.Blocks.logic_or={category:"Logic",init:function(){this.setColour(Blockly.LOGIC_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("A").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT));this.appendValueInput("B").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(Blockly.Blocks.logic_operation.OPERATORS),
"OP");this.setFieldValue("OR","OP");this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.logic_operation.TOOLTIPS[b]})},helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.logic_operation.HELPURLS[a]}};/*

 @fileoverview Text blocks for Blockly, modified for MIT App Inventor.
 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.Blocks.text={};Blockly.Blocks.text={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_TEXT_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE).appendField(new Blockly.FieldTextBlockInput(""),"TEXT").appendField(Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE);this.setOutput(!0,[Blockly.Blocks.text.connectionCheck]);this.setTooltip(Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_CATEGORY_TEXT}]};
Blockly.Blocks.text.connectionCheck=function(a,b){for(var c=a.sourceBlock_,d=b.check_,e=0;e<d.length;e++)if("String"==d[e]||"Number"==d[e]&&!isNaN(parseFloat(c.getFieldValue("TEXT"))))return!0;return!1};
Blockly.Blocks.text_join={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_JOIN_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("ADD0").appendField(Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN);this.appendValueInput("ADD1");this.setTooltip(Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP);this.setMutator(new Blockly.Mutator(["text_join_item"]));this.emptyInputName="EMPTY";this.repeatingInputName=
"ADD";this.itemCount_=2},mutationToDom:Blockly.mutationToDom,domToMutation:Blockly.domToMutation,decompose:function(a){return Blockly.decompose(a,"text_join_item",this)},compose:Blockly.compose,saveConnections:Blockly.saveConnections,addEmptyInput:function(){this.appendDummyInput(this.emptyInputName).appendField(Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN)},addInput:function(a){var b=this.appendValueInput(this.repeatingInputName+a).setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT));
0===a&&b.appendField(Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN);return b},updateContainerBlock:function(a){a.inputList[0].fieldRow[0].setText(Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN)},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN}]};
Blockly.Blocks.text_join_item={init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.text_length={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_LENGTH_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("VALUE").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH);this.setTooltip(Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH}]};
Blockly.Blocks.text_isEmpty={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("VALUE").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY);this.setTooltip(Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY}]};
Blockly.Blocks.text_compare={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_COMPARE_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("TEXT1").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE);this.appendValueInput("TEXT2").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",
Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP");this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.text_compare.TOOLTIPS()[b]})},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE+Blockly.Msg.LANG_TEXT_COMPARE_LT,dropDown:{titleName:"OP",value:"LT"}},{translatedName:Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE+Blockly.Msg.LANG_TEXT_COMPARE_EQUAL,dropDown:{titleName:"OP",value:"EQUAL"}},
{translatedName:Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE+Blockly.Msg.LANG_TEXT_COMPARE_GT,dropDown:{titleName:"OP",value:"GT"}}]};Blockly.Blocks.text_compare.OPERATORS=function(){return[[Blockly.Msg.LANG_TEXT_COMPARE_LT,"LT"],[Blockly.Msg.LANG_TEXT_COMPARE_EQUAL,"EQUAL"],[Blockly.Msg.LANG_TEXT_COMPARE_GT,"GT"]]};Blockly.Blocks.text_compare.TOOLTIPS=function(){return{LT:Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT,EQUAL:Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL,GT:Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT}};
Blockly.Blocks.text_trim={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_TRIM_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("TEXT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM);this.setTooltip(Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM}]};
Blockly.Blocks.text_changeCase={category:"Text",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.text_changeCase.HELPURLS()[a]},init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("TEXT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP");
var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.text_changeCase.TOOLTIPS()[b]})},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE,dropDown:{titleName:"OP",value:"UPCASE"}},{translatedName:Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE,dropDown:{titleName:"OP",value:"DOWNCASE"}}]};
Blockly.Blocks.text_changeCase.OPERATORS=function(){return[[Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE,"UPCASE"],[Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE,"DOWNCASE"]]};Blockly.Blocks.text_changeCase.TOOLTIPS=function(){return{UPCASE:Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE,DOWNCASE:Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE}};Blockly.Blocks.text_changeCase.HELPURLS=function(){return{UPCASE:Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE,DOWNCASE:Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE}};
Blockly.Blocks.text_starts_at={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT,["TEXT",a,Blockly.ALIGN_RIGHT],["PIECE",a,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setTooltip(Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP);
this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT}]};
Blockly.Blocks.text_contains={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_TEXT_CONTAINS_INPUT,["TEXT",a,Blockly.ALIGN_RIGHT],["PIECE",a,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setTooltip(Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP);
this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS}]};
Blockly.Blocks.text_split={category:"Text",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.text_split.HELPURLS()[a]},init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("TEXT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(this.OPERATORS,Blockly.Blocks.text_split.dropdown_onchange),
"OP").appendField(Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT);this.appendValueInput("AT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT,"ARG2_NAME").setAlign(Blockly.ALIGN_RIGHT)},domToMutation:function(a){a=a.getAttribute("mode");Blockly.Blocks.text_split.adjustToMode(a,this)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("OP");a.setAttribute("mode",b);return a},
typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT,dropDown:{titleName:"OP",value:"SPLIT"}},{translatedName:Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST,dropDown:{titleName:"OP",value:"SPLITATFIRST"}},{translatedName:Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY,dropDown:{titleName:"OP",value:"SPLITATANY"}},{translatedName:Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY,dropDown:{titleName:"OP",value:"SPLITATFIRSTOFANY"}}]};
Blockly.Blocks.text_split.adjustToMode=function(a,b){if("SPLITATFIRST"==a||"SPLIT"==a)b.getInput("AT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)),b.setFieldValue(Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT,"ARG2_NAME");else if("SPLITATFIRSTOFANY"==a||"SPLITATANY"==a)b.getInput("AT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT)),b.setFieldValue(Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST,"ARG2_NAME");b.setTooltip(Blockly.Blocks.text_split.TOOLTIPS()[a])};
Blockly.Blocks.text_split.dropdown_onchange=function(a){Blockly.Blocks.text_split.adjustToMode(a,this.sourceBlock_)};Blockly.Blocks.text_split.OPERATORS=function(){return[[Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT,"SPLIT"],[Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST,"SPLITATFIRST"],[Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY,"SPLITATANY"],[Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY,"SPLITATFIRSTOFANY"]]};
Blockly.Blocks.text_split.TOOLTIPS=function(){return{SPLITATFIRST:Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST,SPLITATFIRSTOFANY:Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY,SPLIT:Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT,SPLITATANY:Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY}};
Blockly.Blocks.text_split.HELPURLS=function(){return{SPLITATFIRST:Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST,SPLITATFIRSTOFANY:Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY,SPLIT:Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT,SPLITATANY:Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY}};
Blockly.Blocks.text_split_at_spaces={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("TEXT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE);this.setTooltip(Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE}]};
Blockly.Blocks.text_segment={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.OUTPUT));var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT),b=Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_TEXT_SEGMENT_INPUT,["TEXT",
a,Blockly.ALIGN_RIGHT],["START",b,Blockly.ALIGN_RIGHT],["LENGTH",b,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setTooltip(Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP);this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT}]};
Blockly.Blocks.text_replace_all={category:"Text",helpUrl:Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL,init:function(){this.setColour(Blockly.TEXT_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.OUTPUT));var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT,["TEXT",a,Blockly.ALIGN_RIGHT],["SEGMENT",a,Blockly.ALIGN_RIGHT],["REPLACEMENT",a,Blockly.ALIGN_RIGHT],
Blockly.ALIGN_RIGHT);this.setTooltip(Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP);this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL}]};/*

 @fileoverview Lists blocks for Blockly, modified for MIT App Inventor.
 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.Blocks.lists={};
Blockly.Blocks.lists_create_with={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.appendValueInput("ADD0").appendField(Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST);this.appendValueInput("ADD1");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.OUTPUT));this.setMutator(new Blockly.Mutator(["lists_create_with_item"]));this.setTooltip(Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP);this.itemCount_=
2;this.emptyInputName="EMPTY";this.repeatingInputName="ADD"},mutationToDom:Blockly.mutationToDom,domToMutation:Blockly.domToMutation,decompose:function(a){return Blockly.decompose(a,"lists_create_with_item",this)},compose:Blockly.compose,saveConnections:Blockly.saveConnections,addEmptyInput:function(){this.appendDummyInput(this.emptyInputName).appendField(Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE)},addInput:function(a){var b=this.appendValueInput(this.repeatingInputName+a);0===a&&b.appendField(Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST);
return b},updateContainerBlock:function(a){a.setFieldValue(Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD,"CONTAINER_TEXT")},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST},{translatedName:Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE,mutatorAttributes:{items:0}}]};
Blockly.Blocks.lists_create_with_item={init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.lists_add_items={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.appendValueInput("LIST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD).appendField(Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST);this.appendValueInput("ITEM0").appendField(Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM).setAlign(Blockly.ALIGN_RIGHT);
this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP);this.setMutator(new Blockly.Mutator(["lists_add_items_item"]));this.itemCount_=1;this.emptyInputName=null;this.repeatingInputName="ITEM"},mutationToDom:Blockly.mutationToDom,domToMutation:Blockly.domToMutation,decompose:function(a){return Blockly.decompose(a,"lists_add_items_item",this)},compose:Blockly.compose,saveConnections:Blockly.saveConnections,addEmptyInput:function(){},addInput:function(a){a=
this.appendValueInput(this.repeatingInputName+a);a.appendField("item").setAlign(Blockly.ALIGN_RIGHT);return a},updateContainerBlock:function(a){a.setFieldValue(Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD,"CONTAINER_TEXT");a.setTooltip(Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD}]};
Blockly.Blocks.lists_add_items_item={init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.lists_is_in={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_IS_IN_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT),b=Blockly.Blocks.Utilities.YailTypeToBlocklyType("any",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_LISTS_IS_IN_INPUT,["ITEM",b,Blockly.ALIGN_RIGHT],["LIST",a,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",
Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP);this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN}]};
Blockly.Blocks.lists_length={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_LENGTH_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("LIST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH).appendField(Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST);this.setTooltip(Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH}]};
Blockly.Blocks.lists_is_empty={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("LIST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY).appendField(Blockly.Msg.LANG_LISTS_INPUT_LIST);this.setTooltip(Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY}]};
Blockly.Blocks.lists_pick_random_item={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,null);this.appendValueInput("LIST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM).appendField(Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST);this.setTooltip(Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM}]};
Blockly.Blocks.lists_position_in={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT),b=Blockly.Blocks.Utilities.YailTypeToBlocklyType("any",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT,
["ITEM",b,Blockly.ALIGN_RIGHT],["LIST",a,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setTooltip(Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP);this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION}]};
Blockly.Blocks.lists_select_item={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,null);var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT),b=Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT,["LIST",a,Blockly.ALIGN_RIGHT],["NUM",b,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);
this.setTooltip(Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP);this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT}]};
Blockly.Blocks.lists_insert_item={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT),b=Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT),c=Blockly.Blocks.Utilities.YailTypeToBlocklyType("any",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_LISTS_INSERT_INPUT,["LIST",a,Blockly.ALIGN_RIGHT],
["INDEX",b,Blockly.ALIGN_RIGHT],["ITEM",c,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP);this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST}]};
Blockly.Blocks.lists_replace_item={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT),b=Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT),c=Blockly.Blocks.Utilities.YailTypeToBlocklyType("any",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT,["LIST",
a,Blockly.ALIGN_RIGHT],["NUM",b,Blockly.ALIGN_RIGHT],["ITEM",c,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP);this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE}]};
Blockly.Blocks.lists_remove_item={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT),b=Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT,["LIST",a,Blockly.ALIGN_RIGHT],["INDEX",b,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);
this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP);this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE}]};
Blockly.Blocks.lists_append_list={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT,["LIST0",a,Blockly.ALIGN_RIGHT],["LIST1",a,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP);
this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND}]};
Blockly.Blocks.lists_copy={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_COPY_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("LIST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY).appendField(Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST);this.setTooltip(Blockly.Msg.LANG_LISTS_COPY_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY}]};
Blockly.Blocks.lists_is_list={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("ITEM").appendField(Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST).appendField(Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING);this.setTooltip(Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST}]};
Blockly.Blocks.lists_to_csv_row={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("LIST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV).appendField(Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST);
this.setTooltip(Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV}]};
Blockly.Blocks.lists_to_csv_table={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("LIST").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV).appendField(Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST);this.setTooltip(Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV}]};
Blockly.Blocks.lists_from_csv_row={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("TEXT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV).appendField(Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT);this.setTooltip(Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV}]};
Blockly.Blocks.lists_from_csv_table={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("TEXT").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("text",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV).appendField(Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT);this.setTooltip(Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV}]};
Blockly.Blocks.lists_lookup_in_pairs={category:"Lists",helpUrl:Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL,init:function(){this.setColour(Blockly.LIST_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("any",Blockly.Blocks.Utilities.OUTPUT));var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT);Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT);var b=Blockly.Blocks.Utilities.YailTypeToBlocklyType("any",
Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT,["KEY",b,Blockly.ALIGN_RIGHT],["LIST",a,Blockly.ALIGN_RIGHT],["NOTFOUND",b,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setTooltip(Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP);this.setInputsInline(!1)},typeblock:[{translatedName:Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS}]};/*

 @fileoverview Math blocks for Blockly, modified for MIT App Inventor.
 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.Blocks.math={};Blockly.Blocks.math_number={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_NUMBER_HELPURL,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER}]};
Blockly.Blocks.math_number.validator=function(a){a=window.parseFloat(a||0);return window.isNaN(a)?null:String(a)};
Blockly.Blocks.math_compare={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_compare.HELPURLS()[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("A").setCheck(null);this.appendValueInput("B").setCheck(null).appendField(new Blockly.FieldDropdown(this.OPERATORS,Blockly.Blocks.math_compare.onchange),"OP");this.setInputsInline(!0);
var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_compare.TOOLTIPS()[b]})},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_COMPARE_EQ,dropDown:{titleName:"OP",value:"EQ"}},{translatedName:Blockly.Msg.LANG_MATH_COMPARE_NEQ,dropDown:{titleName:"OP",value:"NEQ"}},{translatedName:Blockly.Msg.LANG_MATH_COMPARE_LT,dropDown:{titleName:"OP",value:"LT"}},{translatedName:Blockly.Msg.LANG_MATH_COMPARE_LTE,dropDown:{titleName:"OP",value:"LTE"}},{translatedName:Blockly.Msg.LANG_MATH_COMPARE_GT,
dropDown:{titleName:"OP",value:"GT"}},{translatedName:Blockly.Msg.LANG_MATH_COMPARE_GTE,dropDown:{titleName:"OP",value:"GTE"}}]};
Blockly.Blocks.math_compare.onchange=function(a){this.sourceBlock_&&("EQ"==a||"NEQ"==a?(this.sourceBlock_.getInput("A").setCheck(null),this.sourceBlock_.getInput("B").setCheck(null)):(this.sourceBlock_.getInput("A").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)),this.sourceBlock_.getInput("B").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT))))};
Blockly.Blocks.math_compare.OPERATORS=function(){return[[Blockly.Msg.LANG_MATH_COMPARE_EQ,"EQ"],[Blockly.Msg.LANG_MATH_COMPARE_NEQ,"NEQ"],[Blockly.Msg.LANG_MATH_COMPARE_LT,"LT"],[Blockly.Msg.LANG_MATH_COMPARE_LTE,"LTE"],[Blockly.Msg.LANG_MATH_COMPARE_GT,"GT"],[Blockly.Msg.LANG_MATH_COMPARE_GTE,"GTE"]]};
Blockly.Blocks.math_compare.TOOLTIPS=function(){return{EQ:Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ,NEQ:Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ,LT:Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT,LTE:Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE,GT:Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT,GTE:Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE}};
Blockly.Blocks.math_compare.HELPURLS=function(){return{EQ:Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ,NEQ:Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ,LT:Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT,LTE:Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE,GT:Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT,GTE:Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE}};
Blockly.Blocks.math_add={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM0").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT));this.appendValueInput("NUM1").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_MATH_ARITHMETIC_ADD);
this.setInputsInline(!0);this.setTooltip(function(){return Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD});this.setMutator(new Blockly.Mutator(["math_mutator_item"]));this.emptyInputName="EMPTY";this.repeatingInputName="NUM";this.itemCount_=2},mutationToDom:Blockly.mutationToDom,domToMutation:Blockly.domToMutation,decompose:function(a){return Blockly.decompose(a,"math_mutator_item",this)},compose:Blockly.compose,saveConnections:Blockly.saveConnections,addEmptyInput:function(){this.appendDummyInput(this.emptyInputName)},
addInput:function(a){var b=this.appendValueInput(this.repeatingInputName+a).setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT));0!==a&&b.appendField(Blockly.Msg.LANG_MATH_ARITHMETIC_ADD);return b},updateContainerBlock:function(a){a.setFieldValue("+","CONTAINER_TEXT")},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_ARITHMETIC_ADD}]};
Blockly.Blocks.math_mutator_item={init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.appendDummyInput().appendField("number");this.setPreviousStatement(!0);this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.Blocks.math_subtract={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("A").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT));this.appendValueInput("B").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS);
this.setInputsInline(!0);this.setTooltip(Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS)},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS}]};
Blockly.Blocks.math_multiply={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM0").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT));this.appendValueInput("NUM1").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Blocks.Utilities.times_symbol);
this.setInputsInline(!0);this.setTooltip(function(){return Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY});this.setMutator(new Blockly.Mutator(["math_mutator_item"]));this.emptyInputName="EMPTY";this.repeatingInputName="NUM";this.itemCount_=2},mutationToDom:Blockly.mutationToDom,domToMutation:Blockly.domToMutation,decompose:function(a){return Blockly.decompose(a,"math_mutator_item",this)},compose:Blockly.compose,saveConnections:Blockly.saveConnections,addEmptyInput:function(){this.appendDummyInput(this.emptyInputName)},
addInput:function(a){var b=this.appendValueInput(this.repeatingInputName+a).setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT));0!==a&&b.appendField(Blockly.Blocks.Utilities.times_symbol);return b},updateContainerBlock:function(a){a.setFieldValue(Blockly.Blocks.Utilities.times_symbol,"CONTAINER_TEXT")},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY}]};
Blockly.Blocks.math_division={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("A").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT));this.appendValueInput("B").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE);
this.setInputsInline(!0);this.setTooltip(Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE)},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE}]};
Blockly.Blocks.math_power={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("A").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT));this.appendValueInput("B").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_MATH_ARITHMETIC_POWER);
this.setInputsInline(!0);this.setTooltip(Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER)},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_ARITHMETIC_POWER}]};
Blockly.Blocks.math_random_int={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT,["FROM",a,Blockly.ALIGN_RIGHT],["TO",a,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);this.setInputsInline(!0);
this.setTooltip(Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM}]};
Blockly.Blocks.math_random_float={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendDummyInput().appendField(Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM);this.setTooltip(Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM}]};
Blockly.Blocks.math_random_set_seed={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!1,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM).appendField(Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO);
this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM}]};
Blockly.Blocks.math_on_list={category:"Math",helpUrl:"",init:function(){var a=this;this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM0").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP");this.appendValueInput("NUM1").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",
Blockly.Blocks.Utilities.INPUT));this.setInputsInline(!1);this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_on_list.TOOLTIPS()[b]});this.setMutator(new Blockly.Mutator(["math_mutator_item"]));this.itemCount_=2;this.valuesToSave={OP:null};this.emptyInputName="EMPTY";this.repeatingInputName="NUM"},mutationToDom:Blockly.mutationToDom,domToMutation:Blockly.domToMutation,decompose:function(a){return Blockly.decompose(a,"math_mutator_item",this)},compose:Blockly.compose,
saveConnections:Blockly.saveConnections,addEmptyInput:function(){this.appendDummyInput(this.emptyInputName).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP");this.setFieldValue(this.valuesToSave.OP,"OP")},addInput:function(a){var b=this.appendValueInput(this.repeatingInputName+a).setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT));0==a&&(b.appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setFieldValue(this.valuesToSave.OP,"OP"));
return b},updateContainerBlock:function(a){for(var b=0;b<Blockly.Blocks.math_on_list.OPERATORS.length;b++)Blockly.Blocks.math_on_list.OPERATORS[b][1]==this.getFieldValue("OP")&&a.setFieldValue(Blockly.Blocks.math_on_list.OPERATORS[b][0],"CONTAINER_TEXT")},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN,dropDown:{titleName:"OP",value:"MIN"}},{translatedName:Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX,dropDown:{titleName:"OP",value:"MAX"}}]};
Blockly.Blocks.math_on_list.OPERATORS=function(){return[[Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN,"MIN"],[Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX,"MAX"]]};Blockly.Blocks.math_on_list.TOOLTIPS=function(){return{MIN:Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN,MAX:Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX}};
Blockly.Blocks.math_single={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_single.HELPURLS()[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP");var a=
this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_single.TOOLTIPS()[b]})},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT,dropDown:{titleName:"OP",value:"ROOT"}},{translatedName:Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE,dropDown:{titleName:"OP",value:"ABS"}},{translatedName:Blockly.Msg.LANG_MATH_SINGLE_OP_NEG,dropDown:{titleName:"OP",value:"NEG"}},{translatedName:Blockly.Msg.LANG_MATH_SINGLE_OP_LN,dropDown:{titleName:"OP",value:"LN"}},{translatedName:Blockly.Msg.LANG_MATH_SINGLE_OP_EXP,
dropDown:{titleName:"OP",value:"EXP"}},{translatedName:Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND,dropDown:{titleName:"OP",value:"ROUND"}},{translatedName:Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING,dropDown:{titleName:"OP",value:"CEILING"}},{translatedName:Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR,dropDown:{titleName:"OP",value:"FLOOR"}}]};
Blockly.Blocks.math_single.OPERATORS=function(){return[[Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT,"ROOT"],[Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE,"ABS"],[Blockly.Msg.LANG_MATH_SINGLE_OP_NEG,"NEG"],[Blockly.Msg.LANG_MATH_SINGLE_OP_LN,"LN"],[Blockly.Msg.LANG_MATH_SINGLE_OP_EXP,"EXP"],[Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND,"ROUND"],[Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING,"CEILING"],[Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR,"FLOOR"]]};
Blockly.Blocks.math_single.TOOLTIPS=function(){return{ROOT:Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT,ABS:Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS,NEG:Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG,LN:Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN,EXP:Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP,ROUND:Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND,CEILING:Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING,FLOOR:Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR}};
Blockly.Blocks.math_single.HELPURLS=function(){return{ROOT:Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT,ABS:Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS,NEG:Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG,LN:Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN,EXP:Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP,ROUND:Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND,CEILING:Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING,FLOOR:Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR}};
Blockly.Blocks.math_abs={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_single.HELPURLS[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(Blockly.Blocks.math_single.OPERATORS),
"OP");this.setFieldValue("ABS","OP");var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_single.TOOLTIPS[b]})}};
Blockly.Blocks.math_neg={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_single.HELPURLS[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(Blockly.Blocks.math_single.OPERATORS),
"OP");this.setFieldValue("NEG","OP");var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_single.TOOLTIPS[b]})}};
Blockly.Blocks.math_round={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_single.HELPURLS[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(Blockly.Blocks.math_single.OPERATORS),
"OP");this.setFieldValue("ROUND","OP");var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_single.TOOLTIPS[b]})}};
Blockly.Blocks.math_ceiling={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_single.HELPURLS[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(Blockly.Blocks.math_single.OPERATORS),
"OP");this.setFieldValue("CEILING","OP");var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_single.TOOLTIPS[b]})}};
Blockly.Blocks.math_floor={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_single.HELPURLS[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(Blockly.Blocks.math_single.OPERATORS),
"OP");this.setFieldValue("FLOOR","OP");var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_single.TOOLTIPS[b]})}};
Blockly.Blocks.math_divide={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_divide.HELPURLS()[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("DIVIDEND").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP");
this.appendValueInput("DIVISOR").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_MATH_DIVIDE);this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_divide.TOOLTIPS()[b]})},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO,dropDown:{titleName:"OP",value:"MODULO"}},{translatedName:Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER,dropDown:{titleName:"OP",
value:"REMAINDER"}},{translatedName:Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT,dropDown:{titleName:"OP",value:"QUOTIENT"}}]};Blockly.Blocks.math_divide.OPERATORS=function(){return[[Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO,"MODULO"],[Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER,"REMAINDER"],[Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT,"QUOTIENT"]]};
Blockly.Blocks.math_divide.TOOLTIPS=function(){return{MODULO:Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO,REMAINDER:Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER,QUOTIENT:Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT}};Blockly.Blocks.math_divide.HELPURLS=function(){return{MODULO:Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO,REMAINDER:Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER,QUOTIENT:Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT}};
Blockly.Blocks.math_trig={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_trig.HELPURLS()[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP");var a=this;
this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_trig.TOOLTIPS()[b]})},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_TRIG_SIN,dropDown:{titleName:"OP",value:"SIN"}},{translatedName:Blockly.Msg.LANG_MATH_TRIG_COS,dropDown:{titleName:"OP",value:"COS"}},{translatedName:Blockly.Msg.LANG_MATH_TRIG_TAN,dropDown:{titleName:"OP",value:"TAN"}},{translatedName:Blockly.Msg.LANG_MATH_TRIG_ASIN,dropDown:{titleName:"OP",value:"ASIN"}},{translatedName:Blockly.Msg.LANG_MATH_TRIG_ACOS,
dropDown:{titleName:"OP",value:"ACOS"}},{translatedName:Blockly.Msg.LANG_MATH_TRIG_ATAN,dropDown:{titleName:"OP",value:"ATAN"}}]};Blockly.Blocks.math_trig.OPERATORS=function(){return[[Blockly.Msg.LANG_MATH_TRIG_SIN,"SIN"],[Blockly.Msg.LANG_MATH_TRIG_COS,"COS"],[Blockly.Msg.LANG_MATH_TRIG_TAN,"TAN"],[Blockly.Msg.LANG_MATH_TRIG_ASIN,"ASIN"],[Blockly.Msg.LANG_MATH_TRIG_ACOS,"ACOS"],[Blockly.Msg.LANG_MATH_TRIG_ATAN,"ATAN"]]};
Blockly.Blocks.math_trig.TOOLTIPS=function(){return{SIN:Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN,COS:Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS,TAN:Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN,ASIN:Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN,ACOS:Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS,ATAN:Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN}};
Blockly.Blocks.math_trig.HELPURLS=function(){return{SIN:Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN,COS:Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS,TAN:Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN,ASIN:Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN,ACOS:Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS,ATAN:Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN}};
Blockly.Blocks.math_cos={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_trig.HELPURLS[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(Blockly.Blocks.math_trig.OPERATORS),
"OP");this.setFieldValue("COS","OP");var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_trig.TOOLTIPS[b]})}};
Blockly.Blocks.math_tan={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_trig.HELPURLS[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(new Blockly.FieldDropdown(Blockly.Blocks.math_trig.OPERATORS),
"OP");this.setFieldValue("TAN","OP");var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_trig.TOOLTIPS[b]})}};
Blockly.Blocks.math_atan2={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendDummyInput().appendField(Blockly.Msg.LANG_MATH_TRIG_ATAN2);this.appendValueInput("Y").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y).setAlign(Blockly.ALIGN_RIGHT);
this.appendValueInput("X").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_MATH_TRIG_ATAN2_X).setAlign(Blockly.ALIGN_RIGHT);this.setInputsInline(!1);this.setTooltip(Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2)},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_TRIG_ATAN2}]};
Blockly.Blocks.math_convert_angles={category:"Math",helpUrl:function(){var a=this.getFieldValue("OP");return Blockly.Blocks.math_convert_angles.HELPURLS()[a]},init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT)).appendField(Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT).appendField(new Blockly.FieldDropdown(this.OPERATORS),
"OP");var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_convert_angles.TOOLTIPS()[b]})},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT+" "+Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG,dropDown:{titleName:"OP",value:"RADIANS_TO_DEGREES"}},{translatedName:Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT+" "+Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD,dropDown:{titleName:"OP",value:"DEGREES_TO_RADIANS"}}]};
Blockly.Blocks.math_convert_angles.OPERATORS=function(){return[[Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG,"RADIANS_TO_DEGREES"],[Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD,"DEGREES_TO_RADIANS"]]};Blockly.Blocks.math_convert_angles.TOOLTIPS=function(){return{RADIANS_TO_DEGREES:Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG,DEGREES_TO_RADIANS:Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD}};
Blockly.Blocks.math_convert_angles.HELPURLS=function(){return{RADIANS_TO_DEGREES:Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG,DEGREES_TO_RADIANS:Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD}};
Blockly.Blocks.math_format_as_decimal={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));var a=Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT);this.interpolateMsg(Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT,["NUM",a,Blockly.ALIGN_RIGHT],["PLACES",a,Blockly.ALIGN_RIGHT],Blockly.ALIGN_RIGHT);
this.setInputsInline(!1);this.setTooltip(Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE}]};
Blockly.Blocks.math_is_a_number={category:"Math",helpUrl:Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL,init:function(){this.setColour(Blockly.MATH_CATEGORY_HUE);this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("boolean",Blockly.Blocks.Utilities.OUTPUT));this.appendValueInput("NUM").appendField(Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM);this.setTooltip(function(){return Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP})},typeblock:[{translatedName:Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM}]};/*

 @fileoverview Procedure blocks for Blockly, modified for MIT App Inventor.
 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.Blocks.procedures={};
Blockly.Blocks.procedures_defnoreturn={category:"Procedures",helpUrl:Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL,bodyInputName:"STACK",init:function(){this.setColour(Blockly.PROCEDURE_CATEGORY_HUE);var a=Blockly.Procedures.findLegalName(Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE,this);this.appendDummyInput("HEADER").appendField(Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE).appendField(new Blockly.FieldTextInput(a,Blockly.AIProcedure.renameProcedure),"NAME");this.horizontalParameters=
!0;this.appendStatementInput("STACK").appendField(Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO);this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"]));this.setTooltip(Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP);this.arguments_=[];this.warnings=[{name:"checkEmptySockets",sockets:["STACK"]}]},onchange:function(){this.arguments_=this.declaredNames()},updateParams_:function(a){a&&(this.arguments_=a);for(var a=!1,b={},c=0;c<this.arguments_.length;c++){if(b["arg_"+this.arguments_[c].toLowerCase()]){a=
!0;break}b["arg_"+this.arguments_[c].toLowerCase()]=!0}a?this.setWarningText(Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING):this.setWarningText(null);c=this.getFieldValue("NAME");a=this.inputList[this.inputList.length-1];b=this.rendered;this.rendered=!1;var d=this;Blockly.FieldParameterFlydown.withChangeHanderDisabled(function(){d.removeInput("HEADER")});if(!this.horizontalParameters){var e=this.inputList.length-1;if(0<e&&this.getInput("VAR0"))for(var f=0;f<e;f++)try{Blockly.FieldParameterFlydown.withChangeHanderDisabled(function(){d.removeInput("VAR"+
f)})}catch(g){console.log(g)}}this.inputList=[];c=this.appendDummyInput("HEADER").appendField(Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE).appendField(new Blockly.FieldTextInput(c,Blockly.AIProcedure.renameProcedure),"NAME");for(f=0;f<this.arguments_.length;f++)this.horizontalParameters?c.appendField(" ").appendField(this.parameterFlydown(f),"VAR"+f):this.appendDummyInput("VAR"+f).appendField(this.parameterFlydown(f),"VAR"+f).setAlign(Blockly.ALIGN_RIGHT);this.inputList=this.inputList.concat(a);
(this.rendered=b)&&this.render()},parameterFlydown:function(a){var b=this,c=this.workspace;return new Blockly.FieldParameterFlydown(this.arguments_[a],!0,this.horizontalParameters?Blockly.FieldFlydown.DISPLAY_BELOW:Blockly.FieldFlydown.DISPLAY_RIGHT,function(d){var e=b.arguments_;e[a]=d;var f=b.getFieldValue("NAME");Blockly.Procedures.mutateCallers(f,c,e,b.paramIds_);if(b.mutator&&b.mutator.rootBlock_){e=0;for(f=b.mutator.rootBlock_.getInputTargetBlock("STACK");f&&e<a;)f=f.nextConnection&&f.nextConnection.targetBlock(),
e++;f&&e==a&&Blockly.Field.prototype.setText.call(f.getField_("NAME"),d)}})},setParameterOrientation:function(a){0!=this.getParameters().length&&a!==this.horizontalParameters&&(this.horizontalParameters=a,this.updateParams_())},mutationToDom:function(){var a=document.createElement("mutation");this.horizontalParameters||a.setAttribute("vertical_parameters","true");for(var b=0;b<this.arguments_.length;b++){var c=document.createElement("arg");c.setAttribute("name",this.arguments_[b]);a.appendChild(c)}return a},
domToMutation:function(a){for(var b=[],c=goog.dom.getChildren(a),d=0,e;e=c[d];d++)"arg"==e.nodeName.toLowerCase()&&b.push(e.getAttribute("name"));this.horizontalParameters="true"!==a.getAttribute("vertical_parameters");this.updateParams_(b)},decompose:function(a){var b=new Blockly.Block.obtain(a,"procedures_mutatorcontainer");b.initSvg();b.setProcBlock(this);this.paramIds_=[];for(var c=b.getInput("STACK").connection,d=0;d<this.arguments_.length;d++){var e=new Blockly.Block.obtain(a,"procedures_mutatorarg");
this.paramIds_.push(e.id);e.initSvg();e.setFieldValue(this.arguments_[d],"NAME");e.oldLocation=d;c.connect(e.previousConnection);c=e.nextConnection}Blockly.Procedures.mutateCallers(this.getFieldValue("NAME"),this.workspace,this.arguments_,this.paramIds_,!0);return b},compose:function(a){var b=[];this.paramIds_=[];for(a=a.getInputTargetBlock("STACK");a;)b.push(a.getFieldValue("NAME")),this.paramIds_.push(a.id),a=a.nextConnection&&a.nextConnection.targetBlock();Blockly.LexicalVariable.stringListsEqual(b,
this.arguments_)||(this.updateParams_(b),Blockly.Procedures.mutateCallers(this.getFieldValue("NAME"),this.workspace,this.arguments_,this.paramIds_))},dispose:function(){var a=this.getFieldValue("NAME"),b=this.editable_,c=this.workspace;Blockly.Block.prototype.dispose.apply(this,arguments);b&&Blockly.AIProcedure.removeProcedureValues(a,c)},getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,"RETURN"===this.bodyInputName]},getVars:function(){for(var a=[],b=0,c;c=this.getFieldValue("VAR"+
b);b++)a.push(c);return a},declaredNames:function(){return this.getVars()},renameVar:function(a,b){this.renameVars(Blockly.Substitution.simpleSubstitution(a,b))},renameVars:function(a){var b=this.getParameters(),c=a.map(b);if(!Blockly.LexicalVariable.stringListsEqual(b,c)&&(this.updateParams_(c),this.mutator.isVisible()))for(var b=this.mutator.workspace_.getAllBlocks(),c=0,d;d=b[c];c++)if("procedures_mutatorarg"==d.type){var e=d.getFieldValue("NAME"),f=a.apply(e);f!==e&&d.setFieldValue(f,"NAME")}},
renameBound:function(a,b){var c=a.restrictDomain(this.declaredNames());this.renameVars(c);c=b.extend(c);Blockly.LexicalVariable.renameFree(this.getInputTargetBlock(this.bodyInputName),c)},renameFree:function(){this.freeVariables()},freeVariables:function(){var a=Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock(this.bodyInputName));a.subtract(new Blockly.NameSet(this.declaredNames()));if(a.isEmpty())return a;throw"Violation of invariant: procedure declaration has nonempty free variables: "+
a.toString();},blocksInScope:function(){var a=this.getInputTargetBlock(this.bodyInputName);return a&&[a]||[]},typeblock:[{translatedName:Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE+" "+Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO}],customContextMenu:function(a){Blockly.FieldParameterFlydown.addHorizontalVerticalOption(this,a)},getParameters:function(){return this.arguments_}};
Blockly.Blocks.procedures_defreturn={category:"Procedures",helpUrl:Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL,bodyInputName:"RETURN",init:function(){this.setColour(Blockly.PROCEDURE_CATEGORY_HUE);var a=Blockly.Procedures.findLegalName(Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE,this);this.appendDummyInput("HEADER").appendField(Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE).appendField(new Blockly.FieldTextInput(a,Blockly.AIProcedure.renameProcedure),"NAME");this.horizontalParameters=!0;this.appendIndentedValueInput("RETURN").appendField(Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN);
this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"]));this.setTooltip(Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP);this.arguments_=[];this.warnings=[{name:"checkEmptySockets",sockets:["RETURN"]}]},onchange:Blockly.Blocks.procedures_defnoreturn.onchange,updateParams_:Blockly.Blocks.procedures_defnoreturn.updateParams_,parameterFlydown:Blockly.Blocks.procedures_defnoreturn.parameterFlydown,setParameterOrientation:Blockly.Blocks.procedures_defnoreturn.setParameterOrientation,mutationToDom:Blockly.Blocks.procedures_defnoreturn.mutationToDom,
domToMutation:Blockly.Blocks.procedures_defnoreturn.domToMutation,decompose:Blockly.Blocks.procedures_defnoreturn.decompose,compose:Blockly.Blocks.procedures_defnoreturn.compose,dispose:Blockly.Blocks.procedures_defnoreturn.dispose,getProcedureDef:Blockly.Blocks.getProcedureDef,getVars:Blockly.Blocks.procedures_defnoreturn.getVars,declaredNames:Blockly.Blocks.procedures_defnoreturn.declaredNames,renameVar:Blockly.Blocks.procedures_defnoreturn.renameVar,renameVars:Blockly.Blocks.procedures_defnoreturn.renameVars,
renameBound:Blockly.Blocks.procedures_defnoreturn.renameBound,renameFree:Blockly.Blocks.procedures_defnoreturn.renameFree,freeVariables:Blockly.Blocks.procedures_defnoreturn.freeVariables,blocksInScope:Blockly.Blocks.procedures_defnoreturn.blocksInScope,typeblock:[{translatedName:Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE+" "+Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN}],customContextMenu:Blockly.Blocks.procedures_defnoreturn.customContextMenu,getParameters:Blockly.Blocks.procedures_defnoreturn.getParameters};
Blockly.Blocks.procedures_mutatorcontainer={init:function(){this.setColour(Blockly.PROCEDURE_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE);this.appendStatementInput("STACK");this.setTooltip(Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP);this.contextMenu=!1},setProcBlock:function(a){this.procBlock_=a},getProcBlock:function(){return this.procBlock_},declaredNames:function(){for(var a=[],b=this.getInputTargetBlock("STACK");b;)a.push(b.getFieldValue("NAME")),
b=b.nextConnection&&b.nextConnection.targetBlock();return a}};
Blockly.Blocks.procedures_mutatorarg={init:function(){this.setColour(Blockly.PROCEDURE_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE).appendField(new Blockly.FieldTextInput("x",Blockly.LexicalVariable.renameParam),"NAME");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP);this.contextMenu=!1},getContainerBlock:function(){for(var a=this.getParent();a&&"procedures_mutatorcontainer"!==
a.type;)a=a.getParent();return this.cachedContainerBlock_=a&&"procedures_mutatorcontainer"===a.type&&a||null},getProcBlock:function(){var a=this.getContainerBlock();return a&&a.getProcBlock()||null},declaredNames:function(){var a=this.getContainerBlock();return a&&a.declaredNames()||[]},blocksInScope:function(){var a=this.getProcBlock();return a&&a.blocksInScope()||[]},onchange:function(){var a=this.getFieldValue("NAME");if(a){var b=this.cachedContainerBlock_,c=this.getContainerBlock();!b&&c&&(b=
this.declaredNames(),c=b.indexOf(a),-1!=c&&-1!=b.indexOf(a,c+1)&&(a=Blockly.FieldLexicalVariable.nameNotIn(a,b),this.setFieldValue(a,"NAME")))}}};Blockly.Blocks.procedures_mutatorarg.validator=function(a){return(a=a.replace(/[\s\xa0]+/g," ").replace(/^ | $/g,""))||null};
Blockly.Blocks.procedures_callnoreturn={category:"Procedures",helpUrl:Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL,init:function(){this.setColour(Blockly.PROCEDURE_CATEGORY_HUE);this.procNamesFxn=function(){return Blockly.AIProcedure.getProcedureNames(!1)};this.procDropDown=new Blockly.FieldDropdown(this.procNamesFxn,Blockly.FieldProcedure.onChange);this.procDropDown.block=this;this.appendDummyInput().appendField(Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL).appendField(this.procDropDown,"PROCNAME");
this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP);this.arguments_=[];this.quarkArguments_=this.quarkConnections_=null;this.errors=[{name:"checkIsInDefinition"},{name:"checkDropDownContainsValidValue",dropDowns:["PROCNAME"]}];Blockly.FieldProcedure.onChange.call(this.getField_("PROCNAME"),this.getField_("PROCNAME").getValue())},getProcedureCall:function(){return this.getFieldValue("PROCNAME")},renameProcedure:function(a,b){Blockly.Names.equals(a,
this.getFieldValue("PROCNAME"))&&this.setFieldValue(b,"PROCNAME")},setProcedureParameters:function(a,b,c){var d,e;b||(this.quarkConnections_={},this.quarkArguments_=null,b=[].concat(a));if(b.length!=a.length)throw"Error: paramNames and paramIds must be the same length.";var f={};for(d=0;d<a.length;d++)f[b[d]]=a[d];"undefined"==typeof c&&(c=null);if(!this.quarkArguments_||c)this.quarkConnections_={},this.quarkArguments_=Blockly.LexicalVariable.stringListsEqual(a,this.arguments_)||c?b:[];var g=this.rendered;
this.rendered=!1;for(e=0;this.getInput("ARG"+e);e++)if(c=this.getInput("ARG"+e))d=c.connection.targetConnection,this.quarkConnections_[this.quarkArguments_[e]]=d,this.removeInput("ARG"+e);this.arguments_=[].concat(a);this.quarkArguments_=b;for(e=0;e<this.arguments_.length;e++)c=this.appendValueInput("ARG"+e).setAlign(Blockly.ALIGN_RIGHT).appendField(this.arguments_[e]),this.quarkArguments_&&(a=this.quarkArguments_[e],a in this.quarkConnections_?(d=this.quarkConnections_[a],!d||d.targetConnection||
d.sourceBlock_.workspace!=this.workspace?delete this.quarkConnections_[a]:c.connection.connect(d)):f[a]&&(d=this.quarkConnections_[f[a]])&&c.connection.connect(d));(this.rendered=g)&&this.render()},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("name",this.getFieldValue("PROCNAME"));for(var b=0;this.getInput("ARG"+b);b++){var c=document.createElement("arg");c.setAttribute("name",this.getInput("ARG"+b).fieldRow[0].text_);a.appendChild(c)}return a},domToMutation:function(a){var b=
a.getAttribute("name");this.setFieldValue(b,"PROCNAME");this.arguments_=[];for(var a=goog.dom.getChildren(a),b=0,c;c=a[b];b++)"arg"==c.nodeName.toLowerCase()&&this.arguments_.push(c.getAttribute("name"));this.setProcedureParameters(this.arguments_,null,!0)},renameVar:function(a,b){for(var c=0;c<this.arguments_.length;c++)Blockly.Names.equals(a,this.arguments_[c])&&(this.arguments_[c]=b,this.getInput("ARG"+c).fieldRow[0].setText(b))},procCustomContextMenu:function(a){var b={enabled:!0};b.text=Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF;
var c=this.getFieldValue("PROCNAME"),d=this.workspace;b.callback=function(){var a=Blockly.Procedures.getDefinition(c,d);a&&a.select()};a.push(b)},removeProcedureValue:function(){this.setFieldValue("none","PROCNAME");for(var a=0;null!==this.getInput("ARG"+a);a++)this.removeInput("ARG"+a)},typeblock:[{translatedName:Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME}]};
Blockly.Blocks.procedures_callreturn={category:"Procedures",helpUrl:Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL,init:function(){this.setColour(Blockly.PROCEDURE_CATEGORY_HUE);this.procNamesFxn=function(){return Blockly.AIProcedure.getProcedureNames(!0)};this.procDropDown=new Blockly.FieldDropdown(this.procNamesFxn,Blockly.FieldProcedure.onChange);this.procDropDown.block=this;this.appendDummyInput().appendField(Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL).appendField(this.procDropDown,"PROCNAME");
this.setOutput(!0,null);this.setTooltip(Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP);this.arguments_=[];this.quarkArguments_=this.quarkConnections_=null;this.errors=[{name:"checkIsInDefinition"},{name:"checkDropDownContainsValidValue",dropDowns:["PROCNAME"]}];Blockly.FieldProcedure.onChange.call(this.getField_("PROCNAME"),this.getField_("PROCNAME").getValue())},getProcedureCall:Blockly.Blocks.procedures_callnoreturn.getProcedureCall,renameProcedure:Blockly.Blocks.procedures_callnoreturn.renameProcedure,
setProcedureParameters:Blockly.Blocks.procedures_callnoreturn.setProcedureParameters,mutationToDom:Blockly.Blocks.procedures_callnoreturn.mutationToDom,domToMutation:Blockly.Blocks.procedures_callnoreturn.domToMutation,renameVar:Blockly.Blocks.procedures_callnoreturn.renameVar,procCustomContextMenu:Blockly.Blocks.procedures_callnoreturn.procCustomContextMenu,removeProcedureValue:Blockly.Blocks.procedures_callnoreturn.removeProcedureValue,typeblock:[{translatedName:Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME}]};/*

 @fileoverview Variables blocks for Blockly, modified for MIT App Inventor.
 @author fturbak@wellesley.edu (Lyn Turbak)
*/
Blockly.Blocks.lexicalvariables={};
Blockly.Blocks.global_declaration={category:"Variables",helpUrl:Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL,init:function(){this.setColour(Blockly.VARIABLE_CATEGORY_HUE);this.appendValueInput("VALUE").appendField(Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT).appendField(new Blockly.FieldGlobalFlydown(Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME,Blockly.FieldFlydown.DISPLAY_BELOW),"NAME").appendField(Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO);this.setTooltip(Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP)},
getVars:function(){return[this.getFieldValue("NAME")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setFieldValue(b,"NAME")},typeblock:[{translatedName:Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT}]};
Blockly.Blocks.lexical_variable_get={category:"Variables",helpUrl:Blockly.Msg.LANG_VARIABLES_GET_HELPURL,init:function(){this.setColour(Blockly.VARIABLE_CATEGORY_HUE);this.fieldVar_=new Blockly.FieldLexicalVariable(" ");this.fieldVar_.setBlock(this);this.appendDummyInput().appendField(Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET).appendField(this.fieldVar_,"VAR");this.setOutput(!0,null);this.setTooltip(Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP);this.errors=[{name:"checkIsInDefinition"},{name:"checkDropDownContainsValidValue",
dropDowns:["VAR"]}]},mutationToDom:function(){return Blockly.LexicalVariable.eventParamMutationToDom(this)},domToMutation:function(a){Blockly.LexicalVariable.eventParamDomToMutation(this,a)},getVars:function(){return[this.getFieldValue("VAR")]},renameLexicalVar:function(a,b){a===this.getFieldValue("VAR")&&this.setFieldValue(b,"VAR")},renameFree:function(a){var b=Blockly.unprefixName(this.getFieldValue("VAR"));b[0]!==Blockly.globalNamePrefix&&(b=b[1],a=a.apply(b),a!==b&&this.renameLexicalVar(b,a))},
freeVariables:function(){var a=Blockly.unprefixName(this.getFieldValue("VAR"));return a[0]!==Blockly.globalNamePrefix?new Blockly.NameSet([a[1]]):new Blockly.NameSet},typeblock:[{translatedName:Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET+Blockly.Msg.LANG_VARIABLES_VARIABLE}]};
Blockly.Blocks.lexical_variable_set={category:"Variables",helpUrl:Blockly.Msg.LANG_VARIABLES_SET_HELPURL,init:function(){this.setColour(Blockly.VARIABLE_CATEGORY_HUE);this.fieldVar_=new Blockly.FieldLexicalVariable(" ");this.fieldVar_.setBlock(this);this.appendValueInput("VALUE").appendField(Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET).appendField(this.fieldVar_,"VAR").appendField(Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP);
this.errors=[{name:"checkIsInDefinition"},{name:"checkDropDownContainsValidValue",dropDowns:["VAR"]}]},mutationToDom:function(){return Blockly.LexicalVariable.eventParamMutationToDom(this)},domToMutation:function(a){Blockly.LexicalVariable.eventParamDomToMutation(this,a)},getVars:function(){return[this.getFieldValue("VAR")]},renameLexicalVar:Blockly.Blocks.lexical_variable_get.renameLexicalVar,renameFree:function(a){var b=Blockly.unprefixName(this.getFieldValue("VAR"));if(b[0]!==Blockly.globalNamePrefix){var b=
b[1],c=a.apply(b);c!==b&&this.renameLexicalVar(b,c)}this.getChildren().map(function(b){Blockly.LexicalVariable.renameFree(b,a)})},freeVariables:function(){var a=this.getChildren().map(function(a){return Blockly.LexicalVariable.freeVariables(a)}),a=Blockly.NameSet.unionAll(a),b=Blockly.unprefixName(this.getFieldValue("VAR"));b[0]!==Blockly.globalNamePrefix&&a.insert(b[1]);return a},typeblock:[{translatedName:Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET+Blockly.Msg.LANG_VARIABLES_VARIABLE}]};
Blockly.Blocks.local_declaration_statement={category:"Variables",helpUrl:Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL,bodyInputName:"STACK",init:function(){this.initLocals();this.appendStatementInput("STACK").appendField(Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP)},initLocals:function(){this.setColour(Blockly.VARIABLE_CATEGORY_HUE);this.localNames_=[Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME];
this.appendValueInput("DECL0").appendField(Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT).appendField(this.parameterFlydown(0),"VAR0").appendField(Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO).setAlign(Blockly.ALIGN_RIGHT);this.setMutator(new Blockly.Mutator(["local_mutatorarg"]))},onchange:function(){this.localNames_=this.declaredNames()},mutationToDom:function(){for(var a=document.createElement("mutation"),b=0;b<this.localNames_.length;b++){var c=document.createElement("localname");
c.setAttribute("name",this.localNames_[b]);a.appendChild(c)}return a},domToMutation:function(a){a=goog.dom.getChildren(a);if(0<a.length){this.localNames_=[];for(var b=0,c;c=a[b];b++)"localname"==c.nodeName.toLowerCase()&&this.localNames_.push(c.getAttribute("name"))}this.updateDeclarationInputs_(this.localNames_)},updateDeclarationInputs_:function(a,b){var c=this.inputList[this.inputList.length-1],d=this.inputList.length-1,e=this.rendered;this.rendered=!1;var f=this;Blockly.FieldParameterFlydown.withChangeHanderDisabled(function(){for(var a=
0;a<d;a++)f.removeInput("DECL"+a)});this.inputList=[];this.localNames_=a;for(var g=0;g<a.length;g++){var h=this.appendValueInput("DECL"+g);h.appendField(Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT).appendField(this.parameterFlydown(g),"VAR"+g).appendField(Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO).setAlign(Blockly.ALIGN_RIGHT);b&&b[g]&&h.connection.connect(b[g])}this.inputList=this.inputList.concat(c);(this.rendered=e)&&this.render()},parameterFlydown:function(a){var b=this;
return new Blockly.FieldParameterFlydown(this.localNames_[a],!0,Blockly.FieldFlydown.DISPLAY_RIGHT,function(c){b.localNames_[a]=c;if(b.mutator&&b.mutator.rootBlock_){for(var d=0,e=b.mutator.rootBlock_.getInputTargetBlock("STACK");e&&d<a;)e=e.nextConnection&&e.nextConnection.targetBlock(),d++;e&&d==a&&Blockly.Field.prototype.setText.call(e.getField_("NAME"),c)}})},decompose:function(a){var b=new Blockly.Block.obtain(a,"local_mutatorcontainer");b.initSvg();b.setDefBlock(this);for(var c=b.getInput("STACK").connection,
d=0;d<this.localNames_.length;d++){var e=this.getFieldValue("VAR"+d),f=new Blockly.Block.obtain(a,"local_mutatorarg");f.initSvg();f.setFieldValue(e,"NAME");f.oldLocation=d;c.connect(f.previousConnection);c=f.nextConnection}return b},compose:function(a){for(var b=[],c=[],a=a.getInputTargetBlock("STACK");a;)b.push(a.getFieldValue("NAME")),c.push(a.valueConnection_),a=a.nextConnection&&a.nextConnection.targetBlock();Blockly.LexicalVariable.stringListsEqual(this.localNames_,b)||this.updateDeclarationInputs_(b,
c)},dispose:function(){Blockly.Block.prototype.dispose.apply(this,arguments)},saveConnections:function(a){for(var b=a.getInputTargetBlock("STACK"),c=0;b;){var d=this.getInput("DECL"+c);b.valueConnection_=d&&d.connection.targetConnection;c++;b=b.nextConnection&&b.nextConnection.targetBlock()}if(b=this.getInput(this.bodyInputName))a.bodyConnection_=b.connection.targetConnection},getVars:function(){for(var a=[],b=0,c;c=this.getFieldValue("VAR"+b);b++)a.push(c);return a},declaredNames:function(){return this.getVars()},
initializerConnections:function(){for(var a=[],b=0,c;c=this.getInput("DECL"+b);b++)a.push(c.connection&&c.connection.targetConnection);return a},blocksInScope:function(){var a=this.getInputTargetBlock(this.bodyInputName);return a&&[a]||[]},renameVar:function(a,b){this.renameVars(Blockly.Substitution.simpleSubstitution(a,b))},renameVars:function(a){var b=this.declaredNames(),c=a.map(b);if(!Blockly.LexicalVariable.stringListsEqual(c,b)&&(b=this.initializerConnections(),this.updateDeclarationInputs_(c,
b),this.mutator.isVisible()))for(var c=this.mutator.workspace_.getAllBlocks(),b=0,d;d=c[b];b++)if("procedures_mutatorarg"==d.type){var e=d.getFieldValue("NAME"),f=a.appy(e);f!==e&&d.setFieldValue(f,"NAME")}},renameBound:function(a,b){for(var c=this.declaredNames(),d=0;d<c.length;d++)Blockly.LexicalVariable.renameFree(this.getInputTargetBlock("DECL"+d),b);d=a.restrictDomain(c);this.renameVars(d);c=b.remove(c).extend(d);Blockly.LexicalVariable.renameFree(this.getInputTargetBlock(this.bodyInputName),
c);this.nextConnection&&(c=this.nextConnection.targetBlock(),Blockly.LexicalVariable.renameFree(c,b))},renameFree:function(a){var b=this.declaredNames(),b=new Blockly.NameSet(b),c=Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock(this.bodyInputName));c.subtract(b);var c=c.renamed(a),d=c.intersection(b);if(d.isEmpty())this.renameBound(new Blockly.Substitution,a);else{for(var b=b.union(c).toList(),c={},d=d.toList(),e=0,f;f=d[e];e++){var g=Blockly.FieldLexicalVariable.nameNotIn(f,b);c[f]=
g;b.push(g)}this.renameBound(new Blockly.Substitution(c),a)}},freeVariables:function(){var a=Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock(this.bodyInputName)),b=this.declaredNames();a.subtract(new Blockly.NameSet(b));for(var b=b.length,c=0;c<b;c++)a.union(Blockly.LexicalVariable.freeVariables(this.getInputTargetBlock("DECL"+c)));this.nextConnection&&(b=this.nextConnection.targetBlock(),a.unite(Blockly.LexicalVariable.freeVariables(b)));return a},typeblock:[{translatedName:Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME}]};
Blockly.Blocks.local_declaration_expression={category:"Variables",helpUrl:Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL,initLocals:Blockly.Blocks.local_declaration_statement.initLocals,bodyInputName:"RETURN",init:function(){this.initLocals();this.appendIndentedValueInput("RETURN").appendField(Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN);this.setOutput(!0,null);this.setTooltip(Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP)},onchange:Blockly.Blocks.local_declaration_statement.onchange,
mutationToDom:Blockly.Blocks.local_declaration_statement.mutationToDom,domToMutation:Blockly.Blocks.local_declaration_statement.domToMutation,updateDeclarationInputs_:Blockly.Blocks.local_declaration_statement.updateDeclarationInputs_,parameterFlydown:Blockly.Blocks.local_declaration_statement.parameterFlydown,blocksInScope:Blockly.Blocks.local_declaration_statement.blocksInScope,decompose:Blockly.Blocks.local_declaration_statement.decompose,compose:Blockly.Blocks.local_declaration_statement.compose,
dispose:Blockly.Blocks.local_declaration_statement.dispose,saveConnections:Blockly.Blocks.local_declaration_statement.saveConnections,getVars:Blockly.Blocks.local_declaration_statement.getVars,declaredNames:Blockly.Blocks.local_declaration_statement.declaredNames,renameVar:Blockly.Blocks.local_declaration_statement.renameVars,renameVars:Blockly.Blocks.local_declaration_statement.renameVar,renameBound:Blockly.Blocks.local_declaration_statement.renameBound,renameFree:Blockly.Blocks.local_declaration_statement.renameFree,
freeVariables:Blockly.Blocks.local_declaration_statement.freeVariables,typeblock:[{translatedName:Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME}]};
Blockly.Blocks.local_mutatorcontainer={init:function(){this.setColour(Blockly.VARIABLE_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES);this.appendStatementInput("STACK");this.setTooltip(Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP);this.contextMenu=!1},setDefBlock:function(a){this.defBlock_=a},getDefBlock:function(){return this.defBlock_},declaredNames:function(){for(var a=[],b=this.getInputTargetBlock("STACK");b;)a.push(b.getFieldValue("NAME")),
b=b.nextConnection&&b.nextConnection.targetBlock();return a}};
Blockly.Blocks.local_mutatorarg={init:function(){this.setColour(Blockly.VARIABLE_CATEGORY_HUE);this.appendDummyInput().appendField(Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME).appendField(new Blockly.FieldTextInput(Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE,Blockly.LexicalVariable.renameParam),"NAME");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("");this.contextMenu=!1},getContainerBlock:function(){for(var a=this.getParent();a&&"local_mutatorcontainer"!==
a.type;)a=a.getParent();return this.cachedContainerBlock_=a&&"local_mutatorcontainer"===a.type&&a||null},getDefBlock:function(){var a=this.getContainerBlock();return a&&a.getDefBlock()||null},blocksInScope:function(){var a=this.getDefBlock();return a&&a.blocksInScope()||[]},declaredNames:function(){var a=this.getContainerBlock();return a&&a.declaredNames()||[]},onchange:function(){var a=this.getFieldValue("NAME");if(a){var b=this.cachedContainerBlock_,c=this.getContainerBlock();!b&&c&&(b=this.declaredNames(),
c=b.indexOf(a),-1!=c&&-1!=b.indexOf(a,c+1)&&(a=Blockly.FieldLexicalVariable.nameNotIn(a,b),this.setFieldValue(a,"NAME")))}}};/*

 @fileoverview Color blocks for Blockly, modified for MIT App Inventor.
 @author mckinney@mit.edu (Andrew F. McKinney)
*/
Blockly.Blocks.color={};Blockly.Blocks.color_black={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#000000"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_BLACK}]};
Blockly.Blocks.color_white={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#ffffff"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_WHITE}]};
Blockly.Blocks.color_red={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#ff0000"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_RED}]};
Blockly.Blocks.color_pink={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#ffafaf"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_PINK}]};
Blockly.Blocks.color_orange={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#ffc800"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_ORANGE}]};
Blockly.Blocks.color_yellow={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#ffff00"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_YELLOW}]};
Blockly.Blocks.color_green={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#00ff00"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_GREEN}]};
Blockly.Blocks.color_cyan={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#00ffff"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_CYAN}]};
Blockly.Blocks.color_blue={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#0000ff"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_BLUE}]};
Blockly.Blocks.color_magenta={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#ff00ff"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_MAGENTA}]};
Blockly.Blocks.color_light_gray={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#cccccc"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_LIGHT_GRAY}]};
Blockly.Blocks.color_gray={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#888888"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_GRAY}]};
Blockly.Blocks.color_dark_gray={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendDummyInput().appendField(new Blockly.FieldColour("#444444"),"COLOR");this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_DARK_GRAY}]};
Blockly.Blocks.color_make_color={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendValueInput("COLORLIST").appendField(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR).setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.INPUT));this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_MAKE_COLOUR}]};
Blockly.Blocks.color_split_color={category:"Colors",helpUrl:Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL,init:function(){this.setColour(Blockly.COLOR_CATEGORY_HUE);this.appendValueInput("COLOR").appendField(Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR).setCheck(Blockly.Blocks.Utilities.YailTypeToBlocklyType("number",Blockly.Blocks.Utilities.INPUT));this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType("list",Blockly.Blocks.Utilities.OUTPUT));this.setTooltip(Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP)},
typeblock:[{translatedName:Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR}]};/*

 @fileoverview Component blocks for Blockly, modified for MIT App Inventor.
 @author mckinney@mit.edu (Andrew F. McKinney)
 @author sharon@google.com (Sharon Perl)
*/
Blockly.Blocks.components={};Blockly.ComponentBlock={};Blockly.ComponentBlock.COLOUR_EVENT=Blockly.CONTROL_CATEGORY_HUE;Blockly.ComponentBlock.COLOUR_METHOD=Blockly.PROCEDURE_CATEGORY_HUE;Blockly.ComponentBlock.COLOUR_GET=[67,153,112];Blockly.ComponentBlock.COLOUR_SET=[38,102,67];Blockly.ComponentBlock.COLOUR_COMPONENT=[67,153,112];
Blockly.Blocks.component_event={category:"Component",blockType:"event",mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("component_type",this.typeName);a.setAttribute("instance_name",this.instanceName);a.setAttribute("event_name",this.eventName);this.horizontalParameters||a.setAttribute("vertical_parameters","true");return a},domToMutation:function(a){this.typeName=a.getAttribute("component_type");this.instanceName=a.getAttribute("instance_name");this.eventName=a.getAttribute("event_name");
a="true"!==a.getAttribute("vertical_parameters");this.setColour(Blockly.ComponentBlock.COLOUR_EVENT);this.componentDropDown=Blockly.ComponentBlock.createComponentDropDown(this);this.componentDropDown.setValue(this.instanceName);this.appendDummyInput("WHENTITLE").appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN).appendField(this.componentDropDown,"COMPONENT_SELECTOR").appendField("."+window.parent.BlocklyPanel_getLocalizedEventName(this.getEventTypeObject().name));this.componentDropDown.setValue(this.instanceName);
this.setParameterOrientation(a);this.setTooltip(this.getEventTypeObject().description);this.setPreviousStatement(!1);this.setNextStatement(!1)},setParameterOrientation:function(a){var b=this.getParameters(),c=this.getInput("DO");if(!c||a!==this.horizontalParameters&&0<b.length){this.horizontalParameters=a;a=null;c&&(a=c.connection.targetConnection);if(this.horizontalParameters){if(c){for(c=0;c<b.length;c++)this.removeInput("VAR"+c);this.removeInput("DO")}if(0<b.length)for(var d=this.appendDummyInput("PARAMETERS").appendField(" ").setAlign(Blockly.ALIGN_LEFT),
c=0,e;e=b[c];c++)d.appendField(new Blockly.FieldParameterFlydown(window.parent.BlocklyPanel_getLocalizedParameterName(e.name),!1),"VAR"+c).appendField(" ")}else{c&&(this.removeInput("PARAMETERS"),this.removeInput("DO"));for(c=0;e=b[c];c++)this.appendDummyInput("VAR"+c).appendField(new Blockly.FieldParameterFlydown(window.parent.BlocklyPanel_getLocalizedParameterName(e.name),!1),"VAR"+c).setAlign(Blockly.ALIGN_RIGHT)}b=this.appendStatementInput("DO").appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO);
a&&b.connection.connect(a)}},getParameters:function(){return this.getEventTypeObject().params},rename:function(a,b){this.instanceName==a&&(this.instanceName=b,this.componentDropDown.setValue(this.instanceName))},renameVar:function(a,b){for(var c=0,d="VAR"+c,e;e=this.getFieldValue(d);c++,d="VAR"+c)Blockly.Names.equals(a,e)&&this.setFieldValue(d,b)},helpUrl:function(){return Blockly.ComponentBlock.EVENTS_HELPURLS[this.typeName]},getVars:function(){for(var a=[],b=0,c;c=this.getFieldValue("VAR"+b);b++)a.push(c);
return a},getVarString:function(){for(var a="",b=0,c;c=this.getFieldValue("VAR"+b);b++)0!=b&&(a+=" "),a+=c;return a},declaredNames:function(){return this.getVars()},blocksInScope:function(){var a=this.getInputTargetBlock("DO");return a?[a]:[]},getEventTypeObject:function(){return Blockly.ComponentTypes[this.typeName].eventDictionary[this.eventName]},typeblock:function(){for(var a=[],b=Blockly.ComponentInstances.getInstanceNames(),c,d,e=0;e<b.length;e++){c=Blockly.ComponentInstances[b[e]].typeName;
d=Blockly.ComponentTypes[c].componentInfo.events;for(var f=0;f<d.length;f++)a.push({translatedName:Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN+b[e]+"."+window.parent.BlocklyPanel_getLocalizedEventName(d[f].name),mutatorAttributes:{component_type:c,instance_name:b[e],event_name:d[f].name}})}return a},customContextMenu:function(a){Blockly.FieldParameterFlydown.addHorizontalVerticalOption(this,a)},errors:[{name:"checkIfIAmADuplicateEventHandler"}],onchange:Blockly.WarningHandler.checkErrors};
Blockly.Blocks.component_method={category:"Component",helpUrl:function(){return Blockly.ComponentBlock.METHODS_HELPURLS[this.typeName]},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("component_type",this.typeName);a.setAttribute("method_name",this.methodName);var b="false";this.isGeneric&&(b="true");a.setAttribute("is_generic",b);this.isGeneric||a.setAttribute("instance_name",this.instanceName);return a},domToMutation:function(a){this.typeName=a.getAttribute("component_type");
this.methodName=a.getAttribute("method_name");this.isGeneric="true"==a.getAttribute("is_generic")?!0:!1;this.isGeneric||(this.instanceName=a.getAttribute("instance_name"));this.setColour(Blockly.ComponentBlock.COLOUR_METHOD);this.componentDropDown=Blockly.ComponentBlock.createComponentDropDown(this);this.isGeneric||this.componentDropDown.setValue(this.instanceName);this.isGeneric?(this.appendDummyInput().appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL+this.typeName+"."+window.parent.BlocklyPanel_getLocalizedMethodName(this.getMethodTypeObject().name)),
this.appendValueInput("COMPONENT").setCheck(this.typeName).appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT).setAlign(Blockly.ALIGN_RIGHT)):(this.appendDummyInput().appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL).appendField(this.componentDropDown,"COMPONENT_SELECTOR").appendField("."+window.parent.BlocklyPanel_getLocalizedMethodName(this.getMethodTypeObject().name)),this.componentDropDown.setValue(this.instanceName));this.setTooltip(this.getMethodTypeObject().description);
for(var a=0,b;b=this.getMethodTypeObject().params[a];a++){var c=this.appendValueInput("ARG"+a).appendField(window.parent.BlocklyPanel_getLocalizedParameterName(b.name));c.setAlign(Blockly.ALIGN_RIGHT);b=Blockly.Blocks.Utilities.YailTypeToBlocklyType(b.type,Blockly.Blocks.Utilities.INPUT);c.connection.setCheck(b)}this.getMethodTypeObject().returnType?this.setOutput(!0,Blockly.Blocks.Utilities.YailTypeToBlocklyType(this.getMethodTypeObject().returnType,Blockly.Blocks.Utilities.OUTPUT)):(this.setPreviousStatement(!0),
this.setNextStatement(!0));this.errors=[{name:"checkIsInDefinition"}]},rename:function(a,b){this.instanceName==a&&(this.instanceName=b,this.componentDropDown.setValue(this.instanceName),-1!=this.type.indexOf(a)&&(this.type=this.type.replace(a,b)))},getMethodTypeObject:function(){return Blockly.ComponentTypes[this.typeName].methodDictionary[this.methodName]},typeblock:function(){for(var a=[],b=Blockly.ComponentInstances.getInstanceNames(),c,d,e={},f=0;f<b.length;f++){c=Blockly.ComponentInstances[b[f]].typeName;
e[c]=!0;d=Blockly.ComponentTypes[c].componentInfo.methods;for(var g=0;g<d.length;g++)a.push({translatedName:Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL+b[f]+"."+window.parent.BlocklyPanel_getLocalizedMethodName(d[g].name),mutatorAttributes:{component_type:c,instance_name:b[f],method_name:d[g].name,is_generic:"false"}})}for(var h in e){d=Blockly.ComponentTypes[h].componentInfo.methods;for(g=0;g<d.length;g++)a.push({translatedName:Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL+window.parent.BlocklyPanel_getLocalizedComponentType(h)+
"."+window.parent.BlocklyPanel_getLocalizedMethodName(d[g].name),mutatorAttributes:{component_type:h,method_name:d[g].name,is_generic:"true"}})}return a}};
Blockly.Blocks.component_set_get={category:"Component",helpUrl:function(){return Blockly.ComponentBlock.PROPERTIES_HELPURLS[this.typeName]},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("component_type",this.typeName);a.setAttribute("set_or_get",this.setOrGet);a.setAttribute("property_name",this.propertyName);var b="false";this.isGeneric&&(b="true");a.setAttribute("is_generic",b);this.isGeneric||a.setAttribute("instance_name",this.instanceName);return a},domToMutation:function(a){this.typeName=
a.getAttribute("component_type");this.setOrGet=a.getAttribute("set_or_get");this.propertyName=a.getAttribute("property_name");this.isGeneric="true"==a.getAttribute("is_generic")?!0:!1;this.isGeneric||(this.instanceName=a.getAttribute("instance_name"));"set"==this.setOrGet?this.setColour(Blockly.ComponentBlock.COLOUR_SET):this.setColour(Blockly.ComponentBlock.COLOUR_GET);var b=this,a=new Blockly.FieldDropdown(function(){return b.getPropertyDropDownList()},function(a){this.setValue(a);b.propertyName=
a;b.setTypeCheck();this.setTooltip(b,b.getPropertyObject(b.propertyName).description)});this.componentDropDown=Blockly.ComponentBlock.createComponentDropDown(this);"get"==this.setOrGet?(this.setOutput(!0),this.isGeneric?(this.appendDummyInput().appendField(window.parent.BlocklyPanel_getLocalizedComponentType(this.typeName)+".").appendField(a,"PROP"),this.appendValueInput("COMPONENT").setCheck(this.typeName).appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT).setAlign(Blockly.ALIGN_RIGHT)):
this.appendDummyInput().appendField(this.componentDropDown,"COMPONENT_SELECTOR").appendField(".").appendField(a,"PROP")):(this.setPreviousStatement(!0),this.setNextStatement(!0),this.isGeneric?(this.appendDummyInput().appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET+window.parent.BlocklyPanel_getLocalizedComponentType(this.typeName)+".").appendField(a,"PROP"),this.appendValueInput("COMPONENT").setCheck(this.typeName).appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT).setAlign(Blockly.ALIGN_RIGHT),
this.appendValueInput("VALUE").appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO).setAlign(Blockly.ALIGN_RIGHT)):this.appendValueInput("VALUE").appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET).appendField(this.componentDropDown,"COMPONENT_SELECTOR").appendField(".").appendField(a,"PROP").appendField(Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO));this.isGeneric||this.componentDropDown.setValue(this.instanceName);this.setFieldValue(this.propertyName,"PROP");this.setTypeCheck();
this.setTooltip(this.getPropertyObject(this.propertyName).description);this.errors=[{name:"checkIsInDefinition"}]},setTypeCheck:function(){var a=Blockly.Blocks.Utilities.OUTPUT;"set"==this.setOrGet&&(a=Blockly.Blocks.Utilities.INPUT);a=this.getPropertyBlocklyType(this.propertyName,a);"get"==this.setOrGet?this.outputConnection.setCheck(a):this.getInput("VALUE").connection.setCheck(a)},getPropertyBlocklyType:function(a,b){var c=this.getPropertyObject(a).type;return Blockly.Blocks.Utilities.YailTypeToBlocklyType(c,
b)},getPropertyDropDownList:function(){for(var a=[],b=[],b="set"==this.setOrGet?Blockly.ComponentTypes[this.typeName].setPropertyList:Blockly.ComponentTypes[this.typeName].getPropertyList,c=0;c<b.length;c++)a.push([window.parent.BlocklyPanel_getLocalizedPropertyName(b[c]),b[c]]);return a},getPropertyObject:function(a){return Blockly.ComponentTypes[this.typeName].properties[a]},rename:function(a,b){this.instanceName==a&&(this.instanceName=b,this.componentDropDown.setValue(this.instanceName),-1!=this.type.indexOf(a)&&
(this.type=this.type.replace(a,b)))},typeblock:function(){for(var a=[],b=Blockly.ComponentInstances.getInstanceNames(),c,d,e={},f=0;f<b.length;f++){c=Blockly.ComponentInstances[b[f]].typeName;e[c]=!0;d=Blockly.ComponentTypes[c].setPropertyList;for(var g=0;g<d.length;g++)a.push({translatedName:Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET+b[f]+"."+window.parent.BlocklyPanel_getLocalizedPropertyName(d[g]),mutatorAttributes:{set_or_get:"set",component_type:c,instance_name:b[f],property_name:d[g],
is_generic:"false"}});d=Blockly.ComponentTypes[c].getPropertyList;for(g=0;g<d.length;g++)a.push({translatedName:b[f]+"."+window.parent.BlocklyPanel_getLocalizedPropertyName(d[g]),mutatorAttributes:{set_or_get:"get",component_type:c,instance_name:b[f],property_name:d[g],is_generic:"false"}})}for(var h in e){d=Blockly.ComponentTypes[h].setPropertyList;for(g=0;g<d.length;g++)a.push({translatedName:Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET+window.parent.BlocklyPanel_getLocalizedComponentType(h)+
"."+window.parent.BlocklyPanel_getLocalizedPropertyName(d[g]),mutatorAttributes:{set_or_get:"set",component_type:h,property_name:d[g],is_generic:"true"}});d=Blockly.ComponentTypes[h].getPropertyList;for(g=0;g<d.length;g++)a.push({translatedName:window.parent.BlocklyPanel_getLocalizedComponentType(h)+"."+window.parent.BlocklyPanel_getLocalizedPropertyName(d[g]),mutatorAttributes:{set_or_get:"get",component_type:h,property_name:d[g],is_generic:"true"}})}return a}};
Blockly.Blocks.component_component_block={category:"Component",helpUrl:function(){return Blockly.ComponentBlock.HELPURLS[this.typeName]},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("component_type",this.typeName);a.setAttribute("instance_name",this.instanceName);return a},domToMutation:function(a){this.typeName=a.getAttribute("component_type");this.instanceName=a.getAttribute("instance_name");this.setColour(Blockly.ComponentBlock.COLOUR_COMPONENT);this.componentDropDown=
Blockly.ComponentBlock.createComponentDropDown(this);this.componentDropDown.setValue(this.instanceName);this.appendDummyInput().appendField(this.componentDropDown,"COMPONENT_SELECTOR");this.setOutput(!0,[this.typeName,"COMPONENT"]);this.errors=[{name:"checkIsInDefinition"}]},rename:function(a,b){this.instanceName==a&&(this.instanceName=b,this.componentDropDown.setValue(this.instanceName),-1!=this.type.indexOf(a)&&(this.type=this.type.replace(a,b)))},typeblock:function(){for(var a=[],b=Blockly.ComponentInstances.getInstanceNames(),
c,d=0;d<b.length;d++)c=Blockly.ComponentInstances[b[d]].typeName,a.push({translatedName:b[d],mutatorAttributes:{component_type:c,instance_name:b[d]}});return a}};Blockly.ComponentBlock.createComponentDropDown=function(a){var b=new Blockly.FieldDropdown([["",""]]);b.block=a;b.menuGenerator_=function(){return Blockly.Component.getComponentNamesByType(this.block.typeName)};b.changeHandler_=function(a){if(null!==a&&""!=a){var b=this.getValue();this.block.rename(b,a)}};return b};
Blockly.ComponentBlock.HELPURLS={Button:Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL,Canvas:Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL,CheckBox:Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL,Clock:Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL,Image:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL,Label:Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL,ListPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL,PasswordTextBox:Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL,Screen:Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL,
Slider:Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL,TextBox:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL,TinyDB:Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL,Camcorder:Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL,Camera:Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL,ImagePicker:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL,Player:Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL,Sound:Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL,VideoPlayer:Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL,
Ball:Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL,ImageSprite:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL,ContactPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL,EmailPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL,PhoneCall:Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL,PhoneNumberPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL,Texting:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL,Twitter:Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL,
AccelerometerSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL,LocationSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL,OrientationSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL,HorizontalArrangment:Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL,TableArrangement:Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL,VerticalArrangement:Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL,NxtColorSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL,
NxtDirectCommands:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL,NxtDrive:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL,NxtLightSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL,NxtSoundSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL,NxtTouchSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL,NxtUltrasonicSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL,ActivityStarter:Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL,BarcodeScanner:Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL,
BluetoothClient:Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL,BluetoothServer:Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL,Notifier:Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL,SpeechRecognizer:Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL,TextToSpeech:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL,TinyWebDB:Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL,Web:Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL,FusiontablesControl:Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL,
GameClient:Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL,SoundRecorder:Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL,Voting:Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL,WebViewer:Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL};
Blockly.ComponentBlock.PROPERTIES_HELPURLS={Button:Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL,Canvas:Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL,CheckBox:Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL,Clock:Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL,Image:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL,Label:Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL,ListPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL,
PasswordTextBox:Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL,Screen:Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL,Slider:Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL,TextBox:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL,TinyDB:Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL,Camcorder:Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL,Camera:Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL,ImagePicker:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL,
Player:Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL,Sound:Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL,VideoPlayer:Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL,Ball:Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL,ImageSprite:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL,ContactPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL,EmailPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL,PhoneCall:Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL,
PhoneNumberPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL,Texting:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL,Twitter:Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL,AccelerometerSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL,LocationSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL,OrientationSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL,HorizontalArrangment:Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL,
TableArrangement:Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL,VerticalArrangement:Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL,NxtColorSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL,NxtDirectCommands:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL,NxtDrive:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL,NxtLightSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL,NxtSoundSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL,
NxtTouchSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL,NxtUltrasonicSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL,ActivityStarter:Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL,BarcodeScanner:Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL,BluetoothClient:Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL,BluetoothServer:Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL,Notifier:Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL,
SpeechRecognizer:Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL,TextToSpeech:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL,TinyWebDB:Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL,Web:Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL,FusiontablesControl:Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL,GameClient:Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL,SoundRecorder:Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL,
Voting:Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL,WebViewer:Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL};
Blockly.ComponentBlock.EVENTS_HELPURLS={Button:Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL,Canvas:Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL,Clock:Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL,CheckBox:Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL,Image:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL,Label:Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL,ListPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL,PasswordTextBox:Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL,
Screen:Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL,Slider:Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL,TextBox:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL,TinyDB:Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL,Camcorder:Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL,Camera:Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL,ImagePicker:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL,Player:Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL,
Sound:Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL,VideoPlayer:Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL,Ball:Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL,ImageSprite:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL,ContactPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL,EmailPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL,PhoneCall:Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL,PhoneNumberPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL,
Texting:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL,Twitter:Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL,AccelerometerSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL,LocationSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL,OrientationSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL,NxtColorSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL,NxtLightSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL,
NxtSoundSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL,NxtTouchSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL,NxtUltrasonicSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL,ActivityStarter:Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL,BarcodeScanner:Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL,BluetoothClient:Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL,BluetoothServer:Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL,
Notifier:Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL,SpeechRecognizer:Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL,TextToSpeech:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL,TinyWebDB:Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL,Web:Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL,FusiontablesControl:Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL,GameClient:Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL,
SoundRecorder:Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL,Voting:Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL,WebViewer:Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL};
Blockly.ComponentBlock.METHODS_HELPURLS={Canvas:Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL,Clock:Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL,Image:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL,Label:Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL,ListPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL,PasswordTextBox:Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL,Screen:Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL,
Slider:Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL,TextBox:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL,TinyDB:Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL,Camcorder:Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL,Camera:Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL,ImagePicker:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL,Player:Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL,Sound:Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL,
VideoPlayer:Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL,Ball:Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL,ImageSprite:Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL,ContactPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL,EmailPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL,PhoneCall:Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL,PhoneNumberPicker:Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL,
Texting:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL,Twitter:Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL,AccelerometerSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL,LocationSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL,OrientationSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL,NxtColorSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL,NxtDirectCommands:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL,
NxtDrive:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL,NxtLightSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL,NxtSoundSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL,NxtTouchSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL,NxtUltrasonicSensor:Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL,ActivityStarter:Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL,BarcodeScanner:Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL,
BluetoothClient:Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL,BluetoothServer:Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL,Notifier:Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL,SpeechRecognizer:Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL,TextToSpeech:Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL,TinyWebDB:Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL,Web:Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL,
FusiontablesControl:Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL,GameClient:Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL,SoundRecorder:Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL,Voting:Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL,WebViewer:Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL};
//@ sourceURL=module_appinv.js